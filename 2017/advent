#! /usr/bin/env perl
# ex:set ai sw=4 tw=72 wm=0:
#2345678901234567890123456789012345678901234567890123456789012345678901234567890


use English;
use strict;
$^W = 1;


# day 1

my $in = "61697637962276641366442297247367117738114719863473648131982449728688116728695866572989524473392982963976411147683588415878214189996163533584547175794158118148724298832798898333399786561459152644144669959887341481968319172987357989785791366732849932788343772112176614723858474959919713855398876956427631354172668133549845585632211935573662181331613137869866693259374322169811683635325321597242889358147123358117774914653787371368574784376721652181792371635288376729784967526824915192526744935187989571347746222113625577963476141923187534658445615596987614385911513939292257263723518774888174635963254624769684533531443745729344341973746469326838186248448483587477563285867499956446218775232374383433921835993136463383628861115573142854358943291148766299653633195582135934544964657663198387794442443531964615169655243652696782443394639169687847463721585527947839992182415393199964893658322757634675274422993237955354185194868638454891442893935694454324235968155913963282642649968153284626154111478389914316765783434365458352785868895582488312334931317935669453447478936938533669921165437373741448378477391812779971528975478298688754939216421429251727555596481943322266289527996672856387648674166997731342558986575258793261986817177487197512282162964167151259485744835854547513341322647732662443512251886771887651614177679229984271191292374755915457372775856178539965131319568278252326242615151412772254257847413799811417287481321745372879513766235745347872632946776538173667371228977212143996391617974367923439923774388523845589769341351167311398787797583543434725374343611724379399566197432154146881344528319826434554239373666962546271299717743591225567564655511353255197516515213963862383762258959957474789718564758843367325794589886852413314713698911855183778978722558742329429867239261464773646389484318446574375323674136638452173815176732385468675215264736786242866295648997365412637499692817747937982628518926381939279935993712418938567488289246779458432179335139731952167527521377546376518126276";
my $len = length($in);
my $in = $in . $in;


# day 1 part 1
{
    my $sum = 0;


    foreach my $i ( 0 .. ($len - 1) )
    {
        if (substr($in, $i, 1) eq substr($in, $i + 1, 1))
        {
            $sum += substr($in, $i, 1);
        }
    }
    print "day 1 part 1 $sum matching digits\n";
}


#day 1 part 2
{
    my $sum = 0;

    foreach my $i (0 .. ($len - 1))
    {
        if (substr($in, $i, 1) eq substr($in, $i + ($len / 2), 1))
        {
            $sum += substr($in, $i, 1);
        }
    }
    print "day 1 part 2 $sum matching digits\n";
}


# day 2

my @rows = (
    [ 1236, 741,  557,  1029, 144,  101,  1968, 2159, 1399, 80,   1139, 1167, 1695, 82,   90,   2236 ],
    [ 2134, 106,  107,  1025, 584,  619,  191,  496,  80,   352,  351,  2267, 1983, 1973, 97,   1244 ],
    [ 3227, 179,  691,  3177, 172,  1636, 3781, 2020, 3339, 2337, 189,  3516, 1500, 176,  159,  3279 ],
    [ 201,  688,  364,  180,  586,  659,  623,  577,  188,  265,  403,  670,  195,  720,  115,  37   ],
    [ 1892, 1664, 2737, 2676, 849,  2514, 923,  171,  311,  218,  255,  2787, 1271, 188,  1278, 2834 ],
    [ 150,  3276, 204,  603,  3130, 587,  3363, 3306, 2890, 127,  176,  174,  383,  3309, 213,  1620 ],
    [ 5903, 3686, 200,  230,  6040, 4675, 6266, 179,  5375, 1069, 283,  82,   6210, 6626, 6398, 1954 ],
    [ 942,  2324, 1901, 213,  125,  2518, 655,  189,  2499, 160,  2841, 2646, 198,  173,  1841, 200  ],
    [ 232,  45,   272,  280,  44,   248,  50,   266,  296,  297,  236,  254,  58,   212,  276,  48   ],
    [ 563,  768,  124,  267,  153,  622,  199,  591,  204,  125,  93,   656,  198,  164,  797,  506  ],
    [ 243,  4746, 1785, 204,  568,  4228, 2701, 4303, 188,  4148, 4831, 1557, 4692, 166,  4210, 3656 ],
    [ 72,   514,  1572, 172,  1197, 750,  1392, 1647, 1587, 183,  1484, 213,  1614, 718,  177,  622  ],
    [ 1117, 97,   2758, 2484, 941,  1854, 1074, 264,  2494, 83,   1434, 96,   2067, 2825, 2160, 92   ],
    [ 2610, 1290, 204,  2265, 1374, 2581, 185,  852,  207,  175,  3308, 1500, 2898, 1120, 1892, 3074 ],
    [ 2322, 1434, 301,  2156, 98,   2194, 587,  1416, 1521, 94,   1985, 424,  91,   119,  1869, 1073 ],
    [ 66,   87,   176,  107,  2791, 109,  21,   92,   3016, 2239, 1708, 3175, 3210, 2842, 446,  484  ]
);


# day 2 part 1
{
    # Originally done as a spreadsheet.

    my $sum = 0;


    for my $row ( 0 .. $#rows )
    {
        my $min = my $max = $rows[$row][0];
        for my $col ( 1 .. 15 )
        {
            if ($min > $rows[$row][$col])
            {
                $min = $rows[$row][$col];
            }
            if ($max < $rows[$row][$col])
            {
                $max = $rows[$row][$col];
            }
        }
        $sum += $max - $min;
    }
    print "day 2 part 1 $sum checksum\n";
}


# day 2 part 2
{
    my $sum = 0;

    for my $row ( 0 .. $#rows )
    {
        for my $col ( 0 .. 14 )
        {
            for my $i ( ($col + 1) .. 15 )
            {
    #           print "row $row, col $col, i $i\n";
    #           print "row $row, col $col, i $i $rows[$row][$col], $rows[$row][$i]\n";

                my $big    = $rows[$row][$col] >= $rows[$row][$i] ? $rows[$row][$col] : $rows[$row][$i];
                my $little = $rows[$row][$col] <= $rows[$row][$i] ? $rows[$row][$col] : $rows[$row][$i];

                my $div = $big / $little;
                if ($div == int($div))
                {
    #               printf "[%d,%d] [%d,%d]: %d, %d: %d\n", $row, $col, $row, $i, $rows[$row][$col], $rows[$row][$i], $div;
                    $sum += $div;
                }
            }
        }
    }
    print "day 2 part 2 $sum checksum\n";
}


# day 3 part 1
{
    for (my $x = my $y = 0, my $i = 1; ; $i++)
    {
        my $dx = 0;
        my $dy = 0;

        if ((!$x && !$y) || (($y < 0) && (abs($x) <= -$y)))
        {
            $dx = 1;
        }
        elsif (($x > 0) && ($y < $x))
        {
            $dy = 1;
        }
        elsif (($y > 0) && (-$x < $y))
        {
            $dx = -1;
        }
        else
        {
            $dy = -1;
        }
        if ($i == 289326)
        {
            printf "day 3 part 1 %d steps\n", abs($x) + abs($y);
            last;
        }
        $x += $dx;
        $y += $dy;
    }
}


# day 3 part 2
{
    undef @rows;

    my @rows;

    my $ox = 135;
    my $oy = 135;

    for (my $x = 0; $x < 269; $x++)
    {
        for (my $y = 0; $y < 269; $y++)
        {
            $rows[$x][$y] = 0;
        }
    }

    $rows[$ox][$oy] = 1;

    for (my $x = 1, my $y = 0, my $i = 1; ; $i++)
    {
        $rows[$ox+$x][$oy+$y]
            = $rows[$ox+$x+1][$oy+$y+1]
            + $rows[$ox+$x+1][$oy+$y  ]
            + $rows[$ox+$x+1][$oy+$y-1]
            + $rows[$ox+$x  ][$oy+$y+1]
            + $rows[$ox+$x  ][$oy+$y-1]
            + $rows[$ox+$x-1][$oy+$y+1]
            + $rows[$ox+$x-1][$oy+$y  ]
            + $rows[$ox+$x-1][$oy+$y-1];

        if ($rows[$ox+$x][$oy+$y] > 289326)
        {
            printf "day 3 part 2 %d first larger\n", $rows[$ox+$x][$oy+$y];
            last;
        }

        my $dx = 0;
        my $dy = 0;

        if ((!$x && !$y) || (($y < 0) && (abs($x) <= -$y)))
        {
            $dx = 1;
        }
        elsif (($x > 0) && ($y < $x))
        {
            $dy = 1;
        }
        elsif (($y > 0) && (-$x < $y))
        {
            $dx = -1;
        }
        else
        {
            $dy = -1;
        }
        if ($i == 289326)
        {
            printf "(%2d,%2d)  (%2d,%2d)  %2d\n", $x, $y, $dx, $dy, $i;
            last;
        }
        $x += $dx;
        $y += $dy;

    }
}

# day 4

my @passPhrases = (
    "nyot babgr babgr kqtu kqtu kzshonp ylyk psqk",
    "iix ewj rojvbkk phrij iix zuajnk tadv givslju ewj bda",
    "isjur jppvano vctnpjp ngwzdq pxqfrk mnxxes zqwgnd giqh",
    "ojufqke gpd olzirc jfao cjfh rcivvw pqqpudp",
    "ilgomox extiffg ylbd nqxhk lsi isl nrho yom",
    "feauv scstmie qgbod enpltx jrhlxet qps lejrtxh",
    "wlrxtdo tlwdxor ezg ztp uze xtmw neuga aojrixu zpt",
    "wchrl pzibt nvcae wceb",
    "rdwytj kxuyet bqnzlv nyntjan dyrpsn zhi kbxlj ivo",
    "dab mwiz bapjpz jbzppa",
    "hbcudl tsfvtc zlqgpuk xoxbuh whmo atsxt pzkivuo wsa gjoevr hbcudl",
    "gxhqamx dradmqo gxhqamx gxhqamx",
    "yvwykx uhto ten wkvxyy wdbw",
    "kzc ndzatgb rlxrk hfgorm qwgdky ndzatgb rhvyene qaa wxibe qwmku nmxkjqo",
    "qwx ubca dxudny oxagv wqrv lhzsl qmsgv dxs awbquc akelgma",
    "rrdlfpk ohoszz qiznasf awchv qnvse",
    "ggsyj czcrdn oolj sibjzp ibzjps asp",
    "vbcs ypgzae xcvpsr ptvb leoxqlq zmpt fhawu yfi tvbp",
    "ejkr qlmag nsz jwpurli nhsml asksnug mes",
    "kkgkjml kklmgjk kjgpx iquytbj eccceb mfv iuyqjbt ovv",
    "uoklkco zzey sdfhiyv ytdeg",
    "azr mjv raz arz rdfb",
    "pir dafgsah dafgsah kndjbml estcz yjeoijp kkcws ebq puwno",
    "iqymwc tac vlqc bmnkz xustm leqi",
    "gwdjed cfha axz xjuq",
    "abfjsg pahat qlj zan qsfn iozfys jnvu bis jakggq",
    "afwuejn zrbu zurb hrn lwvjb jnwixla aufejnw",
    "vkqn cuzf humhriz webnf uzfc zfuc",
    "eznxd kgbfy jqyc net vzfege tprzyc",
    "mqnapzn vrgw ilzp vgw",
    "aie zkkih fhpwu bbn fhpwu wvxxgmd",
    "ksoasrn yll mvdjxdo wydymx dmodvjx drnjlm tcjpjhj xzakb wrsbuwl vaygdwf rsasonk",
    "qahbh tfhkl apdqqpm tfhkl nsox",
    "xkelwve mvdmesj xrto tgku gkb bpe",
    "nni nyylpu cyusxe zydeyok yokzdye xiscesy",
    "itwsfr eqwrx igqkvif whklwdb",
    "lpa hwci suwqfln xis sfht lzek ajecd",
    "svpf eulute eya gvmsd app claria tjtk zjt agdyemi bixewo",
    "gmzglxi zlgouy bejg kte xlf giquj mjeq ivjkw ktbhaga hoffyrt",
    "wwjy dtf ftd agei yde xhbfo fyridy",
    "gexcy hetkz ufflrfi frifluf plb kqre etxo elg henqy fspm",
    "khaemn buec ichau wxctsxg",
    "cgmv ujyvcuu jta yux ccx skrafkn cmyc yidqhv ltb ycnajry zitq",
    "ybsahqn pio veeze vdztjz iedou pio sue ijbz gvqncl vpa ijbz",
    "hkfi xzrsyke hikf mxolx xlxmo ungfc tst xjzd",
    "tpx ioprco qixlv ipocro",
    "oahmwrv homvraw vws ntmbdvx",
    "fxlg wnuz ogt bxgtul vmfh nwuz glfx tgxdq bxfv kajuh",
    "vrhqn nrqvh tgogb vya ragbro ulrz uava kexoi yav vkfe",
    "bxxy tyxgxd oabsud bauosd jlch bdmrqq wqhjwb ayblb hclj",
    "sfzsgsc sfzsgsc jbrvh sfzsgsc bdhy",
    "wixleal vhnqbfw qwfnhbv woco oowc",
    "exkkwz wekxzk krxbua nshxqgh",
    "gkn blxgui nkg gnk",
    "otsa isqn otsa isqn",
    "ude xedl ude xedl amkktp",
    "teroe yuvbd inf mpytuvz xiq xqi ovqetn",
    "zyq ybeifwx fvoqp vhoduy bcq wbxl",
    "zymiid vafcqv vjbmekf lgxkma bjti qfavcv iqp fnbu lakmgx",
    "rkaqvd vylkh jfdxh imxxg bbrt imxxg rkaqvd",
    "yajg qnhhs bzmb eyk hijcg tkij iwr jvwp dipzd jvwp",
    "btzhw zttheyo ravsbz bmbba majoe ykrs tbxqf tai cgsvpu srbavz",
    "vsyczfs ymg vsyczfs wxlwaqb oouio owek wxlwaqb azvbqiq",
    "ghrapd ghrapd wisq wisq",
    "znmleu aztnkbs wxc gycxd vqenhh geqyo rpjg",
    "kxbom gzz zzg zgz",
    "dfsesc okwb dfsesc okwb",
    "egpwqbe djlk xpkxa hoo eepbqwg",
    "nxdfror yfhkhn zgea fkspva rjgg bnmq ddsf rjgg gkinm",
    "vdrxfom wbdwu dhkt xtvzc zjobo aqvgrt",
    "svddsgz mhcrbcp wmpd mhcrbcp klim ddlnxv wrdftrc ddow wrdftrc",
    "obxr wscs new brxo wen epns cvjvxts ilnc",
    "rwezl vmbut kgblt xfg vnhlebq nzqdzxm ynh wokrezy zub nzzqxdm",
    "vephajp bzupele mltzglh sbgn vephajp lhve mltzglh",
    "slajp kyaf vlnvy srfietn ayfk inaufex fanuexi",
    "vazwg kjg qanzso ptuu vvlwq uupt kohhql jkg",
    "xmmmpky rbqimi slvxsf tlcwm pbf pks iucx rbmiqi",
    "irkup jvu tkeioz avdu suxamf",
    "tmgih ldca jswka dblzzt rap rgqyy gyrqsk nnnn pok",
    "pdbjhrl gsvxbqr nqfkhtc ngn okbgzd pdbjhrl oostjtm okbgzd",
    "mzqfdat dujh aeplzqh acbguic vlzdt amyszu amyszu jqecky bhl hjqnimq xoy",
    "dszafr bqampg epozj sfrlpe dszafr wfurku sotjpg wagtnxy",
    "jbmo jbmo plbfkvw bkc jbmo",
    "ehelldu vrid unnf vrid xqiu tbibjyi bmbpsmq tpqyefx xqiu",
    "rpgm zzbj cjgfdyb bdjfgcy rzqecd miyvfbu aqlkagf hsuxwgl",
    "gvywzp phvnd ypwypbm yfelxx egbr lcfyz hecdhkj xxfley",
    "tsmebin tbsnmie mkijj ijjmk",
    "cghxrqs vzxle wrfghv skighgt zviteab plcrgv",
    "ezdirp rxkw horcek qcgny inx nikb tigzp",
    "eidk sactjci sre vkapava owvf eyds eyds",
    "vvjdm uye tjixj azklizl pnb",
    "tcrimv xye twii xye twii tad",
    "mtxcg lwjxdj zjudqu ekoujd ysf ajtfta dkj lwjxdj",
    "aowhmvv kkic kjize fnohl ukx remfmii usbp",
    "wkossu limxmhp xnoeocb wkossu lnrlqf kjozfg xeulstx sjncsw ekaimuv xnoeocb sxjegcg",
    "lsfe zpewzlc yhjyiay lou ukhi lpwezzc slef zvtidgg kdeseq enka tfvgudr",
    "ovfsa vuv tbtorv tbtorv gmxn opspw lli mfzvkv zlyhr oznalr",
    "kugrpw sduq rdc ciaxwir ylnzwec kugrpw sduq",
    "obevuau thu jpyfvof rpawwo obevuau gsvoutr quiaei",
    "xpgua pbxa pxgau kdan",
    "ohyzqk abxgg xozgai nib axozig bni fucgykm jpkswt",
    "jrgu dmozts jrug ufpho",
    "qojzue uzeojq txuhj eqjzou",
    "wcvj qwlravl niyxf oiaptlk wlxnnzj jgdzap jgdzap lfgn bdt sfga adrypo",
    "ylah eedu rvwdpmq eedu ylah",
    "quages kmla yjqua dzxcfam srjag wujmcv qujya ssaol uzdwi",
    "gdsppz yqxlish yfkjbbf ecnzu ejvtv cdjwre",
    "slsls pcmrq zax btrc kliv ntho gymkk kkq pcrmq mvnw sjfegpx",
    "ryz jfw eki wvibww qdzylg whbagp ffrfjg wdhnqpm hcrz",
    "tcjqfh tmvzp mpztv vpmzt",
    "xood xutgof teqov fqyyub oakm rzaheiq",
    "axagoq jawbz sexucp sexucp atenr edekcwn edekcwn agl ecj gbje gipivfq",
    "poqv qopv bos flhghs gshlfh",
    "rxd dzphnb bwmna vxd rxd sbk kuor",
    "kqeelq jqbyh xczqzqe jbkmx kelqeq xqcfqn",
    "jdfy qzjyz xvqyo jdfy xvqyo",
    "vyoqyd pwayqag eygmdt smakwc veftikz fzeikvt",
    "aozgkne mpd mktgoew eepp zlwycr eepp hswbxcx nmi ddnfr eepp",
    "dgpfp cfhhqdx vjrb uyimbm byx hfdhxqc",
    "fxq jcouwfy uhuao zsab xjao",
    "noudveu egxyuqw hmnnv vovt wmqkx syatiac whkd",
    "gxyzk opgb kjxp delavq hsnvk kfn irkcfq lvc aadcwy opgb",
    "exuiupk ddiiyvm nsggpj ddiiyvm nsggpj",
    "hhjby rfejzp akxzs nconlt rynivtq voloj qwhhll ubvx yxuacz miuwxh ppe",
    "uspqvx supvxq cekv niddfuw",
    "optzcag sra ajs ozacptg yxkludq jjpvldz mxo mox",
    "dko qyec iuxbrbj dlz jxribub",
    "ywlyz vipfh amsfr fwiozi tahjov tap rsea zwlyy oqdyfbo",
    "xeqml jwy eguc bvzvh",
    "crp mxsihvo wwtg gsypx mxsihvo qpfw looca gewvy zjqki tdkuxo crp",
    "mqlnzm yihsvrl hhtwcv kigymqu yswki hksk vbiujq xeqz irzcq cpnz",
    "zxhfsw uuyhwid nzabem mmfk wszfhx shxzwf hqnrvsq",
    "hfjajdl qwmk hjdalfj mwkq gqbku dsszk",
    "fbiy pujq htgaqqq yro ztpe yiufb fnpi ggchdgz",
    "sixq jsboan eoie msdrwzw sixq njsrc sixq yimqoi",
    "pbxgv kqmi hjuk bbtrlta bqwm bgehofj ainqhm qoypsil manhiq ogebhfj lvmuo",
    "wnax aen fthpcke tcz yadjmva mydavaj rcfkc krfcc",
    "lkatiw zxliii usdj oopxl yylv bkjfy gtlyjv usdj muqazdb",
    "yqonaxv wqnvoo hfpll oyxnlfs fgajc khhtzr hfpll gsvvipz wbjxsnp dcdikt hqw",
    "vvuv kspmnz zvmryqd egvuz eazkhz kspmnz",
    "xgq dziwiym gsl nbzmsta ccbzn yalof dbbugq aar ywmbvk yofla dcwb",
    "qrtyhhw xeyo vlym ulzzbl hrxyb qeyu jqdkewk oxye evaxz kybc bssyt",
    "eqrf cfyy kwhohw ozg jsc egz jsc",
    "vct cet ixxvmz ibhvndq eks dpi jzfwdqv saeh jqzdfwv vwfdqjz",
    "vus vus kitvvgq wpi alfncf gzj oxcy fith oxcy ecbsr",
    "uacculk guwhwdp cankcv yswy bmby sve dvonm nran",
    "ydftm wszgaex rgbw otd dbet lhsxndd jqfyx",
    "vhawg hwagv uagy fveik nrsew zujw hawvg dzfmt agzgw",
    "uqdj talb uqdj aizyuqm",
    "pbbejee szdtohv tycfow xwne qzlqy dxcwejz pqdqrc wfyotc gdqt uxaeug wtldm",
    "hmzmd oyp pyo opy",
    "qwdh kwpll kwpll zsbez uxg klr uxg",
    "myqr zza kqpcos adsql eumunrv qlaeumx",
    "acyye xvdewe nwkhuz bzcmx asw ostiwk mfzu nwkhuz",
    "memq uqadd kfj dses lrxb hxygp dsse bxbr hgpxy uavrar",
    "mjmk lsdttuz qjkg yfthmkn pram",
    "pctfq aly usim shihap uims xkfgp ksrbn ifvsyl",
    "cdma nnnu hdm dhm",
    "kpt upgsm ohvrrqf qwps wjcbve ohvrrqf",
    "wowphgb nteme otizypb eumgvb puoctli opicult wbohwpg",
    "fppz ftkql sbut lkqtf svif viqhlnn buts lljhbd",
    "oqk uinby rqy vbjhf oul hzfo coca glpy brjy yglp qnvhvei",
    "sbbwr dnyrux gpikv nsx aawyeq uhtucwq rhxzy jgx bdgdrl dnyrux lgfgi",
    "agn mljz hgmglem popu jtapub agn",
    "ehfpgr bnobvg bnobvg bnobvg",
    "ozgzedn godezzn art atr",
    "urz rzu xzyc rjhwi kgiodi doiigk layr dwbxu",
    "rkcbav pnp bpsmm ifivfe csouqpw fyswzbd csouqpw bnjt rnnoxed",
    "hpjgtcc ctcpgjh cchjtgp lxn",
    "cinokbx uyaz uyaz uyaz",
    "bphfwad bphfwad bphfwad yml izlhlb dvjvo jeropar",
    "ocgftcl wshjk zbinw fcotlgc xdj nwibz",
    "zbze hllno rmq invd gupoxr gwumc vnzj fcvvhjo dnn sfsxw",
    "oqlhkz hgf yxiahks vhzvl ayshkxi irmwkmq",
    "apeqic ahwu abxjrd tuwrd pynnil eohmlgo lafx ybpofe wbznxv swuafas",
    "cpg jpsfo jposf rer ixeydpz",
    "rhqrwvn wrhqnrv xptms jhc rnqvhwr",
    "zfpl tukxzda lifkqtd ynfuno cttx ctxt tlqdkfi ueswv wbipfbe",
    "eblw bwbjg fuu qqm qtv qtv isbl denfcb",
    "ick yqwcffk pvcchd apkjyc ouu uyfe nplid ick caqscs sddkx",
    "rtzh idn snnw xmlou idn kdhenl rtzh ujwttl pkynkhe",
    "dnwha fpv dnwha iqi xggepo dnwha",
    "yjvk saay enxqhw wigoah dzasyr nnt artl iqwia jpp xmfr hwigao",
    "ryt heenuai ytr gqew hyb byh wdurx kmd adgjz",
    "ypdqeji sfkkfhn stms cdmyh nqllx utiphia gxbx zflhtgo yurztx eni",
    "pwlhlt lhlwpt rfkvlgr tucajej ckujc ntcyae xestygt eshmggk",
    "gtfb codwc vjtli ffmjwx ruoekt cylrm ktroue dfaxzvs kkgejzi ewucgu jyatrum",
    "ersbag cod xssha aqzbe kxu bzghhqk pbs bizvqk bhbbd bps",
    "vhci ypxf bxzor unngl xilpzpk civh nykora vchi",
    "cyb cceu negnld nbcfs pxsjgh xah nbcfs nbcfs jabpxg wtanv qhztvr",
    "cljgzkn lrdeina hrjoz kdgpn vqkmpal nivk scvnu vzuausp",
    "nif fin uxjbip xxztsn yyo opueh zxs qnso paedey hsd fttvqdn",
    "gbnkmpr afo aof ryyudy gbmpnrk",
    "uaa npb dkit npb buadan esv npb hwrj",
    "hws dfgq fcyty qszhu chyxxl ytmpb azxl jrsn boqrx",
    "hkzlnkd fkilvog xbubu fbgbp",
    "fgi inmay uliytc vgkcw qsoe uliytc isjhix oyir ocaq",
    "qrzkpm dpzetbr zommsxo cixg nwjyvp bet wyjpvn cgxi tsncd",
    "uvlf lufv ulfv cigl",
    "uwwf thr kdq fhjmty bvxue vcwwmk kdq nzajq bxkf",
    "qcwduju idxaja qcwduju idxaja",
    "fnarz pstzfne nco qzf kcevoo qwx csvsxga pstzfne",
    "twug xrwy uoctfl bkh yxrw",
    "unpdnbe apf cvm bpullu fyels tjpri jyw unpdnbe xfyekay vhk zpyb",
    "rbv psirdv psirdv mnjrp qpwc vicismd qpwc",
    "zjj zjj kesyhow eqcfqy vqy",
    "zazpd gmea aobl dcs mage hqjdpwc bvxr srw",
    "rhcdb nzsa jgcgc rhcdb wxs vsvvptn zvckqo wxs",
    "unyet prchn fiwter wvgknes dvzbxfs ufet neuyt fczlrx bpocdci vdsfzbx",
    "znfev fwrdarx knqkv ojiv ojiv fwrdarx",
    "tbtlo hdashg kyspxm ypmkxs nmrk",
    "fzr zqxaszt frz xzrre",
    "shueb iraetk uhsv duvah uhsv zstysc nrfllbc emrknka",
    "vzkrmp mgtkjnw njr bwjgp jdwyyhv yudha wbvmx ewu urhiioq",
    "yjq xxr swvm aipdj apjid tfsq gfqg izrvhev",
    "iljuqt fpo fxadit iljuqt iljuqt",
    "zrj poewso vsje bsprbmc vsje yfwf ybu dmkqib ybu hlrpdi ymh",
    "apxaeq bgdm mqty whyay mnuzfgk awm bgdm mwwi ekw bgdm",
    "dpdbfkm crrg mkph kphm grcr ukbk",
    "ilqm wroz mqil qlim",
    "pnlx nwadw uabelu rueamxr wjer uwge jwer ywagrx",
    "akuil nkh oitq werli werli",
    "fkmhcr ieoj xfsa xfacoeb tcg poomcme vck zmpc djcqgkf kft",
    "csyk qni hqfrye zyyxz ggynzad pjpokmu bigqa qie",
    "lkpenw zyllii qtbvdq zqnu ichftg xazped agl irhlbiy snlwfe twliar",
    "acsrba dzz ivylbl rfcdd rfcdd qcg",
    "zbui fomvpx zjhmgl sivtffu xuhswzt fzeid tgj mzok mozk afbhuje tzswxuh",
    "nupjiat fdxkbn tuatp jhdfnub yitdk yghqw nupjiat ibi edfv tuixw auwjm",
    "focht mnprh tljj ayp",
    "pjdnl uaoworh iqm gic dqlu spn heuymio",
    "kvg ferrvhp unvzsd qdcpd rji zpch",
    "nhvay chuzg pyhdd hnmrnq zeidhf pyhdd ohy hnmrnq",
    "boa sau gxh grx",
    "gwo utwpd zcsrx gow bnm",
    "xoqniyd hmithl xoqniyd hmithl",
    "yqqsbzo stca zcsjnqf skbueeu tlbkef mvqbg igzr wujuz yqqsbzo kkfe",
    "wgzuepu wge fkrxuag csenx tkngoz wge azueyxs",
    "get xiryxs xiryxs xiryxs",
    "wammvx edy hahetl xmvawm dye",
    "lscxxgi anmax quo cqprwn imocarq gnbfhe rcnqpw",
    "znpmid yaluvzn ydm ckh uhso rrk wbby lwxsu",
    "atppk byf dzz uift nqejgm njgeqm",
    "dtqmy iog ahub habu",
    "hkthdwt pfxlwsu hkthdwt hkthdwt",
    "tsuiue tsuiue yais tsuiue",
    "swooqmp rqrcs ngr vujrq inuu rqrcs",
    "dhu zxdfiyv xuz xuz mgaty mgaty",
    "kiiiz zco qdv vfgkj rders zco",
    "trszp havbm redpeqk gktp ifvzvwl yfoxnm tzg avzd otiouso eks lqlutwb",
    "cfiru lpdy kpeas mdc lxnjjqz nqyyb xkjsug rcifu dln",
    "jga ijgkjo qhbnupb ofzqn iokjjg gaj lrh pkynrcr jgatk",
    "bexwc tat tat otsngaa",
    "feh mjxbs ehf cyfhlv vvdgdu hef",
    "njlvq ojwaes awsejo ktyvxd qeyeze bpoaj ulgngn zyeqee kqc bsdzzvq",
    "hbfp vnhs vnhs pko pxnxgm",
    "bmy bzpn bzpn bcfep",
    "cju nqjy yjqn bbrj esgzw swgl bjrb",
    "cxvrshm rbglkyv kqwzcyd azqr ckwbbew fhgqv nfk lactzh ssqpwbr wbewbck",
    "ptcb gqkb apcc okl jbbgk qni bqu slydyo qhh dqd osv",
    "zbisefn bmxcljk bmxcljk arkamus vpq uxuwvb",
    "ksik xbzk lahh ctfur sxh rduokr xqou zwbgqsp skik",
    "hwhmfk hwhmfk bjpxzg qqftmu ijyv igvayf bjpxzg",
    "askxqew tibx pqaczy fhzyec echzfy cezfhy",
    "omzyy mbzfvsn kkoff qgqn crnnkn krx oqp jhn anb qte qxt",
    "jypnwn vjbnbsl axf pldxbq pdoy rmxcvig cpad yhah rzqewkg nmzkkr erjo",
    "visidzp bujlfn xuomjj mjnqn wgflg skb",
    "oer oer lfi zyqnem lfi guljz",
    "fannhwu wafma gcje cvcia qwyh ugtbpa geufqg",
    "kwtjib pqwai tdmjj kuxr euzl rxuk",
    "ovi splc hflutgw hflutgw",
    "gvel gelv aeiygth elvg twwr kivxrrj jkmqa",
    "bas ylxbdgn yliv pytkhq haujsyf fggrnbc wsgree rfnppcx key gvdzgfy evdtrrz",
    "oblab wpgm bpyy xuroy qhb adqko",
    "hneb law uzms fhhk yjymdx wjla ixfh yblh",
    "qlvsd bxsq hjaq fuwspzu hyshq idbabc rqcih ilixp wft rglf lmqm",
    "qdskj two ckd qdt hzjvd woo fmmuw",
    "kumc zywzq srafcbb ihfu kfvav",
    "qlkkrq qlkkrq qlkkrq qsc",
    "hob bpecik zqtrfz iqizeu plrer epm zqtrfz xrekeql xrekeql",
    "warszd sxyyorh sxyyorh eztjf warszd kszp",
    "hjbrax liumjue liumjue liumjue",
    "rfnqd folmiu dlicln pdyk uqd rfnqd",
    "mjdu lytfvya xomdujn leaqiyc lgemz lihfnhv zgeml koukz luqda",
    "yqsz zedjmwn aep qwbhd yqsz",
    "etg rmovps abizj yqr kib",
    "yznxec sfqkd ofkzep njr hmeym nsh xdq",
    "ryoyq heoo zuo udvfev ehoo axcnbpu oeho mfenmd shrebzy",
    "uaeh jwllsjp frkhqsy uaeh",
    "giofw hwceb euikqp ldmb kqpkxwv namazcg hqyyzgs cglsqux",
    "qledbd qledbd kbwo wgfmgp",
    "olbsca muxw nxs locsba",
    "gbxxgj xlzm gws pkpwy ofkxb sykhdo nbhrv",
    "najr bfk tbqkm hxabe nvr mdi dmuujr bfil nyripr zcydzy",
    "kiczhcn dfgylw yzkwk nytijj pceu yukj ekaol xpb uep",
    "acyyxn rwczsud acyyxn payiek inusyb rwczsud",
    "mzssokx bshs bshs ocrvlug nzsgvch riejkrd jkj mpmdgsp kvixdfq msmmx",
    "uaxy wpvhf uaaq ranp vfhwp iik kii nvh",
    "shecxef nqpx jly dzm qvmpu kxg hdg",
    "xembm yzevult ljrllc yrlskyk zas wstnz yrlskyk vasra",
    "yoaxppi kzax hvxfezf mek teo cbtlrfa ncxac yee",
    "dzfpbi cynov dje vxypba wcwww cwnu cqtp cnuw wwwcw rkzas",
    "xzwdt jcwv anb xzwdt",
    "fodgjem fmmrsfl eovsneo etzutda paw fmmrsfl jcqql",
    "yfztt alcw nwdmd afgknu njxkj zykz cvv jbnl han iatmruu trqls",
    "yas hpulrmf dzts sltg qsbw fjj rjymnnx dkkv",
    "hwjtgd abmb cfw xoumxn xnoumx cxo xnxmuo alb",
    "hnl zgdiip lrddhl fyw mporhtp waedf dltdfmc lyipoth ubmg hnl",
    "wxard wxard cibp nzquvb muuslvw igvewfh mika wxard",
    "cjqjhva rrhzy qpdc nqnyd enbdee ewrhp cqdp xekgjai",
    "axtmxb axtmxb phl urdqaar urdqaar",
    "umce jult bkart dgdvdwc kqzlzn nqkzlz umlxx cmue xvehqag wxifal",
    "lwsuc ski ubo ksi sik qwcudv",
    "husdv tssr gfp bfzbrp jtmk svvdpb uvshd zbnpdmj svpdvb",
    "nnbvf xbb dobqk xwloqca uxvqti blcwxpu kubwu nognin goywn",
    "xhe dhddftc ggltd dhddftc wspf",
    "jodq cgvnk lpl wkwwlqd prfby bpyfr tbgyqm",
    "bdebxj cuvow jdwdxw kuzh dvxmsyb dyvcxo psf kjnoe odfwgfa",
    "xpfb knzgfsi thmsnbi ymjxn bevohy xpfb",
    "hphcu fjodpdt mfsp jkvvp jvypar nlud lfv uftupcr nul dunl",
    "olz ihyhw qntr lwcbohv qntr wzralwl",
    "kfz pkjhidy msnmwz exox xexo uakipj mmznws zbbji ozispqb",
    "gfi kwdhx qqo kdxwh fig",
    "ehh rfozwr caoisw qntlk pkv zulc kpv hrqz",
    "exmlrj aacc rzb qie rzb",
    "mxyqe cuqz feyd meqyx gdvpu rqyjtvw dmoo vugdp emem",
    "advj xmnad uvh ufnbi xmnad xmnad zzwjksx chbrjas hrbp ruvyg",
    "nasrghk pmol ryko ofgakhd korf vpy nakrsgh",
    "mylyqg aeizp rnk krlwchk aaqg",
    "edxursp sosyv zesgnpx zlo sly alurdc ypmez qib aqtt lmxd",
    "ihm hwzhd jhiw raocjk nlxce yzuzu nhudri tvygl tmclg mdkz",
    "psubdis qrmxebg kdac xvl raxwfx vlx sxme",
    "tci tphdy tggam vqqiyjz sgfvdri sxhztz fhsmxx yaj ncxcxq tic",
    "xkljs cuhrm fdjqwd fuzyzh dzuzgjd lzpye lzpey",
    "jriwl ypkcxd fxrg eit okzzzsc yaykarm qzuv jurgek dzfbbfl",
    "workf rrw absfl gxluw qprdsz absfl qwqbmi amepvz oiqmy workf",
    "dxyyb brnerbx lykd oqmz ursl zqom",
    "cqtuzva aih uhaswd auhwds ktyvc hufogcg",
    "jre fhlgrse svedc prfspaj ghm qcjzfc nsd",
    "fow xyo vlvg sgg jgzvff rjxh eovre xtupnz",
    "pekj pgiecc igxd zbiqoob ovv",
    "xofxmz rdzdiq yruoqkh arfunx yruoqkh ucm bxov",
    "ctogwj lpv ivtoxkf faj ctogwj xfzluad ctogwj vvw",
    "rmc vjxj strgo tykifpp",
    "ulivozu bczond ywnmt shakc yknr psr",
    "bfx alwedh jfomlf pzj tely alwedh vccsoer rgwftcl vccsoer",
    "frkwbv uudwt qsfg onuhiml jrd usu",
    "bgdx deybefo gdj dgbx luu cbuwawd wqqtq dqmwy gin mhtfgy",
    "ohjp ykemg nrs leayrh brtipx jhop phoj",
    "utaep ywsy utaep ywsy",
    "qow dxagjwb qbki bqik",
    "larkpq bdgw mly vvwgv",
    "juar zaerof qekpe hhgd eygru epekq dhgh",
    "xpblz xksc lzue xksc yid nnve trlndn gjczngs cifqoaf",
    "fpv ekz eknldf uqjgeu awwnwxu eknldf eknldf txhxv",
    "mzvk wqtbda ovdbh vnes uiuuc uicuu bpwwtm aaat cygej nio gnl",
    "rkdkzp bjaxqif xuwx bjaxqif hgtz slkqw rkdkzp ztp xfvgk ycvg",
    "zpwr wvxzfcd opgcrfc ytxeboe rcqa ehrga lmgm",
    "brsdnk nqgkjab nbjkaqg gho zqe",
    "szbysu oqrtbp wjpuv oqrtbp oqrtbp gjmqq",
    "uoyi ctscw uoyi ggn ija",
    "fop lxa cgwpw lyvrxbe tit fop fop kfigqnu",
    "ldqmk rxo ajhrbc ahrcjb xqdk kdxq",
    "ith vdrl kvaxktm grkzmon ith ywbz kmnoiz",
    "zdoo omjo fbz dveiipw fbz",
    "ivj mcnu tkijlq xkq lrkyit cumn sfkrk numc ezxeeoi",
    "lcwzdi sbsdgdy olvc olvc bimubzf bimubzf",
    "cdjd umhwh djdc cddj oxheq veazlm",
    "gxszn zsgxn azy yaz",
    "byvmj mjybv jvxkuy akas uxyjvk",
    "whmkttq whgzm gwmzh pkvtljw zgmhw jasudeq",
    "yyjri fxsj xffmna vbal ftff rwq uszym bznil rfuctp ejndv wqr",
    "gnwzjbw dezfvq gzkhzkl ivrdvxx wfah xvivrxd qzdvfe",
    "xnfo zqzn iaod zlcclsd onxf lpskrfk nzqz kqzr kffpwak eky",
    "muc tafbzp nra gvzc xiu gvzc",
    "gfnbnyj nyjbfgn eoosw yjzf",
    "qwwls sqwwl mxph swwql",
    "twor uzjftq twro orwt",
    "qomjuob bqaim zvfqww cvqzm wwipc zsywb bsqkp aoj fus",
    "nlyd gtbgox tajlzgs bgtgxo pqt",
    "pjtmgz ulblj ussh gngagba hhtexq bjbj obe xctciay osriw obe shxri",
    "agc ejjdtak jgq moj agc iua syhxih znavmrc iih qubj",
    "zxwzwhm lipkqhz bbv birxsj gzg iefrjh mprsfs ofpltbl gbo srpmsf hirm",
    "rbpgqoe kymrf uzsut gkbtd xctpg qul hirtfl",
    "wfvg pnqhuv jayjm ftqt mbrotl aydmoc lfwlxk vpvcsi svbn bnsv",
    "jxjxza ysl kls vmt fvgunx hketl oshgie",
    "dfeyxv akx qagwayp qrs lnulrle rqs gbvd bvdg",
    "aac ndptml oke edwrg aac xechxz",
    "mpx yrb oervzb ydvkw avlt oervzb bxdqbo hzwls",
    "dsynfk dsynfk epexzjd epexzjd zofb",
    "vhe zxfolqk lkh fxt flzkxqo lztwkmo khl",
    "izlthi wtokkuz ousbpxp pvr uuxueq lvbeff mfk syjq fwgnfmg yytqesm gdd",
    "kjcg slt khz atzw twpspdx kgyk wgq hjat ntf xvhxol msvdjs",
    "ymm arrggw mmmbvrs ist arrggw nbvvc cwyacp",
    "kuzglex iemp iemp jsko iemp oqs dheqypr",
    "tzztq dsxqbow qgaeo kqn dsxqbow qqzpv",
    "ysr fctpiyn psgb gatavv zsfxoxq nynfoh qaimoj zotjk nxug syr",
    "xvm qvr hdxyhpf cbo xmv lfv wltyjlx",
    "hjq pohc xgqit tducggu zdqmnc xqgit tqxgi srfyzu vdikqx",
    "msiqte ewvp bzrv cmuy gse qqayvb bzrv qehy",
    "watdvu ametrc etlduhh vcc luehdth udavtw",
    "jktj mkq jktj mkq",
    "uekth ufjkmdi qzhge wzwcwk nvrodcc vrcdocn bhcvd",
    "xumywk zwofh kuxmyw acgzsjj hfowz njnz bnklyi",
    "hmm fexu fexu hmm",
    "zeuoarc yoa ggff jazzd mjein yhj qwo qwo",
    "rolkwf fcyat lwm wqqm juwkt wqqm udj tex xgps nyy pdbkkhb",
    "gld ksl gld bnsuhqc gld rwmybj",
    "tvyxk xgmk cri pef epf unsl yktxv",
    "muiql ejq taetjkf ejq xzmo wmv qbtmrh hkfbch taetjkf sut",
    "pqg icvv gpq tufd iixd duft",
    "zekx ybbb gzml vrbwcl opfb fkrv tto cbipr",
    "moh stkkf ynrtdf jlgb kstfk ksktf",
    "nvysvf mdtdoq bqqvr bqqvr",
    "dqyz mzoqtp gzhdgd symsq iwh bpwox",
    "pkqi jgzsrah yfjxx kdp xjaf lbj gkpixnj tyvzzso qmjbo skg nlchzbk",
    "culxfx jarwu eiwriu vwvg gvwv sgnasz",
    "kyfsn dwc sbnoe xwpgjh nbmvec dwc qjdh mpw gefimue fvqjwt kkor",
    "hcdcgxs fof flc hfpjy lii fihcao pxg xywei jwsq yxr",
    "oxrcv pda oxrcv gdvojsz kmlga mixlmp hdcabsn qvoa fwt",
    "poe joylchz humrjy cyxbqfm lyk ybrfmp qmtpqyk vtpr lyk vtpr",
    "ffswqs yxbuj tfzkmc yxbuj giog ckubbfy rtigw rtigw rpitxd",
    "kcvrn eejyftw ejytfew rnckv",
    "lvk lkv cooumh vlk",
    "loypv ukowl loypv nyoyfl vehnm uff",
    "tst sei zovy itdwibj mcbtst wcf rzp xvbtax ffzp xieenuy aegkj",
    "zkhi hvsbgza xbwtdns wypfngy lvabd pybhcd crczm buikdpo vqgon pynfwyg phbcdy",
    "ihy irxrj entmc yxfhbta xsdv xsdv",
    "ezrcv kfgm pjneez puccy gzpxdlf gkfm yucpc mli xezfug",
    "umjppkq idkiri wmnbhi unl nteyw wmnbhi zyv idkiri shhcrau",
    "dzj zveqwae ljnikvb baavr dhsohp zveqwae goq zveqwae",
    "xhc xch bmttdr snd jakd",
    "jmgnvda bdpzfw dfwpzb pimpv blqtbyo lzdzo bgrlfy anmjvdg",
    "lwvu ksg gqbtibd ksg lwvu ohfzlt foajo apyrcwj uaro",
    "vel qksrwp zei ipnvd hdua rkspqw bujf",
    "iozkiu upa knmcug zidypn yswb zswkvx naqsu",
    "tjktoe dqpt pbqi dqpt",
    "lcl tui uoizm xrdpmwi fbsuuqq tgeac hpajm tegac nczlic",
    "ntmm mskzb arem ntmm jayzfe wyurgsh eqwcqt edhska asxhjv jayzfe",
    "jyq juifidx fokzxh cgo xofhzk nhro xyccuq ioa nwk nqaxpfw",
    "cvag bpk cuo ocu buehhq tartafi ifs qwh cveurg",
    "bwut xpfni qzg cmp cid jftawv twiszmo",
    "zgxc sui kypkd vpam ymxicrw jcfbutd fgx jcfbutd",
    "tkxn rjqzljh tkxn mdwcho",
    "qbv zneocv zneocv zneocv",
    "tywf soncr lyepx qzj xdsr pdqv swt",
    "ulu rdk iomqu dgouoba icax",
    "ddsc oxilqpd ddsc atbekg ouzmxf oxilqpd kwtzz yhmyd otvi",
    "vtj llnfrpc vfighju urosrsz vurtse llnfrpc qeuo vfighju nnn smsnp tfom",
    "updfjmz ngtgi zaitq rqqhcyn ladzx zaitq fbaphyz hipe",
    "rii fpos atl tal qhubqdv lat",
    "whxzwdj yznkngr eefbmub wnxitd tnwxid zja ziewilm xylwn ihhsha lrptuyf",
    "fhmzaxv mdn udl gyv pqw qlrz flm rqtji",
    "bgn clnm cnml qyh hhf qqnur sgvigvm",
    "qjtbysc ycbqjts gbgvlz vgzlgb dgxks qbvp grji dcc",
    "wmduuq qayymzo zvh ylbipw sin ybwpli ilypwb",
    "qsvzktt qsvzktt dasmg knh gcgep qai",
    "jxukj qlgr cjssj aavqv",
    "xpxa glsdfxq ngxwon ytuue pizqu",
    "fxl vegoed tct luwm ulwm eeovdg",
    "ntmpe auasx vkwgi cryuiix dmiufo fcb ldl jauncf gyouym asjcryc",
    "lgwdcs eoxm hcrpnuf pcfnhru vlye fpurcnh uquukv vjc",
    "lfns riwpdh phwxvew hhu jfptvv ofxd hkotgfq",
    "qvuwnq wnpvs xdivrfz yaenqr fipwgl",
    "vhcexfd bishqsc gsbruxm yzccyot yjloa aptg vbr gsbruxm ihqhyz yzccyot",
    "knfst zhihi swhhq zhihi",
    "qfto abhjx abhjx bpnijn ogmqxn rclqag dmeb rdogx emfriui hyvp ogmqxn",
    "ivaemm wlsc dvjv aivemm xvf shfonv",
    "vowhosr vptlu ucrut rdynh ttqvhg rdynh abtja pnvdy puxfmf dyhd",
    "uvrenol ycuhvy ygm fjsxiwo oftstid ygm",
    "fix qrqeg dfgvlun fix iraxgtt lhgqdo eqkgshd jwmrm qrsbzba",
    "mxdj icjqzqw fvew gtvlhm mxdj",
    "cyjtkm crb pmg jwo iluc brc ttnd",
    "dasmgp ool ool opc",
    "ubi pmz mtkh ibu hlx ipcvjki sydw zpm eewfdeu oga",
    "avex yjaoghv yjaoghv lwwx",
    "kwkdst iuokd nmpw onayet zlavwnd wwvbr jtrkyku wfxx dumydgh gnd zgi",
    "ahyjnc rjakp bhabq tsmfi ahyjnc tsmfi yitqgi uwnywil shnkbn",
    "krr sbbfjtm yvunas hwppsjf ntuuzw ngyvdmt ynk nfq mfrb pyw hngr",
    "eeecesf phoo ijmx sjp kgmtg sjp wyz",
    "qwixmou oximqwu ixu lsmf",
    "dyrzq lbstdjv ldvowml qjf fqj zpabc dwmvoll jnq",
    "pdtlu hgcfvz mnwjyq ymi cvcp kmx mkx ooffp uiwg opoff uevqt",
    "hflomt fhlmto gutdbyp xyi zpggxc wqe",
    "jpsr wwex yjgdj fqah wrmmw nyrnw hcomcgv teajmu emw zrraid",
    "tvgsca bzgzkga ypsxsk dqz exmu tvgsca dqz qnd",
    "arzn hojpi bznw ejuupe bznw hojpi",
    "rids dule qaefaon sspit mtzgdls cfujw xldhimi igdoy dule",
    "nefsys plea obksngc zxqee avsi obksngc vnsxdrl gspadob avsi owmzpeh tcj",
    "oweq fkr krf rfk ztwjdry shzcmew jhna",
    "hdjizhg dfclic usds luz mcwyj luz qvomls mren otax",
    "pmzzfj pmzzfj wfxyq mqv hyp lhf",
    "dxeaw ckkey ccvawo keaf izlh oacvcw lgcpgeh kdiky",
    "xkwe xekw kwex tzfyx",
    "dmmyt mtdnqw pdw vdav ofrtsk",
    "klz zlk snxnihg snhigxn zkynpd",
    "ijzce xobf uojezxi xiuojez",
    "ztepv zvpet nije aditjlg natkkk dtitg jprgia",
    "fesuh wadrhc bayf kktfaf nxvhq smbdaop gqx ioez fkjufb abyf",
    "hej sta pztkcd pesabzz szp iada iada cdae hej sqst luf",
    "xlnuhn oljaf fljao ascxez fojal",
    "dprclb fzn wgauz rxewtp cjrlgz zfn",
    "fidwoa mvoqy afian ntzokap mkplgy jfukgjv cyfsz",
    "hbvqnnt giinuzq uezugy qooxjc zsxr rnihg ipbels",
    "qroi wtltjq suj tqit bxtc jidzhpe nizp wtltjq nadcdm wwyhjrg",
    "qtr fkbl bpptu baen awjpwsg vvqbxz animt uqbk zvbxvq",
    "nznq fdiul jbv umyrf yufrm hrl duilf",
    "bkvlfuw onkqzeo iwrg rifqzhj mgroul rnor qqqc sbfi hny zosfp kopxb",
    "nvifbx jbowbj fnyskt jbowbj xvun xvun",
    "piyl haajm stwzpp xvjg amjah",
    "gye efwwwiv kyv zmtcgmi ifwvwew",
    "dflx gdtb jyoj jyoj dflx aqhycgi xffnn",
    "inc mpys mzqmcwx vryz ibqrzc pmsy fat rojpxwy rcbqzi gjef",
);


# day 4 part 1
{
    my $sum = 0;
    foreach (@passPhrases)
    {
        my @phrase = split;
        my $valid = 1;
        my %phrase;
        foreach my $word (@phrase)
        {
            if (defined($phrase{$word}))
            {
                $valid = 0;
                last;
            }
            $phrase{$word} = 1;
        }
        $sum += $valid;
    }
    print "day 4 part 1 $sum valid phrases\n";
}


# day 4 part 1
{
    my $sum = 0;
    foreach (@passPhrases)
    {
        my @phrase = split;
        my $valid = 1;
        my %phrase;
        foreach my $word (@phrase)
        {
            $word = join '', sort {$a cmp $b } split(//, $word);
            if (defined($phrase{$word}))
            {
                $valid = 0;
                last;
            }
            $phrase{$word} = 1;
        }
        $sum += $valid;
    }
    print "day 4 part 2 $sum valid phrases\n";
}


# day 5
my @day5Jumps = (
    2,
    1,
    2,
    -2,
    -2,
    1,
    1,
    2,
    -2,
    0,
    -3,
    -9,
    0,
    0,
    2,
    -12,
    -1,
    -12,
    0,
    -16,
    -14,
    -14,
    -3,
    -9,
    -11,
    0,
    -23,
    -21,
    2,
    -4,
    -28,
    -27,
    -4,
    -19,
    -9,
    -8,
    -25,
    -27,
    -1,
    -29,
    -13,
    0,
    -29,
    -29,
    -35,
    2,
    -3,
    2,
    -2,
    -46,
    -18,
    1,
    -47,
    -6,
    -27,
    -47,
    -43,
    -40,
    -25,
    -37,
    -4,
    -31,
    1,
    -6,
    -2,
    -38,
    -1,
    -66,
    -33,
    -48,
    -47,
    -9,
    -58,
    -7,
    -57,
    -35,
    -61,
    -11,
    0,
    -76,
    0,
    -80,
    -77,
    -72,
    -5,
    -47,
    -38,
    -16,
    -28,
    -47,
    -19,
    -42,
    -15,
    -88,
    -34,
    -50,
    -12,
    -54,
    -63,
    -95,
    -1,
    -66,
    -48,
    -14,
    -34,
    -72,
    -63,
    -101,
    -102,
    -107,
    -37,
    -75,
    -28,
    -23,
    -14,
    -61,
    -108,
    -71,
    -113,
    -96,
    -26,
    -28,
    -92,
    -64,
    -47,
    -74,
    -9,
    -113,
    -126,
    -61,
    -36,
    -40,
    -26,
    -73,
    -7,
    -99,
    -3,
    -15,
    -127,
    -104,
    -89,
    -67,
    -81,
    -8,
    -63,
    -109,
    -57,
    -81,
    -101,
    -57,
    -94,
    -78,
    -82,
    -9,
    -118,
    -34,
    -93,
    -147,
    -41,
    0,
    -44,
    -57,
    -11,
    -22,
    -86,
    -6,
    -55,
    -47,
    -49,
    -124,
    -139,
    -144,
    -7,
    -23,
    -128,
    -97,
    -27,
    -151,
    -104,
    -94,
    -177,
    -165,
    -136,
    -167,
    -53,
    -15,
    -8,
    -72,
    2,
    -4,
    -44,
    -15,
    -177,
    -188,
    -142,
    -71,
    -161,
    -81,
    -169,
    -150,
    -144,
    -193,
    -143,
    -185,
    -33,
    -21,
    -198,
    -97,
    -55,
    -50,
    -183,
    -94,
    -77,
    -138,
    -195,
    -146,
    -4,
    -193,
    -132,
    -88,
    -93,
    -67,
    -100,
    -162,
    -107,
    -17,
    -108,
    -213,
    -123,
    -49,
    -191,
    -180,
    -73,
    -182,
    -125,
    -176,
    -65,
    -189,
    -131,
    -18,
    -145,
    -197,
    -136,
    -53,
    -60,
    -209,
    -67,
    -244,
    -163,
    -246,
    -153,
    -16,
    -231,
    -68,
    -165,
    -42,
    -3,
    -9,
    -178,
    -250,
    -37,
    -128,
    -99,
    -145,
    -234,
    -167,
    -123,
    -222,
    -101,
    -46,
    -52,
    -129,
    -155,
    -85,
    -122,
    -228,
    -150,
    -237,
    -173,
    -29,
    -24,
    -175,
    -229,
    -106,
    -236,
    -234,
    -246,
    -90,
    -105,
    -274,
    -211,
    -94,
    -285,
    -201,
    -92,
    -204,
    -215,
    -115,
    -213,
    -218,
    -2,
    -122,
    -176,
    -2,
    -35,
    -143,
    2,
    -190,
    -216,
    -38,
    -247,
    -309,
    -18,
    -119,
    -198,
    -275,
    -91,
    -151,
    -195,
    -299,
    -192,
    -25,
    -162,
    -37,
    -70,
    -30,
    -42,
    -249,
    -156,
    -319,
    -317,
    -264,
    -19,
    -47,
    -38,
    -235,
    -184,
    -25,
    -43,
    -127,
    -168,
    -138,
    -35,
    -24,
    -257,
    -30,
    -259,
    -22,
    -69,
    -80,
    0,
    -212,
    -41,
    -20,
    -90,
    -196,
    -169,
    -47,
    -238,
    -320,
    -132,
    -348,
    -301,
    -242,
    -353,
    -63,
    -51,
    -33,
    -270,
    -196,
    -334,
    -160,
    -63,
    -177,
    -42,
    -30,
    -216,
    -219,
    -155,
    -146,
    -192,
    -113,
    -368,
    -349,
    -330,
    -33,
    -4,
    -302,
    -119,
    -387,
    -336,
    2,
    -201,
    -344,
    1,
    -6,
    -339,
    -311,
    -79,
    -55,
    -67,
    -118,
    -257,
    -215,
    -141,
    -40,
    -117,
    -28,
    -345,
    -312,
    -60,
    -57,
    -43,
    -193,
    -134,
    -144,
    -28,
    -11,
    -138,
    -48,
    -167,
    -76,
    -99,
    -51,
    -283,
    -174,
    -159,
    -72,
    -55,
    -155,
    -343,
    -226,
    -195,
    -364,
    -39,
    -368,
    -117,
    -256,
    -42,
    -172,
    -236,
    -231,
    -133,
    -36,
    -442,
    -178,
    -101,
    -213,
    -142,
    -266,
    -305,
    -95,
    -341,
    -227,
    -217,
    -162,
    -1,
    -168,
    -384,
    -424,
    2,
    -394,
    -96,
    -458,
    -258,
    -232,
    0,
    -283,
    -393,
    -211,
    0,
    -466,
    -431,
    -455,
    -430,
    -459,
    0,
    -235,
    -96,
    -371,
    -479,
    -117,
    -39,
    -291,
    -220,
    -403,
    -325,
    -433,
    -189,
    -275,
    -58,
    -109,
    -191,
    -175,
    -416,
    -61,
    -269,
    -411,
    -330,
    -497,
    -487,
    -393,
    -417,
    -275,
    -157,
    -208,
    -196,
    -330,
    -427,
    -361,
    -304,
    -385,
    -16,
    -175,
    -250,
    -101,
    -256,
    -186,
    -369,
    -328,
    -322,
    -190,
    -135,
    -71,
    -455,
    -303,
    -287,
    -95,
    -55,
    -446,
    -489,
    -329,
    -410,
    -372,
    -36,
    -7,
    -407,
    -455,
    -347,
    -160,
    -376,
    -515,
    -414,
    -433,
    -107,
    -508,
    -156,
    -111,
    -81,
    -382,
    -203,
    -3,
    -109,
    -163,
    -61,
    -313,
    -516,
    -277,
    -306,
    -166,
    -286,
    -437,
    -100,
    -117,
    -556,
    -248,
    -326,
    -550,
    -424,
    -21,
    -524,
    -27,
    -69,
    -244,
    -303,
    -124,
    -299,
    -434,
    -364,
    -543,
    -233,
    -189,
    -279,
    -159,
    -49,
    -112,
    -291,
    -173,
    -143,
    -482,
    -202,
    -446,
    -226,
    -439,
    -496,
    -568,
    -171,
    -376,
    -80,
    -189,
    -495,
    -67,
    -22,
    -470,
    -330,
    -329,
    -259,
    -30,
    -201,
    -591,
    -543,
    -33,
    -591,
    -3,
    -493,
    -614,
    -579,
    -283,
    -251,
    -518,
    -230,
    -408,
    -87,
    -438,
    -551,
    -521,
    -424,
    0,
    -552,
    -87,
    -311,
    -570,
    -250,
    -552,
    -316,
    -239,
    -628,
    -508,
    -142,
    -56,
    -288,
    -38,
    -567,
    -477,
    -195,
    -337,
    -23,
    -78,
    -237,
    -569,
    -533,
    -345,
    -220,
    -16,
    -223,
    -565,
    -488,
    -152,
    -517,
    -448,
    -563,
    -73,
    -153,
    -275,
    -186,
    -308,
    -576,
    -64,
    -293,
    -118,
    -138,
    -422,
    -645,
    -302,
    -193,
    -171,
    -190,
    -218,
    -330,
    -96,
    -454,
    -343,
    -399,
    -327,
    -484,
    -379,
    -362,
    -484,
    -477,
    -490,
    -243,
    -551,
    -649,
    -418,
    -54,
    -137,
    -355,
    -624,
    -18,
    -294,
    -333,
    -425,
    -540,
    -322,
    -77,
    -201,
    -550,
    -318,
    -571,
    -396,
    -616,
    -626,
    -404,
    -105,
    -661,
    -538,
    -398,
    -690,
    -353,
    -445,
    -523,
    -72,
    -1,
    -502,
    -711,
    -274,
    -81,
    -272,
    -644,
    -598,
    -593,
    -716,
    -355,
    -620,
    -550,
    -427,
    -647,
    -723,
    -275,
    -500,
    -49,
    -4,
    -575,
    -268,
    -336,
    -674,
    -742,
    -285,
    -672,
    -622,
    -591,
    -421,
    -574,
    -167,
    -38,
    -314,
    -597,
    -255,
    -277,
    -651,
    -571,
    -153,
    -292,
    -5,
    -101,
    -348,
    -48,
    -119,
    -448,
    -685,
    -389,
    -471,
    -646,
    -285,
    -239,
    -249,
    -465,
    -198,
    -43,
    -522,
    -19,
    -82,
    -240,
    -521,
    -136,
    -586,
    -195,
    -446,
    -587,
    -58,
    -263,
    -550,
    -449,
    -220,
    -39,
    -691,
    -386,
    -199,
    -96,
    -144,
    -151,
    -593,
    -237,
    -414,
    -238,
    -377,
    -280,
    -638,
    -729,
    -235,
    -603,
    -214,
    -245,
    -714,
    -323,
    -297,
    -558,
    -416,
    -388,
    -271,
    -622,
    -62,
    -726,
    -242,
    -550,
    -277,
    -709,
    -62,
    -266,
    -632,
    -411,
    -327,
    -574,
    -183,
    -467,
    -332,
    -804,
    -693,
    -809,
    -240,
    -496,
    -380,
    -749,
    -466,
    -738,
    -761,
    -832,
    -398,
    -105,
    -675,
    -772,
    -136,
    -4,
    -46,
    -58,
    -836,
    -688,
    -722,
    -466,
    -346,
    -117,
    -183,
    -330,
    -794,
    -101,
    -253,
    -2,
    -519,
    -113,
    -115,
    -439,
    -118,
    -398,
    -326,
    -409,
    -723,
    -719,
    -354,
    -200,
    -647,
    -520,
    -29,
    -130,
    -564,
    -880,
    -823,
    -309,
    -352,
    -822,
    -326,
    -302,
    -452,
    -281,
    -467,
    -316,
    -115,
    -623,
    -625,
    -142,
    -262,
    -382,
    -85,
    -743,
    -340,
    -50,
    -270,
    -118,
    -683,
    -218,
    -595,
    -217,
    -371,
    -397,
    -443,
    -755,
    -909,
    -378,
    -843,
    -644,
    -303,
    -642,
    -798,
    -90,
    -562,
    2,
    -733,
    -792,
    -235,
    -536,
    -132,
    -481,
    -386,
    -795,
    -167,
    -145,
    -725,
    -403,
    -533,
    -761,
    -599,
    -732,
    -719,
    -250,
    -239,
    -626,
    -318,
    -135,
    -756,
    -308,
    -287,
    -130,
    -277,
    -265,
    -709,
    -252,
    -679,
    -126,
    -794,
    -6,
    -194,
    -715,
    -703,
    -373,
    -481,
    -928,
    -710,
    -155,
    -431,
    -780,
    -658,
    -897,
    -947,
    -55,
    -271,
    -927,
    -554,
    -165,
    -763,
    -895,
    -329,
    -132,
    -293,
    -134,
    -524,
    -824,
    -277,
    -187,
    -849,
    -193,
    -167,
    -175,
    -125,
    -489,
    -36,
    -960,
    -931,
    -533,
    -9,
    -599,
    -589,
    -795,
    -418,
    -679,
    -793,
    -592,
    -24,
    -100,
    -664,
    -382,
    -524,
    -549,
    -124,
    -899,
    -583,
    -470,
    -897,
    -309,
    -886,
    -291,
    -971,
    -123,
    -122,
    -841,
    -218,
    -62,
    -434,
    -113,
    -138,
    -358,
    -569,
    -182,
    -839,
    -621,
    -596,
    -977,
    -297,
    -590,
    -738,
    -503,
    -334,
    -756,
    -245,
    -505,
    -107,
    -376,
    -958,
    -937,
    -986,
    -942,
    -589,
    -541,
    -612,
    -932,
    -314,
    -114,
    -213,
    -922,
    -31,
    -380,
    -152,
    -512,
    -521,
    -34,
    -613,
    -759,
    -781,
    -256,
    -297,
    -155,
    -853,
    -169,
    -842,
    -567,
    -533,
    -709,
    -19,
    -517,
    -542,
    -376,
    -149,
    -934,
    -496,
    -782,
    -469,
    -320,
    -219,
    -902,
    -155,
    -971,
    -1074
);


# day 5 part 1
{
    my @jumps = @day5Jumps;
    my $ip = 0;
    my $steps = 0;
    while (defined($jumps[$ip]))
    {
        my $t = $jumps[$ip] + $ip;
        $jumps[$ip]++;
        $ip = $t;
        $steps++;
    }
    printf "day 5 part 1 %d steps\n", $steps;
}


# day 5 part 2
{
    my @jumps = @day5Jumps;
    my $ip = 0;
    my $steps = 0;
    while (defined($jumps[$ip]))
    {
        my $t = $jumps[$ip] + $ip;
        $jumps[$ip] += ($jumps[$ip] >= 3) ? -1 : 1;
        $ip = $t;
        $steps++;
    }
    printf "day 5 part 2 %d steps\n", $steps;
}


# day 6 parts 1 and 2
{
    my @blocks = (0, 5, 10, 0, 11, 14, 13, 4, 11, 8, 8, 7, 1, 4, 12, 11);
    my @seen;
    push @seen, sprintf(
        "%4d%4d%4d%4d%4d%4d%4d%4d%4d%4d%4d%4d%4d%4d%4d%4d",
        $blocks[ 0],
        $blocks[ 1],
        $blocks[ 2],
        $blocks[ 3],
        $blocks[ 4],
        $blocks[ 5],
        $blocks[ 6],
        $blocks[ 7],
        $blocks[ 8],
        $blocks[ 9],
        $blocks[10],
        $blocks[11],
        $blocks[12],
        $blocks[13],
        $blocks[14],
        $blocks[15]
    );
    #say STDERR @seen[0];
    my $steps = 0;

    Day6Part1: for (;;)
    {
        my $max;
        my $indexOfMax;
        my $i;

        # find first max
        for ($max = $blocks[0], $indexOfMax = 0, my $i = 1; $i <= $#blocks; $i++)
        {
            if ($blocks[$i] > $max)
            {
                $max = $blocks[$i];
                $indexOfMax = $i;
            }
        }
    #   print STDERR "max $max, indexOfMax $indexOfMax\n";

        # We have the first largest blocks.  Redistribute.
        $blocks[$indexOfMax] = 0;
        while ($max)
        {
            $indexOfMax = ($indexOfMax + 1) & 15;
            $blocks[$indexOfMax]++;
            $max--;
        }

        #Have we seen @blocks before?
        my $try = sprintf(
            "%4d%4d%4d%4d%4d%4d%4d%4d%4d%4d%4d%4d%4d%4d%4d%4d",
            $blocks[ 0],
            $blocks[ 1],
            $blocks[ 2],
            $blocks[ 3],
            $blocks[ 4],
            $blocks[ 5],
            $blocks[ 6],
            $blocks[ 7],
            $blocks[ 8],
            $blocks[ 9],
            $blocks[10],
            $blocks[11],
            $blocks[12],
            $blocks[13],
            $blocks[14],
            $blocks[15]
        );
    #   say STDERR $try;
        $steps++;
        for (my $i = 0; $i <= $#seen; $i++)
        {
            if ($seen[$i] eq $try)
            {
                printf "day 6 part 1 %d cycles\n", $steps;
                printf "day 6 part 2 %d cycles\n", $steps - $i;
                last Day6Part1;
            }
        }
        push @seen, $try;
    }
}


# day 7
my %weights = (
    "hndzyx" => 28,
    "kdelzk" => 399,
    "uylvg" => 403,
    "jiyqd" => 842,
    "mxmzyac" => 67,
    "wspoq" => 19,
    "obqyrh" => 55,
    "inzzz" => 94,
    "mgraypm" => 108,
    "eiqvo" => 87,
    "kienpis" => 32,
    "ohjesb" => 115,
    "vthvyt" => 28,
    "vmyqa" => 5,
    "whavaec" => 79,
    "kpkcku" => 169,
    "amtxnd" => 99,
    "yauplaz" => 5,
    "saaggxs" => 399,
    "kddqkkz" => 348,
    "tgcmyr" => 63,
    "fhjpe" => 52,
    "tlirtlm" => 47,
    "xvkdd" => 15,
    "ybneks" => 12594,
    "nwuxy" => 44,
    "trepya" => 17,
    "ibzuz" => 11301,
    "acwne" => 28,
    "fcmspin" => 11992,
    "pbwmrq" => 286,
    "ivucxwy" => 64,
    "abaox" => 123,
    "udpwvnp" => 64,
    "fddgtmo" => 13,
    "gcult" => 71,
    "bykobk" => 1224,
    "xrzdoz" => 84,
    "wwtxe" => 9,
    "cafeffy" => 311,
    "lqimnfv" => 58,
    "jjdzuw" => 9,
    "nbmup" => 360,
    "zmukql" => 24,
    "tdxsvy" => 20,
    "qxtttuu" => 80,
    "fufgis" => 196,
    "tgken" => 84,
    "leymr" => 98,
    "rwhbcy" => 171,
    "lncyf" => 93,
    "yhzue" => 994,
    "lkfjzec" => 22,
    "khydeiy" => 53,
    "laxksv" => 35,
    "cmgap" => 28,
    "risnzi" => 84,
    "xmnqwd" => 249,
    "wvrvgio" => 22,
    "vycfxv" => 20,
    "hacbd" => 93,
    "evmfp" => 254,
    "hrxxih" => 50,
    "jybwslx" => 1227,
    "mnvip" => 79,
    "kfvzter" => 233,
    "pmtkuu" => 71,
    "vlujgrg" => 72,
    "hweuik" => 213,
    "hymjivf" => 28,
    "hdpqb" => 115,
    "eqcmflu" => 73,
    "euhmwat" => 89,
    "ywdvft" => 333,
    "kcfqe" => 33,
    "csirnil" => 43,
    "zzlopja" => 2024,
    "sakrb" => 82,
    "vpfaa" => 79,
    "hlsoeh" => 2786,
    "ggdcjbd" => 120,
    "qpyiycr" => 49,
    "vhyiaf" => 96,
    "ysmrs" => 24,
    "pdwwc" => 235,
    "knmdxw" => 57,
    "jijjnbw" => 34,
    "uynpswf" => 98,
    "gxxwgu" => 73,
    "fmufi" => 124,
    "tzyav" => 40,
    "ystegvn" => 33,
    "xfyybbx" => 56,
    "eyjif" => 84,
    "ojjnnko" => 572,
    "cscdc" => 171,
    "nczrlw" => 2351,
    "srozv" => 47,
    "kinfgwy" => 84,
    "qlscb" => 37,
    "zlgewg" => 80,
    "ibqev" => 78,
    "edkcs" => 33,
    "gneen" => 33,
    "zmtzfbt" => 68,
    "wnxbu" => 295,
    "qbsvwcc" => 45,
    "lclup" => 94,
    "wycdpt" => 170,
    "wxjne" => 287,
    "ibuzkf" => 18,
    "wqhxpu" => 63,
    "gpmfjj" => 113,
    "sowli" => 43,
    "rtfmatr" => 6,
    "knxli" => 53,
    "yhcsmfs" => 88,
    "sthzqgi" => 17,
    "jujtux" => 99,
    "rpagi" => 166,
    "cqrqt" => 52,
    "jgtnj" => 15,
    "xrdkdkq" => 435,
    "yfcnm" => 54,
    "wkdquda" => 78,
    "ogexy" => 85,
    "rodlg" => 77,
    "ohavz" => 100,
    "znwmy" => 50,
    "zyvdjl" => 25,
    "fkgjr" => 38,
    "qyyiyo" => 63,
    "lzgcs" => 98,
    "nfrnbw" => 460,
    "eujco" => 71,
    "ickkf" => 50,
    "ipwjrx" => 71,
    "ijynzc" => 271,
    "rnwcn" => 69,
    "ojijdav" => 19,
    "ivnla" => 143,
    "ensst" => 6,
    "yjldllm" => 128,
    "drqjijj" => 37,
    "efwflo" => 249,
    "cxrmuo" => 50,
    "tvoqmae" => 15,
    "jurdmpq" => 77,
    "mowtdty" => 53,
    "cteerd" => 85,
    "hqbad" => 404,
    "pofvr" => 72,
    "ibixfz" => 28,
    "fdbyixt" => 167,
    "wyovcqf" => 47,
    "hgaupyo" => 32,
    "xirit" => 25,
    "ahatk" => 13,
    "wtuse" => 163,
    "mphoskw" => 1275,
    "ehucp" => 25,
    "rzwqxgp" => 76,
    "dwlqul" => 44,
    "csprk" => 1148,
    "hzpagsa" => 89,
    "uoghp" => 153,
    "pbtuupy" => 42,
    "ykcmzu" => 1370,
    "ucafi" => 51,
    "sqwioau" => 19,
    "ewbfx" => 10,
    "qnbyib" => 86,
    "wvcui" => 35,
    "lgjkmc" => 57,
    "junpjcj" => 96,
    "zdlyf" => 70,
    "ksbrn" => 58,
    "jrrrwqw" => 19,
    "xtqrjc" => 14,
    "foyeln" => 45,
    "soyzhei" => 74,
    "crgver" => 64,
    "xsygurk" => 242,
    "ugrxr" => 151,
    "nzzzh" => 22,
    "iwovx" => 36,
    "tfqvoz" => 185,
    "yiwyghj" => 1246,
    "tovve" => 94,
    "hcjoif" => 67,
    "kzbgh" => 68,
    "osnpcl" => 94,
    "kpwgdrt" => 263,
    "cdewiot" => 28,
    "iglpkvv" => 353,
    "hgbgr" => 220,
    "putdy" => 21,
    "bwdstyz" => 62,
    "yofqkfe" => 973,
    "zevpw" => 72,
    "nsrsjtk" => 237,
    "vgxle" => 142,
    "ubiagvr" => 191,
    "jriph" => 1998,
    "pbkyjk" => 179,
    "gqrjzf" => 158,
    "lwnpt" => 43,
    "ejucumc" => 6,
    "imzjzf" => 257,
    "eypmjnl" => 82,
    "vzglbr" => 33,
    "mlslqa" => 162,
    "piuudr" => 88,
    "rcsthxt" => 220,
    "kixinqo" => 62,
    "prgfkm" => 85,
    "enlnjb" => 88,
    "dcrhafq" => 28,
    "qkhwa" => 2607,
    "emxti" => 5,
    "dkhddzb" => 82,
    "ffvsvb" => 73,
    "nlaym" => 178,
    "lgyab" => 295,
    "wprvgb" => 46,
    "sjsqaol" => 48,
    "uzifsnw" => 84,
    "voytx" => 172,
    "ruroup" => 53,
    "lssxhxw" => 8,
    "pheyymh" => 78,
    "zagsm" => 70,
    "ivvcytp" => 63,
    "lhcndy" => 134,
    "ijjri" => 6,
    "vzttnzk" => 117,
    "xqzsy" => 464,
    "jkbuq" => 29619,
    "pvuno" => 58,
    "tpxvyjx" => 92,
    "alwsn" => 77,
    "ioypyd" => 47,
    "zgjhbp" => 79,
    "dlfghsv" => 84,
    "zddmfy" => 60,
    "qcbtref" => 61,
    "gabpxsf" => 1503,
    "hfrgc" => 67,
    "ytxusu" => 1914,
    "yvdidmd" => 21,
    "iutqxkf" => 8,
    "kutxof" => 22,
    "ziouqpy" => 142,
    "sxxod" => 88,
    "lohgt" => 98,
    "ewbngna" => 15,
    "ffuxvj" => 83,
    "ulqloyn" => 79,
    "bazfmo" => 492,
    "qhaxz" => 21,
    "fsfdbgt" => 77,
    "agdmzu" => 41,
    "thblrfo" => 148,
    "becfiz" => 97,
    "tzuiasi" => 91,
    "scjek" => 57,
    "wrhfj" => 46,
    "dxllc" => 44,
    "msxnc" => 81,
    "lswznxp" => 24,
    "vojtq" => 60,
    "ecrdh" => 63,
    "fymxr" => 77,
    "mfvdags" => 72,
    "wpmef" => 75,
    "qomycms" => 222,
    "roedr" => 77,
    "vbhmz" => 73,
    "hmonryr" => 344,
    "qdbendr" => 67,
    "seffc" => 98,
    "geqrhsr" => 76,
    "txxjkb" => 306,
    "cozmd" => 33,
    "vikpkr" => 233,
    "tabwkx" => 91,
    "wlpnxme" => 72,
    "mhgzc" => 60,
    "sfeepek" => 28,
    "dcpgsg" => 58,
    "upapd" => 161,
    "kyukz" => 10,
    "hihltxf" => 44,
    "jmypi" => 32,
    "mrfswq" => 99,
    "ltalmp" => 51,
    "szymk" => 28,
    "qhnifn" => 287,
    "nggfb" => 200,
    "cjgtg" => 343,
    "iqvnyzy" => 55,
    "wltxoge" => 318,
    "uczyc" => 93,
    "elvjpjr" => 32,
    "agfzkj" => 329,
    "cmqglh" => 84,
    "rzopy" => 61,
    "sbocc" => 48,
    "ihjyjx" => 11,
    "jpwhcjy" => 77,
    "radwgcq" => 46,
    "fpkgx" => 88,
    "fpiatig" => 2611,
    "jnlnsk" => 1966,
    "qxqwvi" => 99,
    "wmyojtm" => 260,
    "bsbjxg" => 9,
    "adyogf" => 99,
    "upsbm" => 19,
    "ynpehry" => 46,
    "vjupomu" => 38,
    "pvxzi" => 79,
    "knxyay" => 22,
    "wtluvr" => 88,
    "nadjis" => 284,
    "mozwqgu" => 24,
    "cufloa" => 7,
    "zqbkt" => 905,
    "xwudzc" => 284,
    "npehrzk" => 77,
    "tmakl" => 51,
    "ocyjmcy" => 43,
    "jmtqh" => 191,
    "chpxtc" => 71,
    "ujpttyx" => 73,
    "qywnr" => 253,
    "uvybtgx" => 344,
    "cuvke" => 18,
    "svprq" => 85,
    "sgoseob" => 38,
    "ghhwci" => 9294,
    "znltrss" => 19,
    "pbncc" => 81,
    "ioyibl" => 77,
    "lwkbk" => 56,
    "ktlhztg" => 328,
    "gavzkq" => 15,
    "jdpfhyl" => 13,
    "mpyhy" => 263,
    "auqjapr" => 45,
    "caufkxz" => 55,
    "sbgsxdw" => 38,
    "rtckpbz" => 67,
    "yqewlf" => 92,
    "loukhc" => 80,
    "xrvcjq" => 212,
    "zfqvkc" => 77,
    "tqpgecy" => 76,
    "xcrejqf" => 5,
    "rrvihye" => 36,
    "rbast" => 28,
    "bcygph" => 10,
    "ubfljy" => 95,
    "omdnuon" => 70,
    "mmyaot" => 61,
    "jwcsw" => 367,
    "gnqdxl" => 66,
    "qipkli" => 218,
    "rakjhe" => 103,
    "rzuig" => 90,
    "iewgymm" => 10,
    "pqiivg" => 191,
    "sswszre" => 78,
    "vihkn" => 63,
    "efuzst" => 72,
    "nbtxoam" => 83,
    "lerrsh" => 38,
    "myvyjck" => 86,
    "daxxjtz" => 445,
    "wefmw" => 88,
    "qlezcmj" => 44,
    "jvhvlo" => 230,
    "tplrep" => 20,
    "asvbb" => 67,
    "diqon" => 862,
    "dmswq" => 75,
    "ietond" => 42,
    "tjwtl" => 87,
    "kdsmtx" => 78,
    "tplgx" => 76,
    "kbzfvrp" => 2091,
    "ljtub" => 25,
    "irupq" => 60,
    "ubzly" => 253,
    "rjrlumz" => 72,
    "dyrpzor" => 78,
    "lmtisu" => 51,
    "cqrwox" => 80,
    "jhxsez" => 7,
    "uxzql" => 84,
    "upjapf" => 77,
    "watsby" => 84,
    "adetez" => 46,
    "wxpagp" => 19,
    "hzjcwc" => 17,
    "bmfkrnb" => 87,
    "qljvi" => 237,
    "chvari" => 88,
    "qhxasm" => 47,
    "ektvj" => 46,
    "feywd" => 2062,
    "fjcbsj" => 97,
    "hzfgjnm" => 56,
    "uidqcn" => 84,
    "oagdsv" => 235,
    "vcitv" => 1040,
    "dbqwqo" => 13,
    "lnozan" => 166,
    "lhcegk" => 85,
    "taapm" => 58,
    "tntwm" => 79,
    "ovozt" => 70,
    "meuoa" => 90,
    "wzrpo" => 28,
    "lzmldaf" => 71,
    "oaonzl" => 95,
    "stvho" => 6,
    "xcerg" => 19,
    "denjcv" => 8,
    "budzpo" => 22,
    "wpmoil" => 54,
    "vehlv" => 233,
    "blvgj" => 13,
    "giiie" => 95,
    "onmidw" => 436,
    "lftsl" => 79,
    "ktgfxpm" => 55,
    "nwvbh" => 29,
    "vdywyof" => 10,
    "juykf" => 339,
    "dzcyze" => 6,
    "rxozjry" => 88,
    "htoep" => 64,
    "qbdrnwf" => 6,
    "wpidtfu" => 49,
    "agfxi" => 85,
    "mtaatz" => 266,
    "mznemqf" => 78,
    "eoabav" => 85,
    "ewypdpk" => 21,
    "ntqdd" => 80,
    "fqoozik" => 14,
    "gobzapu" => 50,
    "ytomrhu" => 197,
    "vgoayw" => 21,
    "gslkem" => 11,
    "pgefkd" => 2000,
    "dztpfb" => 187,
    "dsvthh" => 82,
    "nemethx" => 5,
    "yquoa" => 98,
    "opfgye" => 151,
    "vqecsyp" => 84,
    "hlxhne" => 35,
    "jfaseqo" => 247,
    "qborl" => 299,
    "yzpfod" => 28,
    "spqtfmy" => 45,
    "ptwgg" => 21,
    "suxsxhs" => 72,
    "kchnqf" => 82,
    "qvaemxv" => 99,
    "rupwawl" => 61,
    "gsnlv" => 137,
    "tsqmps" => 63,
    "yiimp" => 79,
    "xalpz" => 49,
    "xcriywz" => 26,
    "uabcnf" => 78,
    "zmkuj" => 364,
    "egkkx" => 405,
    "kfojlo" => 9,
    "xavbkjb" => 7,
    "uuepceb" => 52,
    "rfvtz" => 21,
    "vunjzqr" => 15,
    "fbbeae" => 40,
    "yuctaoj" => 6,
    "tllmans" => 2018,
    "wirio" => 33,
    "mozwerl" => 37,
    "mydrx" => 165,
    "qvzsob" => 88,
    "etksk" => 47,
    "oopqw" => 17,
    "fowke" => 51,
    "txlrdpc" => 1421,
    "dbkhupp" => 117,
    "aurik" => 2443,
    "tqved" => 35,
    "btkth" => 7,
    "gjqasxb" => 33,
    "snqbfd" => 61,
    "qgyboht" => 10,
    "eqdugzw" => 51,
    "xeqol" => 11,
    "oynrsea" => 79,
    "ilfmw" => 68,
    "dphwkj" => 88,
    "utoyap" => 72,
    "opbyya" => 93,
    "flcxc" => 19,
    "jishckj" => 155,
    "kvrrast" => 175,
    "teufo" => 99,
    "rlghl" => 32,
    "bugid" => 45,
    "vkeqd" => 87,
    "osppg" => 72,
    "xxcsggt" => 97,
    "vpgtsem" => 354,
    "eqkno" => 29,
    "ieqrsbo" => 65,
    "syvhbgb" => 77,
    "vxcuhd" => 66,
    "kugzwm" => 99,
    "vekxtb" => 202,
    "andsm" => 60,
    "gjegewd" => 10,
    "wmril" => 38,
    "awcgokk" => 71,
    "wynfir" => 95,
    "seavb" => 67,
    "ohksn" => 97,
    "bykynh" => 56,
    "bjcmqj" => 72,
    "fyxrsks" => 48,
    "qhzdnug" => 51,
    "vvyuxd" => 93,
    "lsgmebq" => 143,
    "tykqh" => 81,
    "cwkoak" => 74,
    "ozeuxvw" => 90,
    "lmkdc" => 81,
    "nrgrjty" => 33,
    "vqxoyl" => 13,
    "onkvtu" => 83,
    "hzyxurv" => 70,
    "immqut" => 285,
    "pjrin" => 295,
    "qihokeg" => 56,
    "nalhjfn" => 2161,
    "siwcnqk" => 74,
    "nwmgu" => 285,
    "blwogji" => 19,
    "kibpy" => 52,
    "iabql" => 84,
    "exmpr" => 230,
    "xbvlp" => 94,
    "ovsqv" => 6,
    "ddooi" => 107,
    "iutebku" => 1047,
    "qahkfnd" => 123,
    "skzmpao" => 99,
    "tonljgn" => 57,
    "xxqyp" => 91,
    "ssvgu" => 46,
    "vmjcif" => 9360,
    "oplfyg" => 77,
    "cigdar" => 339,
    "ilyaln" => 76,
    "ryxdad" => 84,
    "zgjcuz" => 53,
    "pdswch" => 67,
    "glbvimo" => 211,
    "eyxvb" => 60,
    "utghvik" => 24,
    "ymnotlu" => 88,
    "hekdhpe" => 13,
    "ukldjwr" => 335,
    "ayvoftj" => 98,
    "bkpjjg" => 51,
    "mndwt" => 7,
    "hxunt" => 72,
    "yprilie" => 20,
    "kspwjf" => 55,
    "nvuiy" => 92,
    "lgvgz" => 9,
    "hdtndko" => 38,
    "djfnwv" => 67,
    "bktgoug" => 208,
    "xnyma" => 51,
    "jfkhs" => 50,
    "firwwz" => 91,
    "sfooljn" => 69,
    "qddxuou" => 63,
    "xjghf" => 181,
    "lnzzwfi" => 24,
    "puvpxd" => 38,
    "pgqdymw" => 88,
    "sovgznm" => 51,
    "wzcini" => 97,
    "mekcnd" => 38,
    "cakeb" => 67,
    "grstedk" => 70,
    "rfnnn" => 7,
    "zrtlh" => 68,
    "gtoij" => 184,
    "vxgbrvk" => 5,
    "bmbkh" => 168,
    "xltrwv" => 2388,
    "xmxvd" => 31,
    "hcxpyq" => 24,
    "jsojra" => 78,
    "eijnbk" => 65,
    "slbyad" => 95,
    "nrzao" => 25,
    "wnggxc" => 217,
    "pejys" => 94,
    "wjrjt" => 407,
    "gotuw" => 86,
    "hfzsc" => 58,
    "jzjgef" => 234,
    "jtugpxm" => 94,
    "bxabcu" => 570,
    "aikum" => 205,
    "iaabs" => 63,
    "rnjxo" => 61,
    "kbmqdsc" => 39,
    "hvfbx" => 19,
    "iqwsxmt" => 22,
    "usbgi" => 53,
    "petrvdq" => 61,
    "elpnrhu" => 39,
    "fdxizm" => 83,
    "eskfcor" => 263,
    "fpkcbpf" => 210,
    "ggoegus" => 97,
    "zwfyefp" => 33,
    "iehag" => 97,
    "hmxzzp" => 42,
    "wpdrp" => 41,
    "qlucu" => 74,
    "jnotktj" => 302,
    "sxwegk" => 79,
    "gogfx" => 2601,
    "ybuocfy" => 1374,
    "jfnojdk" => 212,
    "ecqun" => 20,
    "wblgb" => 98,
    "pfohpw" => 43,
    "yhtmfb" => 28,
    "oedzmki" => 360,
    "detpnh" => 47,
    "fvhtci" => 32,
    "wpboq" => 41,
    "bwpbkb" => 35,
    "zbbyzr" => 78,
    "dwghva" => 53,
    "jlbbmrc" => 97,
    "ehogp" => 84,
    "jdhwx" => 7,
    "leecyuk" => 173,
    "xfafo" => 9,
    "miuaxx" => 380,
    "bqxwpf" => 251,
    "mvwtr" => 61,
    "bvtsl" => 89,
    "zqbje" => 219,
    "lwogeq" => 102,
    "dmnohav" => 23,
    "hpqvzn" => 5383,
    "moaabux" => 26,
    "quwnokw" => 19,
    "qfmbrpi" => 7,
    "wnmyhx" => 161,
    "rilyl" => 28969,
    "lelwex" => 210,
    "zbpsmm" => 67,
    "bafivi" => 408,
    "mwvpdtt" => 188,
    "czwhzbc" => 282,
    "dufuw" => 97,
    "rnnbl" => 114,
    "sddwvuf" => 297,
    "totce" => 96,
    "vecsik" => 50,
    "pllcvd" => 30,
    "zpatw" => 83,
    "unexcu" => 58,
    "gjjykjf" => 80,
    "asorc" => 67,
    "akpehu" => 85,
    "pkkpfqd" => 72,
    "wvkqb" => 98,
    "rfguypo" => 216,
    "elfenmu" => 99,
    "efyiyc" => 5,
    "wgqlq" => 88,
    "tbosn" => 47,
    "fdkkxk" => 87,
    "gneipe" => 47,
    "guyzk" => 94,
    "awronb" => 279,
    "nosbdrs" => 17,
    "ztgujur" => 70,
    "vvqdsqo" => 19,
    "gcuxn" => 68,
    "zrfcjo" => 293,
    "mvhek" => 52,
    "emjyxt" => 17,
    "kvblxto" => 39,
    "pisrmb" => 15,
    "uhomjuv" => 64,
    "oykud" => 1210,
    "hnmipv" => 48,
    "setljkt" => 49,
    "pdvmaam" => 67089,
    "tsmekuh" => 216,
    "lpmsj" => 1266,
    "xbaluf" => 51,
    "lsqafn" => 84,
    "ezfoih" => 51,
    "hekghqb" => 43,
    "htqkf" => 9,
    "wsgab" => 66,
    "kmhdfd" => 10,
    "kmtpsb" => 56,
    "kiwylpo" => 58,
    "wbqyxc" => 45,
    "bozvn" => 6,
    "viftnsh" => 315,
    "udisj" => 10,
    "cgtirrb" => 368,
    "jlmgl" => 36,
    "xxgvcq" => 81,
    "sbfiowr" => 83,
    "nhfaz" => 70,
    "johvj" => 163,
    "osckuj" => 58,
    "idswf" => 15,
    "tqjtmnl" => 115,
    "pwibnc" => 22,
    "jtvvv" => 67,
    "hshja" => 12,
    "qghexm" => 45,
    "uejnd" => 88,
    "qlgkl" => 94,
    "aqgufrg" => 17,
    "cjhrs" => 131,
    "rywlizi" => 44,
    "xyzmpjv" => 28,
    "xyarhf" => 80,
    "hztbvq" => 348,
    "piepj" => 20,
    "ojzyz" => 11,
    "uljtowd" => 77,
    "ceofy" => 3309,
    "fzftvzt" => 45,
    "hsvleq" => 2142,
    "jikwvk" => 110,
    "wnxya" => 63,
    "tjffc" => 88,
    "hsxey" => 6,
    "qijgfwk" => 155,
    "pxkcra" => 23,
    "isfuod" => 17,
    "lgdtj" => 24,
    "qszyv" => 15,
    "zbwfbgd" => 38,
    "bgjreum" => 62,
    "mxtxzdj" => 17,
    "xjzwjwo" => 84,
    "rxmaax" => 75,
    "pwyqx" => 17,
    "qezwnc" => 49,
    "wvjhjjn" => 2611,
    "amacxs" => 71,
    "lwatsc" => 76,
    "hpohuv" => 128,
    "vhnoll" => 95,
    "uujpyn" => 84,
    "lqnym" => 99,
    "ollxzi" => 64,
    "itqiej" => 90,
    "vmutmbz" => 71,
    "hwcnp" => 67,
    "gnukyxz" => 6,
    "wmhwmv" => 45,
    "hcwly" => 83,
    "qwuug" => 57,
    "ggcyyr" => 58,
    "ztubst" => 43,
    "qduyad" => 78,
    "uifjz" => 82,
    "tpkmqc" => 30,
    "cozma" => 10,
    "yxqwz" => 75,
    "ohzbeco" => 175,
    "fqbwlo" => 63,
    "pzpltg" => 56,
    "sdxxuml" => 246,
    "nntuwn" => 109,
    "mylibd" => 71,
    "gbrnge" => 91,
    "gtwif" => 52,
    "hsbzn" => 32,
    "zrruyn" => 19,
    "safaxql" => 107,
    "eztcv" => 78,
    "hxbcz" => 10,
    "ozecapv" => 121,
    "lufzptb" => 63,
    "fgsxy" => 13,
    "zivoem" => 53,
    "ibwax" => 7,
    "taudz" => 71,
    "fbfawqa" => 197,
    "hzmxo" => 1301,
    "wxbsqif" => 28,
    "nnhhm" => 35,
    "doevlp" => 67,
    "nzdcujt" => 280,
    "nkviw" => 61,
    "xqbgo" => 84,
    "mdledr" => 28,
    "bxoslf" => 53,
    "rqbqxy" => 80,
    "endqfm" => 97,
    "jlrfg" => 88,
    "idvtm" => 92,
    "yscyxrt" => 6,
    "pjbrh" => 214,
    "camnbrn" => 48,
    "dcqdop" => 500,
    "yhnbyxd" => 81,
    "qfhptx" => 92,
    "qyucm" => 127,
    "jvvnvo" => 138,
    "olxbw" => 99,
    "fvdpch" => 79,
    "osgdles" => 76,
    "yvkbhqt" => 9,
    "khyzbb" => 78,
    "lrqeps" => 24,
    "fbbzyxj" => 10,
    "gabonn" => 7,
    "jsrfoem" => 143,
    "zbfds" => 5,
    "mwojc" => 18,
    "opgjd" => 217,
    "hftcktd" => 78,
    "cryabx" => 62,
    "ezjzcma" => 21,
    "gfgrl" => 36,
    "zelhlaj" => 44,
    "shwgbpx" => 6,
    "jjrto" => 1452,
    "vcweon" => 51,
    "fqftj" => 102,
    "xilohyg" => 28,
    "zctkn" => 43,
    "ounhwx" => 19,
    "rgthsm" => 52,
    "uypiw" => 85,
    "gnstbtt" => 64,
    "tdgeaw" => 252,
    "ebudz" => 82,
    "hqtwr" => 56,
    "wdmkbxa" => 60,
    "guggdb" => 49,
    "pturyym" => 37,
    "abvtv" => 48,
    "eudtoy" => 99,
    "warwhgb" => 72,
    "orjnuc" => 42,
    "tzfii" => 115,
    "yxhntq" => 9,
    "ykijrb" => 225,
    "fdnxe" => 74,
    "bcmhwm" => 74,
    "uoqkd" => 1565,
    "iprxseg" => 99,
    "gaszn" => 51,
    "gihcxn" => 56,
    "tvpovok" => 59,
    "pqcxw" => 77,
    "sddsn" => 84,
    "iagng" => 28,
    "mcjpy" => 129,
    "xlsmzvh" => 18,
    "gyymhc" => 353,
    "oielzfu" => 2549,
    "eeofxt" => 16,
    "xtbhjq" => 40,
    "tfkbv" => 165,
    "hjuhoum" => 35,
    "brirt" => 8,
    "zvittjn" => 202,
    "kwemyhv" => 17,
    "auigtqr" => 43,
    "ndnxy" => 39,
    "pfwuaht" => 295,
    "mofidvl" => 13,
    "flbni" => 341,
    "ekezedh" => 98,
    "coenxv" => 74,
    "esskfkp" => 6,
    "jjbgnry" => 7,
    "mumddr" => 79,
    "rzahe" => 73,
    "xywsyz" => 78,
    "dsuhkja" => 67,
    "vkvvtm" => 92,
    "gkzimba" => 40,
    "rstjsa" => 96,
    "qrqxdk" => 43,
    "dqxjmn" => 67,
    "xytmux" => 48,
    "vihqwqe" => 95,
    "hjroy" => 214,
    "gfnxtjy" => 91,
    "lhplxk" => 5,
    "yewec" => 425,
    "wapwp" => 35,
    "hlqnsbe" => 77,
    "wjwqs" => 49,
    "rhgfl" => 16,
    "omouek" => 256,
    "fjlsk" => 15,
    "ubuuw" => 79,
    "beinhu" => 7,
    "mzpumh" => 93,
    "rjdmf" => 2692,
    "yoxfi" => 37,
    "szcxg" => 7,
    "hzuqtd" => 39,
    "lffnvze" => 2861,
    "idjquuv" => 59,
    "xhqpkdq" => 15,
    "favay" => 44,
    "bjsyz" => 276,
    "xphisb" => 95,
    "jgome" => 77,
    "scabkd" => 574,
    "yjdmkg" => 45,
    "cckdoyb" => 172,
    "uetfc" => 60,
    "vrypfpq" => 29,
    "vlgyos" => 10,
    "odlobo" => 12,
    "cxieq" => 91,
    "uotis" => 137,
    "rupecqk" => 19,
    "zmaxz" => 89,
    "ignsmt" => 61,
    "tnnjkm" => 165,
    "inxpyl" => 36,
    "glfsclp" => 87,
    "ajqgxy" => 71,
    "nlbjopb" => 309,
    "jqfou" => 14,
    "wghzp" => 17,
    "winyji" => 71,
    "qcmxoe" => 22,
    "pajjlng" => 7,
    "ibxac" => 63,
    "zdekdn" => 28,
    "slrxywr" => 38,
    "vgkvnu" => 6924,
    "chyyj" => 60,
    "cpbasst" => 9,
    "xznjrta" => 5,
    "pcitx" => 41,
    "arzxsdq" => 42,
    "aegkypi" => 32,
    "ffypved" => 23,
    "ymjcf" => 17,
    "onhpt" => 19,
    "lxmtjx" => 43,
    "mbzenl" => 88,
    "yenoyh" => 80,
    "vvcoce" => 76,
    "ayevuhk" => 96,
    "ityktpq" => 47,
    "ypdcyhe" => 50,
    "seipdcu" => 65,
    "wcufjj" => 925,
    "gliupmb" => 83,
    "bmgtktw" => 108,
    "kresb" => 14,
    "dyanei" => 378,
    "eiqjanp" => 218,
    "btlvmkx" => 8,
    "rdkqd" => 78,
    "sxplgr" => 94,
    "fbbcf" => 46,
    "hvdpvf" => 237,
    "oaddogg" => 80,
    "mpgkscw" => 355,
    "kuydvlr" => 92,
    "hxtumb" => 233,
    "hqaxdqm" => 89,
    "cmgugdz" => 67,
    "aiizew" => 88,
    "ndnmvz" => 43,
    "rnimplt" => 28,
    "flstvi" => 25,
    "tyrncu" => 712,
    "ahcxyzi" => 93,
    "zalfzf" => 259,
    "ketqren" => 20,
    "qgrkb" => 9541,
    "egtdt" => 210,
    "wklcvl" => 36,
    "gtukrss" => 1819,
    "gpwroki" => 95,
    "rafvktj" => 48,
    "rsujfpj" => 24,
    "fwtuv" => 51,
    "iatmk" => 43,
    "ltcwt" => 33,
    "aawaew" => 55,
    "datzi" => 67,
    "agcqog" => 25,
    "mgonf" => 199,
    "tlkqqk" => 67,
    "dcjiu" => 69,
    "dpqznt" => 5,
    "xsdzkqs" => 93,
    "iiyhw" => 1258,
    "snbjccn" => 61,
    "yjdfxn" => 24,
    "cnvjej" => 188,
    "vkrhnw" => 87,
    "sqkra" => 97,
    "oatauv" => 204,
    "ddeso" => 43,
    "lvbgvb" => 53
);

my %trees = (
    "uylvg" => [ "xrvcjq", "hihltxf", "junpjcj", "onkvtu", "cckdoyb", "favay", "xsygurk" ],
    "jiyqd" => [ "vunjzqr", "sfooljn", "gsnlv" ],
    "mxmzyac" => [ "pbwmrq", "eiqjanp", "dyanei", "zmkuj", "vkvvtm", "ktlhztg" ],
    "wspoq" => [ "chpxtc", "mylibd", "vmutmbz" ],
    "inzzz" => [ "ayevuhk", "rstjsa" ],
    "mgraypm" => [ "ivvcytp", "iaabs" ],
    "ohjesb" => [ "piepj", "tplrep", "yprilie" ],
    "kpkcku" => [ "wprvgb", "ektvj" ],
    "yauplaz" => [ "gnstbtt", "ivucxwy", "htoep", "crgver" ],
    "tgcmyr" => [ "setljkt", "qpyiycr" ],
    "ybneks" => [ "immqut", "csprk", "eyjif", "oykud", "bazfmo", "nbmup", "bxabcu" ],
    "ibzuz" => [ "dcqdop", "pzpltg", "xqzsy" ],
    "acwne" => [ "gliupmb", "hcwly" ],
    "fcmspin" => [ "thblrfo", "rcsthxt", "bmbkh", "gnqdxl" ],
    "pbwmrq" => [ "rupwawl", "snqbfd" ],
    "abaox" => [ "znltrss", "hvfbx" ],
    "bykobk" => [ "oaonzl", "giiie", "pdwwc" ],
    "cafeffy" => [ "wjwqs", "qezwnc" ],
    "lqimnfv" => [ "hekghqb", "csirnil", "ndnmvz" ],
    "nbmup" => [ "ziouqpy", "ilyaln", "vecsik" ],
    "fufgis" => [ "cdewiot", "zdekdn" ],
    "leymr" => [ "msxnc", "xxgvcq" ],
    "rwhbcy" => [ "wmhwmv", "yjdmkg" ],
    "yhzue" => [ "mofidvl", "xjghf", "detpnh" ],
    "xmnqwd" => [ "ovsqv", "qbdrnwf" ],
    "evmfp" => [ "ezfoih", "xnyma", "ltalmp" ],
    "jybwslx" => [ "nadjis", "qomycms", "dmswq" ],
    "kfvzter" => [ "aiizew", "piuudr" ],
    "hweuik" => [ "zdlyf", "omdnuon" ],
    "hymjivf" => [ "xrdkdkq", "tonljgn", "vcitv", "wcufjj", "ykcmzu", "pgefkd" ],
    "hdpqb" => [ "ecrdh", "wnxya" ],
    "euhmwat" => [ "jishckj", "datzi", "wjrjt", "evmfp", "mpgkscw" ],
    "ywdvft" => [ "bktgoug", "fufgis", "dbkhupp", "lhcndy", "nggfb", "tdgeaw", "kdsmtx" ],
    "kcfqe" => [ "guyzk", "osnpcl", "pejys", "xbvlp" ],
    "zzlopja" => [ "opgjd", "cigdar", "olxbw" ],
    "hlsoeh" => [ "prgfkm", "eoabav", "agfxi" ],
    "ggdcjbd" => [ "hzfgjnm", "qihokeg" ],
    "vhyiaf" => [ "ghhwci", "eudtoy", "ceofy", "kbzfvrp", "ibzuz", "vgkvnu", "vmjcif" ],
    "pdwwc" => [ "iagng", "hndzyx" ],
    "jijjnbw" => [ "xtqrjc", "jqfou" ],
    "fmufi" => [ "lhcegk", "uypiw" ],
    "eyjif" => [ "jvvnvo", "yenoyh", "yjldllm", "dzcyze", "acwne", "wycdpt" ],
    "ojjnnko" => [ "zmaxz", "pqiivg", "xmnqwd" ],
    "cscdc" => [ "ynpehry", "fbbcf" ],
    "nczrlw" => [ "jvhvlo", "vrypfpq", "egtdt" ],
    "qlscb" => [ "jlbbmrc", "iehag", "endqfm", "ohksn" ],
    "gneen" => [ "vkeqd", "bmfkrnb" ],
    "wycdpt" => [ "btlvmkx", "denjcv", "iutqxkf" ],
    "wxjne" => [ "blvgj", "fddgtmo" ],
    "gpmfjj" => [ "ioypyd", "srozv" ],
    "knxli" => [ "qdbendr", "zbpsmm", "djfnwv", "dsuhkja" ],
    "rpagi" => [ "rjrlumz", "utoyap" ],
    "xrdkdkq" => [ "voytx", "tfqvoz", "cxieq", "nzdcujt", "efwflo" ],
    "ohavz" => [ "zlgewg", "gjjykjf" ],
    "znwmy" => [ "mvwtr", "rzopy", "qcbtref", "snbjccn" ],
    "nfrnbw" => [ "pajjlng", "ibwax" ],
    "ijynzc" => [ "hshja", "odlobo" ],
    "yjldllm" => [ "ltcwt", "zwfyefp" ],
    "efwflo" => [ "tbosn", "qhxasm" ],
    "hqbad" => [ "rhgfl", "eeofxt" ],
    "ibixfz" => [ "firwwz", "xxqyp" ],
    "fdbyixt" => [ "rodlg", "alwsn" ],
    "wtuse" => [ "qbsvwcc", "auqjapr" ],
    "mphoskw" => [ "wpdrp", "lqimnfv", "uoghp", "dztpfb", "lufzptb" ],
    "csprk" => [ "nrzao", "agcqog", "ehucp", "ljtub" ],
    "uoghp" => [ "pwyqx", "isfuod" ],
    "ykcmzu" => [ "mozwerl", "ddooi", "teufo", "rakjhe" ],
    "lgjkmc" => [ "nvuiy", "idvtm" ],
    "junpjcj" => [ "eqcmflu", "ujpttyx" ],
    "ugrxr" => [ "kmtpsb", "lwkbk" ],
    "tfqvoz" => [ "pvxzi", "sxwegk" ],
    "yiwyghj" => [ "seipdcu", "lsgmebq", "agdmzu" ],
    "hcjoif" => [ "sqkra", "dufuw" ],
    "kpwgdrt" => [ "winyji", "ipwjrx" ],
    "iglpkvv" => [ "bozvn", "ensst", "rtfmatr", "gnukyxz" ],
    "hgbgr" => [ "cqrwox", "ntqdd" ],
    "yofqkfe" => [ "iabql", "mgraypm", "pllcvd" ],
    "nsrsjtk" => [ "nwvbh", "eqkno" ],
    "vgxle" => [ "fkgjr", "vjupomu", "lerrsh", "sbgsxdw" ],
    "ubiagvr" => [ "pbncc", "tykqh" ],
    "jriph" => [ "cqrqt", "kibpy" ],
    "pbkyjk" => [ "hfrgc", "jtvvv" ],
    "gqrjzf" => [ "hzpagsa", "bvtsl", "hqaxdqm" ],
    "imzjzf" => [ "rzwqxgp", "lwatsc" ],
    "mlslqa" => [ "siwcnqk", "coenxv" ],
    "rcsthxt" => [ "szcxg", "btkth" ],
    "kixinqo" => [ "dcjiu", "rnwcn" ],
    "qkhwa" => [ "sgoseob", "zbwfbgd" ],
    "ffvsvb" => [ "ubuuw", "tntwm", "yiimp" ],
    "nlaym" => [ "iqwsxmt", "qcmxoe" ],
    "voytx" => [ "scjek", "knmdxw", "qwuug" ],
    "pheyymh" => [ "kiwylpo", "taapm", "ggcyyr" ],
    "lhcndy" => [ "idjquuv", "tvpovok" ],
    "vzttnzk" => [ "mmyaot", "ignsmt" ],
    "xqzsy" => [ "qlucu", "fdnxe", "soyzhei" ],
    "jkbuq" => [ "oielzfu", "ocyjmcy", "ybneks" ],
    "zgjhbp" => [ "wpboq", "pcitx" ],
    "dlfghsv" => [ "rxozjry", "uejnd", "fpkgx", "chvari" ],
    "gabpxsf" => [ "pjbrh", "hsbzn", "hjroy" ],
    "ytxusu" => [ "upapd", "tgcmyr", "zgjhbp", "qahkfnd", "abaox", "gobzapu", "wnmyhx" ],
    "ziouqpy" => [ "zfqvkc", "jpwhcjy" ],
    "ffuxvj" => [ "fbbeae", "xtbhjq" ],
    "bazfmo" => [ "vvcoce", "vekxtb", "pheyymh" ],
    "agdmzu" => [ "xbaluf", "ucafi" ],
    "thblrfo" => [ "lxmtjx", "lwnpt" ],
    "becfiz" => [ "xywsyz", "mznemqf", "zbbyzr", "hftcktd" ],
    "mfvdags" => [ "uljtowd", "jurdmpq", "jgome", "syvhbgb" ],
    "qomycms" => [ "wxbsqif", "cmgap", "xilohyg" ],
    "hmonryr" => [ "euhmwat", "lpmsj", "jjrto", "scabkd" ],
    "txxjkb" => [ "lmtisu", "sovgznm" ],
    "cozmd" => [ "wvkqb", "yquoa", "seffc", "uynpswf" ],
    "vikpkr" => [ "xznjrta", "emxti", "efyiyc", "nemethx" ],
    "hihltxf" => [ "kugzwm", "skzmpao" ],
    "qhnifn" => [ "nosbdrs", "hzjcwc" ],
    "nggfb" => [ "moaabux", "xcriywz" ],
    "cjgtg" => [ "rnimplt", "vthvyt" ],
    "wltxoge" => [ "ewbngna", "xvkdd" ],
    "agfzkj" => [ "sjsqaol", "rafvktj" ],
    "fpiatig" => [ "inxpyl", "jlmgl" ],
    "jnlnsk" => [ "vzttnzk", "wpidtfu", "wnggxc" ],
    "nadjis" => [ "xeqol", "ihjyjx" ],
    "cufloa" => [ "exmpr", "jzjgef", "gotuw" ],
    "zqbkt" => [ "yauplaz", "hcjoif", "rwhbcy", "kpkcku", "vehlv" ],
    "xwudzc" => [ "gneipe", "ityktpq", "wyovcqf" ],
    "npehrzk" => [ "xsdzkqs", "mzpumh" ],
    "ocyjmcy" => [ "hlsoeh", "wsgab", "zzlopja", "nczrlw", "ytxusu", "hzmxo", "lffnvze" ],
    "jmtqh" => [ "hacbd", "lncyf" ],
    "qywnr" => [ "rdkqd", "nfrnbw", "juykf" ],
    "uvybtgx" => [ "ijjri", "ejucumc", "yscyxrt", "esskfkp" ],
    "ghhwci" => [ "jiyqd", "ojjnnko", "aawaew" ],
    "ktlhztg" => [ "tzyav", "gkzimba" ],
    "loukhc" => [ "adyogf", "mrfswq", "qxqwvi" ],
    "xrvcjq" => [ "xhqpkdq", "pisrmb" ],
    "rrvihye" => [ "dkhddzb", "sakrb" ],
    "jwcsw" => [ "ounhwx", "flcxc" ],
    "gnqdxl" => [ "xqbgo", "cmqglh" ],
    "qipkli" => [ "putdy", "rfvtz" ],
    "rakjhe" => [ "wrhfj", "ssvgu" ],
    "pqiivg" => [ "hjuhoum", "bwpbkb" ],
    "daxxjtz" => [ "ewypdpk", "jfaseqo", "bqxwpf", "hweuik", "ubiagvr" ],
    "diqon" => [ "mgonf", "rnjxo", "ykijrb" ],
    "dmswq" => [ "fsfdbgt", "roedr", "oplfyg" ],
    "kdsmtx" => [ "tjwtl", "fdkkxk" ],
    "kbzfvrp" => [ "xltrwv", "hcxpyq", "gogfx", "uoqkd" ],
    "irupq" => [ "grstedk", "hzyxurv" ],
    "ubzly" => [ "gbrnge", "tzuiasi" ],
    "qljvi" => [ "iatmk", "sowli", "auigtqr", "ddeso" ],
    "feywd" => [ "nrgrjty", "cjhrs", "ytomrhu" ],
    "oagdsv" => [ "ndnxy", "kbmqdsc" ],
    "vcitv" => [ "xyzmpjv", "nlaym", "fqftj", "zrtlh", "lnozan" ],
    "lnozan" => [ "yhtmfb", "dcrhafq" ],
    "oaonzl" => [ "lzgcs", "wblgb" ],
    "vehlv" => [ "jhxsez", "xavbkjb", "jdhwx", "beinhu" ],
    "giiie" => [ "lohgt", "ekezedh" ],
    "juykf" => [ "wbqyxc", "qghexm", "spqtfmy" ],
    "dzcyze" => [ "tovve", "jtugpxm" ],
    "wpidtfu" => [ "ubfljy", "slbyad" ],
    "mtaatz" => [ "gjegewd", "cozma" ],
    "ewypdpk" => [ "fdxizm", "sbfiowr", "zpatw", "nbtxoam" ],
    "gobzapu" => [ "pturyym", "drqjijj", "yoxfi" ],
    "ytomrhu" => [ "xcrejqf", "zbfds" ],
    "vgoayw" => [ "vvyuxd", "ahcxyzi" ],
    "pgefkd" => [ "rxmaax", "wpmef" ],
    "opfgye" => [ "yuctaoj", "hsxey" ],
    "jfaseqo" => [ "khydeiy", "lvbgvb" ],
    "gsnlv" => [ "oopqw", "wghzp" ],
    "tsqmps" => [ "bykynh", "xfyybbx" ],
    "zmkuj" => [ "kutxof", "knxyay" ],
    "vunjzqr" => [ "gtwif", "uuepceb", "rgthsm" ],
    "tllmans" => [ "abvtv", "sbocc", "fyxrsks", "camnbrn" ],
    "wirio" => [ "ztgujur", "ovozt", "nhfaz", "zagsm" ],
    "mozwerl" => [ "vpfaa", "ulqloyn" ],
    "mydrx" => [ "hdpqb", "lgjkmc", "aikum", "ohzbeco" ],
    "txlrdpc" => [ "jmtqh", "flbni", "loukhc", "iglpkvv" ],
    "dbkhupp" => [ "bugid", "fzftvzt", "foyeln" ],
    "aurik" => [ "jriph", "bykobk", "uylvg", "yxhntq", "ywdvft" ],
    "ilfmw" => [ "rzahe", "fbfawqa", "hxtumb", "wtuse", "vikpkr" ],
    "jishckj" => [ "uzifsnw", "vqecsyp", "uidqcn" ],
    "teufo" => [ "jmypi", "aegkypi", "kienpis" ],
    "vpgtsem" => [ "aqgufrg", "sthzqgi", "kwemyhv" ],
    "vxcuhd" => [ "vhnoll", "xphisb" ],
    "vekxtb" => [ "zyvdjl", "xirit" ],
    "wmril" => [ "lmkdc", "yhnbyxd" ],
    "nrgrjty" => [ "vkrhnw", "eiqvo" ],
    "onkvtu" => [ "mowtdty", "zivoem", "ruroup" ],
    "immqut" => [ "fdbyixt", "qhnifn", "knxli" ],
    "nalhjfn" => [ "lwogeq", "ayvoftj", "vxcuhd" ],
    "nwmgu" => [ "mndwt", "jjbgnry" ],
    "iabql" => [ "ickkf", "jfkhs", "ypdcyhe" ],
    "exmpr" => [ "pofvr", "osppg" ],
    "ddooi" => [ "dxllc", "nwuxy" ],
    "iutebku" => [ "kfvzter", "awronb", "imzjzf", "becfiz" ],
    "qahkfnd" => [ "xcerg", "upsbm" ],
    "tonljgn" => [ "gpwroki", "qborl", "eskfcor", "leecyuk", "nwmgu", "zqbje", "zalfzf" ],
    "vmjcif" => [ "tyrncu", "ilfmw", "nntuwn" ],
    "ilyaln" => [ "caufkxz", "ktgfxpm", "obqyrh", "iqvnyzy" ],
    "zgjcuz" => [ "wefmw", "wtluvr", "wgqlq", "enlnjb" ],
    "glbvimo" => [ "fjcbsj", "ggoegus" ],
    "ukldjwr" => [ "fvhtci", "elvjpjr" ],
    "ayvoftj" => [ "fvdpch", "mnvip" ],
    "kspwjf" => [ "ietond", "orjnuc" ],
    "bktgoug" => [ "nzzzh", "lkfjzec" ],
    "sfooljn" => [ "gaszn", "qhzdnug" ],
    "lnzzwfi" => [ "blwogji", "ojijdav" ],
    "puvpxd" => [ "opbyya", "uczyc" ],
    "zrtlh" => [ "upjapf", "pqcxw" ],
    "gtoij" => [ "lssxhxw", "brirt" ],
    "bmbkh" => [ "gjqasxb", "ystegvn" ],
    "xltrwv" => [ "htqkf", "ivnla", "jsrfoem" ],
    "xmxvd" => [ "bjcmqj", "zevpw" ],
    "hcxpyq" => [ "ukldjwr", "gyymhc", "kdelzk", "tqjtmnl", "glfsclp", "cjgtg", "saaggxs" ],
    "wnggxc" => [ "gslkem", "ojzyz" ],
    "gotuw" => [ "vlujgrg", "pkkpfqd", "hxunt", "efuzst" ],
    "jzjgef" => [ "hlxhne", "laxksv", "tqved", "nnhhm" ],
    "bxabcu" => [ "eztcv", "cnvjej", "jikwvk" ],
    "aikum" => [ "lgvgz", "kfojlo", "jjdzuw", "yvkbhqt" ],
    "rnjxo" => [ "eypmjnl", "ebudz" ],
    "eskfcor" => [ "xlsmzvh", "cuvke" ],
    "fpkcbpf" => [ "hrxxih", "cxrmuo" ],
    "wpdrp" => [ "gxxwgu", "vbhmz" ],
    "jnotktj" => [ "bxoslf", "usbgi" ],
    "gogfx" => [ "warwhgb", "wlpnxme", "suxsxhs" ],
    "ybuocfy" => [ "tzfii", "safaxql", "opfgye", "johvj", "ezjzcma", "ffuxvj", "ztubst" ],
    "jfnojdk" => [ "lsqafn", "xjzwjwo" ],
    "oedzmki" => [ "npehrzk", "ugrxr", "mcjpy", "mpyhy", "cscdc" ],
    "detpnh" => [ "dqxjmn", "seavb" ],
    "dwghva" => [ "nalhjfn", "txlrdpc", "sxplgr" ],
    "leecyuk" => [ "qyyiyo", "fqbwlo" ],
    "bqxwpf" => [ "vcweon", "bkpjjg" ],
    "zqbje" => [ "tdxsvy", "vycfxv", "ecqun", "ketqren" ],
    "lwogeq" => [ "fymxr", "ioyibl" ],
    "hpqvzn" => [ "mxmzyac", "gtukrss", "ybuocfy" ],
    "qfmbrpi" => [ "ryxdad", "kinfgwy" ],
    "rilyl" => [ "aurik", "fcmspin", "hpqvzn", "hymjivf", "qgrkb" ],
    "lelwex" => [ "gabonn", "rfnnn" ],
    "bafivi" => [ "kresb", "fqoozik" ],
    "mwvpdtt" => [ "udpwvnp", "ollxzi", "uhomjuv" ],
    "czwhzbc" => [ "guggdb", "xalpz" ],
    "rnnbl" => [ "zctkn", "pfohpw" ],
    "sddwvuf" => [ "wpmoil", "yfcnm" ],
    "totce" => [ "wqhxpu", "ibxac", "vihkn", "qddxuou" ],
    "vecsik" => [ "dsvthh", "kchnqf", "uifjz" ],
    "pllcvd" => [ "gcuxn", "kzbgh", "zmtzfbt" ],
    "rfguypo" => [ "tqpgecy", "tplgx" ],
    "awronb" => [ "ieqrsbo", "eijnbk" ],
    "zrfcjo" => [ "ajqgxy", "gcult" ],
    "kvblxto" => [ "cafeffy", "qljvi", "viftnsh", "kcfqe" ],
    "oykud" => [ "quwnokw", "vvqdsqo" ],
    "hnmipv" => [ "qvzsob", "dphwkj" ],
    "pdvmaam" => [ "dwghva", "hmonryr", "rjdmf" ],
    "tsmekuh" => [ "budzpo", "wvrvgio" ],
    "lpmsj" => [ "inzzz", "pwibnc", "mtaatz" ],
    "htqkf" => [ "asvbb", "rtckpbz" ],
    "wsgab" => [ "qlscb", "xwudzc", "cozmd", "agfzkj", "yewec", "hvdpvf", "gqrjzf" ],
    "viftnsh" => [ "tlirtlm", "etksk" ],
    "cgtirrb" => [ "stvho", "shwgbpx" ],
    "tqjtmnl" => [ "eujco", "amacxs", "lzmldaf", "awcgokk" ],
    "pwibnc" => [ "pgqdymw", "tjffc", "mbzenl" ],
    "cjhrs" => [ "zrruyn", "sqwioau", "jrrrwqw", "rupecqk" ],
    "xyzmpjv" => [ "xxcsggt", "wzcini" ],
    "ceofy" => [ "yofqkfe", "iiyhw", "yiwyghj", "oedzmki", "qywnr", "kvblxto" ],
    "hsvleq" => [ "emjyxt", "ymjcf", "mxtxzdj", "trepya" ],
    "jikwvk" => [ "unexcu", "ksbrn" ],
    "qijgfwk" => [ "fbbzyxj", "ewbfx" ],
    "wvjhjjn" => [ "zmukql", "lswznxp", "rsujfpj" ],
    "hpohuv" => [ "fhjpe", "mvhek" ],
    "hwcnp" => [ "bjsyz", "znwmy", "sdxxuml", "vgxle", "fmufi" ],
    "ztubst" => [ "zddmfy", "wdmkbxa" ],
    "tpkmqc" => [ "hqbad", "oatauv", "dlfghsv", "bafivi", "onmidw" ],
    "yxqwz" => [ "rlghl", "hgaupyo" ],
    "ohzbeco" => [ "vzglbr", "edkcs" ],
    "pzpltg" => [ "tnnjkm", "tfkbv", "ibixfz" ],
    "sdxxuml" => [ "lrqeps", "utghvik" ],
    "nntuwn" => [ "txxjkb", "gihcxn", "jnotktj" ],
    "hsbzn" => [ "gfnxtjy", "tabwkx" ],
    "safaxql" => [ "rbast", "yzpfod" ],
    "eztcv" => [ "cwkoak", "bcmhwm" ],
    "ozecapv" => [ "bsbjxg", "cpbasst" ],
    "lufzptb" => [ "bgjreum", "cryabx" ],
    "fbfawqa" => [ "mdledr", "szymk" ],
    "hzmxo" => [ "tlkqqk", "ubzly", "zrfcjo", "nlbjopb" ],
    "nzdcujt" => [ "yvdidmd", "qhaxz", "ptwgg" ],
    "dcqdop" => [ "jijjnbw", "bwdstyz", "lnzzwfi" ],
    "qyucm" => [ "yjdfxn", "ysmrs" ],
    "jvvnvo" => [ "wzrpo", "sfeepek" ],
    "olxbw" => [ "rqbqxy", "xyarhf", "qxtttuu" ],
    "opgjd" => [ "nkviw", "petrvdq" ],
    "ezjzcma" => [ "taudz", "pmtkuu" ],
    "jjrto" => [ "puvpxd", "lelwex", "hnmipv" ],
    "fqftj" => [ "chyyj", "uetfc" ],
    "hqtwr" => [ "dyrpzor", "sswszre", "jsojra", "qduyad" ],
    "eudtoy" => [ "hsvleq", "daxxjtz", "tllmans", "tpkmqc", "mphoskw", "zqbkt" ],
    "tzfii" => [ "mozwqgu", "lgdtj" ],
    "yxhntq" => [ "bmgtktw", "kddqkkz", "hztbvq", "omouek", "totce", "wltxoge" ],
    "uoqkd" => [ "oagdsv", "pbkyjk", "wirio", "wxjne" ],
    "gihcxn" => [ "jlrfg", "sxxod", "ymnotlu", "yhcsmfs" ],
    "mcjpy" => [ "cmgugdz", "asorc" ],
    "gyymhc" => [ "pxkcra", "dmnohav" ],
    "oielzfu" => [ "jnlnsk", "qkhwa", "iutebku", "fpiatig", "feywd", "wvjhjjn", "ffypved" ],
    "tfkbv" => [ "tvoqmae", "idswf", "fjlsk" ],
    "zvittjn" => [ "iwovx", "wklcvl", "gfgrl" ],
    "mofidvl" => [ "tgken", "sddsn" ],
    "flbni" => [ "mwojc", "ibuzkf" ],
    "rzahe" => [ "rzuig", "meuoa" ],
    "vkvvtm" => [ "whavaec", "lftsl", "oynrsea", "mumddr" ],
    "qrqxdk" => [ "xrzdoz", "risnzi", "ehogp" ],
    "xytmux" => [ "osgdles", "geqrhsr" ],
    "hlqnsbe" => [ "rilyl", "vhyiaf", "pdvmaam", "jkbuq" ],
    "omouek" => [ "adetez", "radwgcq" ],
    "rjdmf" => [ "uotis", "hwcnp", "yhzue", "diqon" ],
    "lffnvze" => [ "ozeuxvw", "itqiej" ],
    "favay" => [ "iprxseg", "jujtux" ],
    "bjsyz" => [ "xfafo", "wwtxe" ],
    "scabkd" => [ "rpagi", "ffvsvb", "fpkcbpf", "mlslqa", "zvittjn" ],
    "cckdoyb" => [ "wvcui", "wapwp" ],
    "vrypfpq" => [ "doevlp", "pdswch", "cakeb" ],
    "cxieq" => [ "uujpyn", "uxzql", "watsby" ],
    "uotis" => [ "rnnbl", "irupq", "rrvihye", "gtoij", "xytmux", "kixinqo", "wmril" ],
    "zmaxz" => [ "qnbyib", "myvyjck" ],
    "tnnjkm" => [ "gavzkq", "qszyv", "jgtnj" ],
    "glfsclp" => [ "ibqev", "khyzbb", "uabcnf", "wkdquda" ],
    "nlbjopb" => [ "pbtuupy", "hmxzzp", "arzxsdq" ],
    "vgkvnu" => [ "oaddogg", "gabpxsf", "jybwslx" ],
    "ffypved" => [ "jfnojdk", "cgtirrb", "czwhzbc", "mfvdags", "miuaxx", "mwvpdtt", "hgbgr" ],
    "yenoyh" => [ "mekcnd", "hdtndko", "slrxywr" ],
    "vvcoce" => [ "zelhlaj", "qlezcmj", "dwlqul", "rywlizi" ],
    "seipdcu" => [ "elpnrhu", "hzuqtd" ],
    "wcufjj" => [ "qijgfwk", "kvrrast", "xmxvd", "qfmbrpi", "tsqmps", "ohjesb", "qyucm" ],
    "bmgtktw" => [ "mhgzc", "eyxvb", "vojtq", "andsm" ],
    "dyanei" => [ "kyukz", "vdywyof", "kmhdfd" ],
    "eiqjanp" => [ "wynfir", "vihqwqe" ],
    "rdkqd" => [ "amtxnd", "qvaemxv", "elfenmu", "lqnym" ],
    "sxplgr" => [ "jwcsw", "sddwvuf", "vpgtsem", "glbvimo", "egkkx", "kpwgdrt", "zgjcuz" ],
    "hvdpvf" => [ "lclup", "qlgkl" ],
    "oaddogg" => [ "pfwuaht", "wnxbu", "ijynzc", "lgyab", "pjrin", "nsrsjtk", "qrqxdk" ],
    "mpgkscw" => [ "hekdhpe", "jdpfhyl", "dbqwqo", "vqxoyl" ],
    "hxtumb" => [ "udisj", "iewgymm" ],
    "flstvi" => [ "hqtwr", "uvybtgx", "rfguypo" ],
    "tyrncu" => [ "vgoayw", "gpmfjj", "gneen" ],
    "zalfzf" => [ "qgyboht", "hxbcz", "bcygph", "vlgyos" ],
    "qgrkb" => [ "cufloa", "flstvi", "mydrx" ],
    "egtdt" => [ "vxgbrvk", "vmyqa", "dpqznt", "lhplxk" ],
    "gtukrss" => [ "wspoq", "ggdcjbd", "hpohuv" ],
    "gpwroki" => [ "tmakl", "eqdugzw", "fwtuv", "fowke" ],
    "aawaew" => [ "ohavz", "tsmekuh", "qipkli", "leymr", "wmyojtm" ],
    "datzi" => [ "svprq", "cteerd", "ogexy", "akpehu" ],
    "mgonf" => [ "ahatk", "fgsxy" ],
    "tlkqqk" => [ "kuydvlr", "yqewlf", "qfhptx", "tpxvyjx" ],
    "iiyhw" => [ "ozecapv", "yxqwz", "kspwjf" ],
    "cnvjej" => [ "onhpt", "wxpagp" ],
    "oatauv" => [ "hfzsc", "pvuno", "osckuj", "dcpgsg" ]
);


# day 7 part 1
{
    # day 7 part 1 was done using vi and tsort.  Answer was hlqnsbe.

    print "day 7 part 1 hlqnsbe\n";
}


# day 7 part 2
{
    # findWeight(name)
    #
    # Return the weight of name and all of its subtrees.
    sub findWeight
    {
        my ( $name ) = @_;
        my $weight = $weights{$name};

        if (defined(@trees{$name}))
        {
            for my $leaf (@{$trees{$name}})
            {
                $weight += findWeight($leaf);
            }
        }
        return $weight;
    }

    my %treeWeights;

    for my $tree (keys %weights)
    {
        $treeWeights{$tree} = findWeight($tree);
    }

    # We want the lightest tree that is unbalanced.
    my $lightestWrong;

    ForEachTree: for my $tree (keys %trees)
    {
        # Weights of the subtrees must be equal.
        my $weight = -1;
        ForEachLeaf: for my $leaf (@{$trees{$tree}})
        {
            if ($weight == -1)
            {
                $weight = $treeWeights{$leaf};
            }
            elsif ($treeWeights{$leaf} != $weight)
            {
                if (
                    !$lightestWrong ||
                    ($treeWeights{$tree} < $treeWeights{$lightestWrong})
                )
                {
                    $lightestWrong = $tree;
                }
                last ForEachLeaf;
            }
        }
    }
    # One of the leaves of $lightestWrong has different tree weight than
    # the others.  Since the leaves ofeach of those leaves all must
    # match, the error is in the leaf itself.  We report the difference
    # between the tree weight of the erroneous leaf and the correct
    # leaves.

    my @weights;
    for my $leaf (@{$trees{$lightestWrong}})
    {
        push @weights, $treeWeights{$leaf};
    }

    # The error weight could be either low or high.  Thus the error
    # could either be the smallest or the largest weight of the leaves.
    @weights = sort @weights;
    my $errorWeight;
    my $correctWeight;
    if ($weights[0] != $weights[1])
    {
        $errorWeight = $weights[0];
        $correctWeight = $weights[1];
    }
    else
    {
        $errorWeight = $weights[$#weights];
        $correctWeight = $weights[$#weights - 1];
    }

    # Find the error leaf.
    for my $leaf (@{$trees{$lightestWrong}})
    {
        if ($treeWeights{$leaf} == $errorWeight)
        {
            # Found the leaf with the wrong weight.
            printf
                "day 7 part 2 %s should be %d\n",
                $leaf,
                $weights{$leaf} + $correctWeight - $errorWeight;
            last;
        }
    }
}


# day 8 parts 1 and 2
{
    my @day8Instucts = (
        "sd dec 441 if k != 0",
        "lp dec 419 if mxn >= 7",
        "w inc -592 if icg >= -9",
        "a dec -29 if q <= 9",
        "kt dec 486 if ms != 8",
        "kt inc -841 if kt > -488",
        "rz inc -592 if m <= 1",
        "xtz dec 780 if lp < 9",
        "iox dec 804 if icg != 6",
        "lp inc 360 if i == 9",
        "f dec -570 if gi >= 7",
        "um inc 87 if q != 4",
        "kt dec -242 if rz != -595",
        "j inc -154 if db != 0",
        "giq dec 728 if iox > -811",
        "a dec -9 if xtz > -781",
        "lp inc -261 if ms > 2",
        "w inc -816 if hey > -1",
        "mxn inc 680 if ms >= -9",
        "q inc -777 if w < -1400",
        "wm dec -353 if q == -774",
        "q inc 414 if hey == 0",
        "xdl inc 488 if kt != -1075",
        "gus dec -136 if fxx != -7",
        "f dec 852 if hey >= 10",
        "j inc 531 if ms <= -9",
        "km dec 231 if xdl >= 487",
        "fxx dec 579 if iox == -804",
        "km dec 23 if kt != -1076",
        "fxx inc -845 if xtz != -773",
        "mxn dec 335 if fxx != -1432",
        "q dec 184 if f == 0",
        "wm dec -330 if f == 0",
        "iox dec 677 if mxn != 339",
        "mxn inc -429 if hey < 1",
        "rz dec 101 if hey == 8",
        "k inc 17 if db == 0",
        "gus inc -328 if iox == -1481",
        "a inc 657 if rz <= -584",
        "wm dec -365 if rz < -590",
        "m inc -710 if w < -1399",
        "kt inc -246 if wm != 698",
        "w dec 976 if fxx >= -1431",
        "giq inc 319 if hey >= -5",
        "iox inc -563 if xdl < 495",
        "xdl dec -349 if f >= -9",
        "sd inc -296 if q >= -555",
        "xdl inc 406 if cl >= -2",
        "f inc 966 if hey >= -6",
        "lp dec -838 if iox > -2054",
        "k dec -674 if q < -542",
        "i inc -23 if k < 692",
        "mxn inc -221 if sd != -302",
        "mxn inc -830 if mxn > -309",
        "km inc -283 if db > -7",
        "icg inc 365 if xdl > 1234",
        "q inc -23 if m < -702",
        "wm dec -507 if rz < -582",
        "j inc -501 if gi != -10",
        "um inc 274 if a > 689",
        "db inc 814 if xdl != 1250",
        "fxx dec -172 if db != 822",
        "wm dec 581 if kt <= -1323",
        "gi dec -715 if kt >= -1339",
        "f inc -209 if i >= -31",
        "q inc 933 if fxx > -1246",
        "mxn dec -227 if gi > 713",
        "fxx dec -112 if xdl <= 1252",
        "hey dec -998 if xtz >= -781",
        "lp dec -743 if ms <= 4",
        "icg dec -581 if fxx > -1149",
        "gus inc 725 if k != 698",
        "icg dec 156 if kt != -1339",
        "gus dec 961 if i > -32",
        "giq dec -992 if kt <= -1327",
        "m inc -477 if xdl >= 1240",
        "db dec -258 if gus <= -424",
        "wm inc -72 if gi > 713",
        "i dec 923 if lp == 1581",
        "m inc -221 if iox == -2044",
        "j inc 410 if m < -1402",
        "kt inc 838 if a == 685",
        "i dec 528 if gi < 712",
        "iox dec -823 if i >= -952",
        "a dec -705 if icg > 799",
        "gi dec -538 if db > 1079",
        "xdl inc -507 if q > -571",
        "rz inc 37 if km > -546",
        "fxx dec -718 if ms <= -2",
        "xdl inc -742 if cl < 4",
        "q dec 591 if wm > 542",
        "a dec 100 if db != 1072",
        "fxx dec -392 if giq >= 579",
        "j inc 991 if i >= -942",
        "m inc 311 if sd != -296",
        "icg inc -286 if db != 1075",
        "m inc 906 if rz == -555",
        "um inc 150 if hey == 993",
        "rz inc -637 if fxx < -746",
        "ms dec 779 if f >= 751",
        "gus inc 928 if j != -100",
        "rz dec 769 if sd < -292",
        "xdl inc -556 if gus <= 505",
        "rz inc -94 if j < -82",
        "mxn dec -763 if cl == 0",
        "xdl dec -693 if gus <= 502",
        "db inc -879 if kt <= -1339",
        "w dec 651 if hey > 991",
        "um dec -898 if giq == 583",
        "xdl dec 501 if hey > 998",
        "wm dec 746 if lp < 1587",
        "iox inc 915 if um > 1251",
        "a inc 573 if q >= -1165",
        "j dec -459 if m <= -512",
        "km dec -601 if xdl >= 131",
        "km dec 801 if f >= 756",
        "ms inc 318 if j < -91",
        "hey dec -768 if i <= -945",
        "f inc -982 if xdl < 134",
        "i inc 210 if iox < -305",
        "icg inc -838 if xtz >= -784",
        "mxn dec 901 if f == -225",
        "m inc 601 if i <= -733",
        "iox inc -863 if cl >= -5",
        "ms dec -474 if db >= 1069",
        "xtz dec 708 if um >= 1253",
        "lp dec 0 if xdl < 130",
        "k inc -476 if sd <= -291",
        "um dec 475 if hey != 1756",
        "q inc 178 if k <= 215",
        "km dec 244 if a >= 1265",
        "j dec 485 if k < 209",
        "icg inc 429 if um >= 784",
        "ms inc -881 if kt > -1341",
        "cl inc -75 if iox < -1176",
        "icg dec -72 if gi == 715",
        "i inc 714 if lp >= 1572",
        "rz inc -881 if j >= -96",
        "ms dec -453 if i <= -29",
        "giq dec -500 if sd != -305",
        "sd dec -78 if lp != 1572",
        "a inc 313 if db == 1072",
        "w dec 97 if q == -978",
        "gus dec -203 if f != -225",
        "xdl dec -894 if j < -88",
        "q inc 71 if k != 213",
        "um dec -242 if wm > -207",
        "kt dec -997 if sd != -215",
        "cl dec 643 if lp != 1587",
        "hey inc -564 if fxx == -748",
        "ms dec 639 if m != 95",
        "ms dec 131 if w <= -3026",
        "xdl dec 241 if w != -3032",
        "mxn inc 404 if i == -28",
        "giq dec 111 if xdl >= 789",
        "wm inc 93 if j <= -88",
        "xdl inc 318 if um >= 1026",
        "gi dec -766 if a < 1587",
        "mxn inc 212 if w > -3040",
        "f dec -601 if giq == 1084",
        "m dec 135 if kt >= -334",
        "a dec -471 if rz >= -2940",
        "cl dec -379 if giq != 1080",
        "w inc -834 if db < 1077",
        "km inc -515 if f >= -226",
        "i inc 133 if a > 2043",
        "gus dec -368 if gi >= 1476",
        "db inc -629 if fxx > -758",
        "km inc -807 if a != 2052",
        "j dec -129 if cl > -267",
        "gi dec -443 if m <= -35",
        "kt dec -355 if sd != -218",
        "mxn inc -734 if xtz == -1488",
        "icg inc 468 if m == -34",
        "m inc 896 if iox <= -1168",
        "xdl inc -763 if j < 39",
        "db inc -51 if xdl >= 337",
        "sd dec 688 if icg >= 167",
        "w inc 307 if gi >= 1924",
        "ms inc 190 if xdl >= 331",
        "k inc 869 if fxx >= -750",
        "mxn inc -772 if ms >= -1771",
        "f inc -303 if q == -922",
        "kt dec 99 if ms < -1757",
        "j dec -733 if sd < -904",
        "wm inc -808 if gi <= 1933",
        "q dec -671 if i != 112",
        "cl inc -790 if xdl >= 330",
        "icg inc -617 if ms > -1774",
        "w inc 529 if xdl > 333",
        "w inc -413 if wm < -907",
        "db inc 780 if xdl > 330",
        "xtz inc -535 if um <= 1025",
        "mxn inc 415 if db > 1165",
        "xtz inc 170 if db != 1169",
        "k dec -365 if k <= 1091",
        "giq inc -695 if q < -233",
        "db inc -991 if a > 2057",
        "k dec 543 if fxx == -748",
        "kt inc 673 if hey <= 1209",
        "gi inc -23 if mxn <= -1917",
        "m inc -567 if sd > -916",
        "m dec -269 if wm == -912",
        "kt dec 601 if db != 1180",
        "km dec -781 if kt == -351",
        "rz inc -296 if wm != -912",
        "um inc 4 if gus != 874",
        "um inc -876 if q < -231",
        "gi dec -744 if xtz < -1320",
        "j inc -101 if q <= -236",
        "kt inc -959 if xtz == -1318",
        "icg dec 9 if m == 562",
        "kt inc -412 if gus > 867",
        "fxx dec 394 if gus > 867",
        "fxx dec 105 if xtz == -1318",
        "a dec -533 if giq != 396",
        "km dec -864 if um != 147",
        "mxn dec -240 if i != 114",
        "m inc -830 if km != -628",
        "iox inc 160 if mxn != -1690",
        "k inc 966 if j > 679",
        "xtz inc 482 if cl <= -1050",
        "f inc -430 if fxx < -1253",
        "sd inc 138 if sd > -915",
        "giq dec 736 if xtz == -836",
        "f dec 780 if ms >= -1767",
        "wm inc -362 if kt <= -1731",
        "um dec -195 if xtz >= -838",
        "um dec 888 if i >= 107",
        "i dec 754 if gus != 868",
        "hey inc -518 if kt <= -1726",
        "iox inc 843 if hey > 676",
        "ms dec -46 if a < 2587",
        "mxn inc 288 if gus >= 864",
        "gus inc -643 if mxn < -1393",
        "um inc 457 if rz >= -2936",
        "um dec -976 if xtz == -836",
        "m dec 783 if fxx > -1254",
        "gi inc -63 if m <= -1043",
        "lp dec -244 if cl > -1062",
        "sd inc 908 if km >= -637",
        "km inc -725 if kt <= -1731",
        "j dec -20 if k == 906",
        "wm dec -596 if kt >= -1740",
        "xtz dec 133 if km <= -1355",
        "db inc -792 if icg != -466",
        "db dec -851 if lp != 1835",
        "cl dec 707 if f > -1012",
        "iox dec 246 if iox >= -170",
        "um dec 719 if ms == -1720",
        "xtz dec -216 if icg != -464",
        "km dec 776 if w <= -3446",
        "j dec 388 if xdl != 339",
        "j dec 776 if kt == -1732",
        "mxn dec 615 if cl == -1761",
        "i inc 579 if gus < 226",
        "i inc -172 if xdl < 341",
        "ms inc 720 if lp < 1825",
        "ms dec -590 if hey < 690",
        "iox dec -781 if gus < 231",
        "mxn inc -145 if a >= 2577",
        "q inc -885 if f <= -1013",
        "xtz inc -148 if a != 2593",
        "km inc -586 if fxx < -1239",
        "um inc -988 if kt < -1724",
        "k dec -852 if xtz != -891",
        "j inc -365 if m != -1050",
        "gus inc -679 if cl != -1760",
        "um inc -342 if icg != -455",
        "hey inc -807 if mxn == -2157",
        "w dec 759 if w != -3439",
        "ms inc -328 if gus >= -455",
        "gi inc -179 if iox == 369",
        "ms inc 930 if giq != -345",
        "fxx inc 959 if giq == -338",
        "km dec -605 if db <= 1226",
        "um dec 954 if gus == -460",
        "f inc -325 if giq < -341",
        "cl dec -95 if cl <= -1752",
        "hey dec 825 if sd < 141",
        "db dec -608 if sd >= 139",
        "giq inc 141 if lp > 1821",
        "a dec 824 if km <= -2715",
        "k inc 982 if db < 1840",
        "k dec -6 if giq != -213",
        "xtz dec -59 if kt <= -1731",
        "fxx dec -589 if a == 1761",
        "m inc 874 if rz == -2936",
        "m dec 241 if xtz == -838",
        "gus dec 512 if w > -4208",
        "mxn inc 651 if gus == -973",
        "lp inc -553 if hey == -948",
        "giq inc 252 if lp > 1263",
        "km dec -360 if a == 1761",
        "giq inc -504 if a != 1770",
        "kt inc -815 if um <= -1146",
        "lp dec 343 if gi >= 1652",
        "w dec 6 if lp <= 937",
        "gus dec 806 if ms > -534",
        "q dec 262 if f > -1335",
        "rz dec -959 if sd <= 141",
        "w dec -958 if mxn == -2157",
        "gus inc 530 if xdl > 333",
        "lp dec -30 if hey > -949",
        "lp dec 345 if q != -509",
        "i inc 509 if km > -2363",
        "rz inc -576 if um == -1155",
        "km inc 622 if iox > 367",
        "k dec -833 if ms != -527",
        "um dec 586 if i == 1027",
        "q inc -724 if rz == -2553",
        "cl dec -372 if f <= -1330",
        "cl dec -944 if j > -442",
        "j dec 674 if hey != -958",
        "q inc -830 if j != -1135",
        "cl dec 594 if um < -1749",
        "gi dec -991 if q > -2066",
        "kt dec -528 if giq >= -465",
        "iox inc -291 if a > 1759",
        "q dec -395 if f != -1330",
        "um dec 244 if cl <= -1285",
        "a dec 961 if um < -1988",
        "iox inc -321 if w == -3253",
        "lp dec -307 if iox < -241",
        "m dec -188 if mxn == -2157",
        "um dec -481 if icg <= -450",
        "gi dec 303 if cl < -1294",
        "mxn dec -791 if wm != -684",
        "kt dec -368 if sd != 149",
        "mxn dec -783 if sd < 141",
        "gi dec 864 if m == 11",
        "gus dec -17 if w == -3253",
        "w dec 499 if giq > -464",
        "xtz inc 659 if q > -2067",
        "wm inc 572 if kt != -1654",
        "xtz dec -287 if xtz != -191",
        "sd inc 763 if kt <= -1658",
        "xdl inc 830 if gus == -1225",
        "icg inc 508 if km == -1737",
        "gi inc 756 if rz == -2560",
        "xtz inc 983 if km <= -1734",
        "w inc 717 if xtz > 1085",
        "q dec 52 if w < -3030",
        "xdl inc -373 if f <= -1321",
        "w dec -544 if icg > 56",
        "gus inc -120 if km > -1741",
        "mxn dec -16 if hey <= -947",
        "wm dec 591 if mxn != -576",
        "gus inc -355 if kt <= -1644",
        "xdl inc 898 if fxx <= -650",
        "f dec 71 if m != 11",
        "xtz dec 902 if fxx > -663",
        "kt dec -576 if db != 1831",
        "rz inc 465 if fxx < -650",
        "a dec 342 if fxx >= -666",
        "k inc 293 if cl != -1286",
        "iox dec 791 if db == 1839",
        "a dec 125 if kt != -1071",
        "gi dec 852 if xtz == 185",
        "f inc 982 if sd == 133",
        "mxn dec -426 if sd <= 146",
        "gus inc -100 if xdl <= 1696",
        "um inc 872 if xtz != 182",
        "db dec -10 if db < 1843",
        "q inc 209 if lp >= 920",
        "k inc -338 if hey >= -950",
        "m inc -601 if wm < -695",
        "w dec 725 if xdl >= 1694",
        "wm inc -913 if q >= -1901",
        "fxx inc 986 if sd <= 144",
        "a dec 329 if m == -590",
        "xtz inc 80 if q < -1893",
        "gus inc 234 if fxx == 328",
        "ms inc 110 if giq < -451",
        "gus dec -969 if sd != 134",
        "um dec 806 if ms <= -417",
        "gus dec -458 if icg < 53",
        "cl dec -272 if fxx > 326",
        "k inc -212 if sd != 143",
        "xtz dec 109 if fxx <= 324",
        "mxn dec 302 if m >= -599",
        "lp inc -240 if giq <= -451",
        "m dec -58 if wm != -1618",
        "xtz dec -178 if gus == -139",
        "giq inc -132 if xdl != 1694",
        "w inc -149 if a >= 962",
        "f inc -512 if lp <= 690",
        "lp dec -84 if sd < 147",
        "cl inc 657 if db <= 1851",
        "m inc -180 if hey == -948",
        "sd inc -711 if a < 974",
        "ms inc -905 if j != -1134",
        "f inc -852 if mxn >= -451",
        "lp inc 818 if i == 1027",
        "w dec -407 if wm <= -1610",
        "m dec -298 if gi > 926",
        "gi inc -17 if sd != -564",
        "ms inc 891 if kt != -1075",
        "xdl inc -498 if fxx != 337",
        "kt dec 153 if lp == 1575",
        "db inc -565 if f < -2690",
        "lp inc 812 if um <= -1438",
        "fxx inc 151 if um != -1429",
        "fxx dec 484 if km < -1732",
        "q inc 130 if f == -2690",
        "lp dec 926 if icg != 58",
        "giq dec -378 if k >= 3321",
        "cl dec 136 if ms == -1323",
        "xdl dec -889 if w != -3502",
        "hey dec 540 if hey == -948",
        "a dec 796 if xdl >= 1189",
        "xtz dec 197 if kt < -1066",
        "i dec 328 if db == 1284",
        "giq dec -697 if hey > -1482",
        "f inc -985 if icg != 51",
        "gi inc 128 if f > -3689",
        "j dec 638 if i != 699",
        "mxn inc 300 if icg < 55",
        "icg inc -846 if q <= -1900",
        "icg dec -845 if giq > -86",
        "cl dec 502 if hey < -1482",
        "db inc -18 if hey != -1483",
        "giq inc -398 if wm < -1615",
        "xtz inc -724 if gus > -146",
        "um inc -761 if gus >= -137",
        "gi dec 423 if mxn <= -146",
        "xtz dec -632 if ms >= -1326",
        "gi dec 990 if i == 693",
        "xtz dec 292 if i == 699",
        "q inc 881 if xtz >= -143",
        "xdl dec -25 if a <= 175",
        "f dec -599 if iox >= -1036",
        "giq dec -502 if gus == -139",
        "xdl dec 235 if gus >= -139",
        "q inc 704 if wm <= -1610",
        "ms inc 693 if i == 699",
        "k inc 407 if ms != -627",
        "f dec 107 if iox <= -1029",
        "xtz inc -328 if w != -3502",
        "j dec -474 if xdl < 994",
        "gus dec 82 if fxx != -12",
        "db dec -913 if xtz >= -143",
        "iox dec -932 if gus != -230",
        "giq inc -74 if q > -316",
        "ms inc -711 if gi != 1039",
        "w dec -29 if q >= -315",
        "um inc -851 if xtz == -141",
        "f inc -816 if ms <= -1348",
        "hey inc 813 if lp > 1468",
        "sd dec 483 if icg != 48",
        "w dec -199 if db <= 2181",
        "q inc -846 if sd != -572",
        "db inc -134 if k <= 3732",
        "um dec -185 if mxn > -145",
        "rz inc 559 if a < 174",
        "cl inc 650 if f != -3190",
        "gi inc 785 if cl >= -343",
        "w inc -227 if lp >= 1468",
        "gus inc -437 if wm < -1608",
        "kt inc -301 if w < -3499",
        "k dec -873 if km < -1736",
        "xdl dec -262 if q < -1155",
        "f dec 325 if mxn >= -149",
        "wm inc 523 if km < -1736",
        "gus dec -643 if db <= 2053",
        "gus dec 998 if iox > -95",
        "icg inc 774 if q < -1160",
        "k inc 789 if a > 159",
        "fxx dec 447 if xtz <= -133",
        "m inc -730 if rz <= -1526",
        "mxn dec -825 if cl > -346",
        "xtz inc 846 if sd > -576",
        "mxn inc 128 if cl < -352",
        "cl dec 99 if xtz <= 704",
        "lp dec -537 if ms >= -1341",
        "giq dec 784 if w == -3501",
        "iox inc 410 if giq <= -437",
        "f dec 314 if iox <= 317",
        "kt inc 520 if a == 169",
        "wm inc -419 if km >= -1740",
        "icg dec 900 if fxx != -450",
        "hey dec 564 if hey <= -670",
        "um inc 653 if lp < 2016",
        "hey dec 835 if fxx <= -447",
        "giq dec 542 if giq == -433",
        "gus dec 320 if cl > -354",
        "icg inc 75 if i > 695",
        "iox inc -949 if j <= -649",
        "q inc 0 if ms == -1341",
        "um dec 180 if rz != -1538",
        "i inc 534 if rz >= -1536",
        "i inc -316 if fxx == -452",
        "rz dec 225 if icg <= 2",
        "gus inc -416 if km != -1727",
        "icg inc -325 if m >= -1150",
        "rz dec 892 if gus < -742",
        "k inc -832 if j > -657",
        "wm inc -10 if gus <= -752",
        "f dec 179 if rz < -2644",
        "q inc 817 if kt > -859",
        "fxx inc 501 if xtz < 712",
        "m inc 111 if kt < -862",
        "ms dec -896 if gus != -749",
        "kt dec -925 if kt >= -862",
        "fxx inc -713 if cl <= -355",
        "xdl dec -120 if a == 172",
        "a dec -757 if hey != -2073",
        "gus inc 127 if mxn != -12",
        "xdl inc -627 if f == -3995",
        "kt dec 832 if lp < 2004",
        "w dec 208 if kt > 61",
        "kt dec 378 if lp >= 1998",
        "cl dec -371 if xdl > 1249",
        "f dec 708 if i < 927",
        "db dec 602 if ms > -443",
        "cl dec 247 if f > -4707",
        "um dec -394 if gi != 1040",
        "j dec 190 if giq >= -440",
        "gi inc 560 if q == -347",
        "xdl inc -601 if gus >= -630",
        "k dec 934 if iox == -641",
        "m inc -672 if icg >= -334",
        "w dec 104 if xdl != 647",
        "lp dec 36 if icg >= -329",
        "mxn dec 768 if m >= -1821",
        "f dec 555 if k == 3625",
        "w dec 440 if q >= -353",
        "lp dec -83 if kt != -316",
        "hey dec -168 if db != 2042",
        "giq dec 460 if xtz == 708",
        "fxx dec 446 if icg <= -325",
        "icg dec -22 if xtz != 717",
        "ms dec 920 if j != -841",
        "hey inc 213 if db < 2053",
        "mxn dec 862 if w < -4150",
        "rz dec 873 if xdl <= 656",
        "gi inc -584 if lp > 2047",
        "kt inc -29 if um <= -385",
        "m inc -883 if xtz < 715",
        "j inc 850 if iox == -641",
        "xdl dec 738 if w > -4154",
        "icg dec -851 if kt <= -329",
        "db inc -437 if ms > -449",
        "kt inc 280 if xtz > 702",
        "iox dec 924 if giq <= -899",
        "m dec 453 if cl < -344",
        "fxx inc -543 if i > 914",
        "rz inc 402 if f > -5269",
        "iox dec -260 if giq >= -900",
        "km dec -971 if sd >= -578",
        "wm inc 193 if k == 3630",
        "xdl dec -416 if a != 932",
        "lp inc 213 if icg == 545",
        "um inc 864 if wm <= -1516",
        "lp dec 343 if fxx <= -943",
        "rz inc 657 if kt > -50",
        "kt dec -253 if xdl <= 328",
        "km inc 256 if mxn > -781",
        "hey inc 856 if k == 3625",
        "gus inc 266 if f < -5264",
        "rz dec -139 if m <= -3151",
        "hey dec -669 if db == 1603",
        "gi inc -452 if ms == -445",
        "kt inc 123 if mxn == -783",
        "f inc -656 if sd > -562",
        "m inc -479 if i > 915",
        "um inc -288 if sd == -571",
        "giq dec -68 if gi == 9",
        "fxx dec -867 if fxx != -940",
        "um inc 80 if m > -3636",
        "i dec 980 if j < 9",
        "lp inc -932 if km < -764",
        "cl inc 387 if mxn != -788",
        "wm dec -492 if km != -766",
        "km inc 571 if m > -3634",
        "kt inc 903 if q >= -340",
        "wm inc 852 if k < 3616",
        "um dec -210 if m < -3629",
        "j inc -136 if m < -3623",
        "j dec -575 if i != 908",
        "sd inc 762 if xdl == 325",
        "gi inc -933 if kt != 314",
        "giq inc 272 if fxx < -939",
        "um inc -279 if iox <= -386",
        "xtz dec 303 if f < -5258",
        "xtz dec 344 if iox != -378",
        "giq dec -384 if f < -5264",
        "f inc -698 if mxn <= -778",
        "rz inc -185 if q <= -342",
        "um dec 272 if db <= 1613",
        "rz inc -650 if q <= -347",
        "xtz dec -621 if q <= -340",
        "kt inc 497 if sd < 200",
        "gus dec -786 if km < -203",
        "um dec 584 if a != 926",
        "hey dec 467 if xdl <= 318",
        "ms inc -975 if j == 448",
        "rz inc 763 if w <= -4144",
        "cl dec 923 if i >= 915",
        "km inc -294 if fxx >= -942",
        "fxx dec 218 if ms != -1420",
        "q inc 671 if gus < -350",
        "xdl dec 652 if i >= 913",
        "xtz dec -657 if gus > -367",
        "km dec 316 if j != 457",
        "wm dec 664 if fxx <= -932",
        "iox dec 463 if gus != -359",
        "hey inc -254 if fxx <= -940",
        "cl inc -684 if q > 317",
        "rz dec -287 if xtz < 1348",
        "lp dec 315 if lp != 1340",
        "hey dec -685 if q >= 325",
        "kt dec -360 if icg <= 553",
        "a inc 834 if um >= -646",
        "m inc -91 if sd < 183",
        "a dec 37 if k != 3617",
        "a inc -306 if sd != 201",
        "k dec 822 if q <= 327",
        "iox inc -885 if iox >= -850",
        "kt inc -835 if rz == -2113",
        "cl dec -99 if a < 586",
        "cl dec 635 if w != -4141",
        "kt inc -938 if giq == -173",
        "sd dec 599 if iox != -1720",
        "ms dec -484 if j != 448",
        "wm inc 669 if fxx == -945",
        "iox inc -633 if sd <= -402",
        "i dec -774 if f >= -5963",
        "f inc -783 if um < -646",
        "km inc 6 if xtz > 1333",
        "gus inc -986 if a == 583",
        "iox inc -233 if um <= -651",
        "xtz dec -857 if w != -4149",
        "wm inc -791 if a < 584",
        "j dec -41 if cl <= -2111",
        "xdl inc 77 if rz > -2123",
        "xdl inc -983 if ms != -1416",
        "fxx dec 247 if sd == -408",
        "k inc -362 if k > 2804",
        "xdl inc 13 if iox >= -2595",
        "db inc 473 if um <= -654",
        "w inc 307 if w > -4152",
        "xdl dec -237 if a <= 584",
        "wm inc 366 if giq == -173",
        "j dec 111 if i != 917",
        "k dec 790 if w != -3848",
        "sd dec -841 if wm == -2595",
        "i inc -538 if xdl == -989",
        "f dec 583 if rz > -2114",
        "xtz inc -886 if kt <= -590",
        "ms inc 151 if mxn == -783",
        "q dec -585 if fxx == -1184",
        "j dec -102 if km == -799",
        "xdl dec 504 if sd == 433",
        "fxx inc -208 if db > 2078",
        "m dec 471 if q >= 323",
        "icg inc -296 if i <= 919",
        "rz dec -601 if mxn > -791",
        "gus dec -870 if gi > -925",
        "um dec -171 if gi >= -927",
        "f inc 969 if gi != -932",
        "j dec 78 if xdl <= -1481",
        "m dec 115 if lp != 1019",
        "km inc 911 if ms != -1267",
        "gi inc 798 if i <= 920",
        "iox dec -780 if km < 122",
        "cl dec 670 if xdl > -1492",
        "gus inc 231 if kt != -602",
        "giq dec 584 if k <= 2021",
        "j dec -142 if k != 2020",
        "a inc 905 if xdl == -1487",
        "giq inc -1 if k > 2012",
        "j inc -123 if sd != 433",
        "a dec -615 if ms >= -1270",
        "q inc 848 if ms == -1269",
        "kt dec -69 if w < -3838",
        "fxx dec -676 if i > 926",
        "iox dec 980 if gi > -131",
        "fxx dec -716 if giq != -758",
        "fxx dec 937 if sd > 433",
        "sd inc 414 if i != 914",
        "cl inc -625 if giq <= -757",
        "gus dec 306 if fxx != -1390",
        "q inc 228 if lp != 1010",
        "ms inc 340 if gus == -549",
        "cl inc -185 if xtz == 461",
        "m dec -550 if f == -6363",
        "fxx dec 73 if lp >= 1019",
        "ms inc 651 if w != -3842",
        "giq inc 155 if xtz > 450",
        "wm dec -41 if icg < 253",
        "wm inc -535 if k != 2006",
        "j dec 181 if a >= 2094",
        "cl inc -70 if km <= 114",
        "i dec -910 if db < 2085",
        "mxn dec -616 if giq != -610",
        "ms inc 688 if lp <= 1019",
        "kt inc 264 if f == -6357",
        "gi inc -200 if xdl >= -1496",
        "rz dec -610 if km < 121",
        "w dec 82 if wm < -3085",
        "giq dec 136 if um != -483",
        "rz inc 804 if km < 121",
        "i dec 197 if um < -475",
        "cl dec 656 if ms == -241",
        "m inc 656 if w <= -3921",
        "lp inc -497 if gus > -557",
        "xtz inc 47 if w > -3926",
        "hey dec -130 if km <= 112",
        "gus inc 800 if gus > -555",
        "icg dec 229 if wm == -3089",
        "kt dec -746 if gi != -333",
        "xdl dec -365 if m == -2896",
        "gi dec 286 if j > 430",
        "wm inc 858 if q > 1393",
        "mxn dec 440 if iox >= -2798",
        "sd dec 651 if hey < -282",
        "um inc 135 if kt <= 220",
        "hey dec -639 if ms != -251",
        "lp dec 558 if q != 1393",
        "kt dec -264 if kt != 217",
        "sd inc -523 if k >= 2006",
        "k dec 938 if w <= -3917",
        "mxn inc -120 if um == -350",
        "giq inc -223 if icg > 16",
        "m dec 171 if xtz < 504",
        "um dec 850 if xdl == -1122",
        "iox inc 955 if km >= 118",
        "gi dec -910 if icg == 20",
        "db inc -39 if xdl > -1116",
        "mxn dec 481 if xtz > 491",
        "um dec 766 if iox >= -2798",
        "sd inc -103 if um != -1967",
        "q inc -673 if q <= 1403",
        "hey dec -471 if xdl == -1122",
        "j inc -818 if sd <= 212",
        "fxx dec -749 if ms > -238",
        "w inc 407 if xdl >= -1123",
        "mxn dec 138 if xtz >= 507",
        "rz dec 257 if db != 2071",
        "xdl dec 116 if lp > -38",
        "mxn inc -162 if xtz <= 495",
        "gi dec 669 if i < 1633",
        "gi dec 187 if ms == -251",
        "mxn dec 893 if xdl != -1229",
        "k inc 616 if i <= 1633",
        "xtz dec 881 if a <= 2105",
        "gus inc 732 if i != 1627",
        "kt inc 749 if a == 2103",
        "f inc -289 if rz <= -346",
        "um inc 919 if f < -6644",
        "wm inc -646 if m != -3067",
        "hey inc 1 if a != 2108",
        "xdl dec 725 if ms <= -238",
        "j dec -789 if k != 1695",
        "hey inc 317 if w < -3515",
        "kt inc 965 if gi >= -379",
        "wm inc 137 if a != 2101",
        "sd dec -783 if hey <= 1160",
        "gus dec -349 if um <= -1046",
        "ms inc -843 if sd == 1004",
        "k inc -298 if f >= -6661",
        "gus dec -15 if gi <= -365",
        "gus dec -411 if wm <= -2092",
        "cl inc 25 if icg != 30",
        "km inc 634 if m == -3067",
        "kt dec 856 if gus < 1766",
        "xdl inc -808 if fxx <= -1461",
        "xdl dec -883 if rz >= -358",
        "gus dec -311 if j > 1214",
        "sd dec 349 if xdl == -1888",
        "mxn dec -309 if j <= 1225",
        "giq dec 181 if ms >= -1087",
        "rz dec -951 if iox >= -2788",
        "k dec -824 if lp != -42",
        "fxx dec -984 if km <= 746",
        "mxn dec 333 if gus <= 2067",
        "fxx dec 742 if db >= 2078",
        "kt inc -367 if mxn > -1793",
        "i dec -853 if lp < -27",
        "kt dec -491 if wm < -2085",
        "ms inc 233 if wm != -2097",
        "i inc 729 if rz != -363",
        "ms dec 246 if km < 737",
        "xtz dec 455 if cl > -4106",
        "icg inc -755 if kt <= 1206",
        "wm dec -828 if mxn <= -1798",
        "giq inc 397 if xdl != -1888",
        "mxn dec 861 if cl != -4101",
        "fxx dec 406 if f <= -6653",
        "icg dec -101 if rz == -355",
        "gus dec -147 if cl <= -4101",
        "cl dec 717 if q > 728",
        "db dec -276 if m < -3061",
        "k dec -3 if sd > 651",
        "lp dec -357 if xtz < -827",
        "f dec -380 if lp <= 322",
        "cl inc -740 if gi > -368",
        "sd inc 744 if fxx >= -1221",
        "iox inc 39 if mxn != -2661",
        "fxx inc -569 if ms < -841",
        "j dec 19 if gus == 2216",
        "sd inc 826 if f < -6267",
        "cl dec -377 if f != -6272",
        "fxx dec 318 if icg >= -638",
        "db dec 638 if xdl == -1883",
        "q dec -923 if um >= -1055",
        "a inc 22 if q < 1656",
        "rz inc 129 if sd <= 1484",
        "db dec 408 if kt == 1199",
        "q inc -782 if iox <= -2750",
        "w dec 232 if fxx >= -2119",
        "gi dec -887 if km >= 738",
        "hey dec 35 if icg < -624",
        "xdl inc -379 if um > -1052",
        "hey inc -596 if icg != -638",
        "hey dec -945 if um >= -1047",
        "xdl dec -202 if k > 2219",
        "rz dec 76 if f < -6269",
        "xdl inc 289 if q <= 876",
        "rz inc 308 if kt >= 1190",
        "a inc -190 if lp != 317",
        "kt inc -195 if db >= 1944",
        "f dec 526 if q < 878",
        "wm dec -305 if xdl > -1777",
        "xdl dec -99 if k != 2215",
        "fxx inc 953 if wm == -1789",
        "hey dec 625 if rz == -1",
        "mxn dec 319 if mxn < -2644",
        "m dec 611 if f == -6798",
        "fxx dec -83 if icg < -639",
        "gi dec 567 if cl > -4830",
        "ms inc -95 if mxn < -2966",
        "um inc 862 if gus != 2215",
        "hey dec -341 if icg == -634",
        "iox dec 829 if f <= -6801",
        "giq dec 376 if kt == 1012",
        "lp dec -990 if um < -183",
        "iox inc -868 if kt >= 999",
        "iox dec -670 if f <= -6796",
        "fxx inc 895 if gus < 2209",
        "k inc -916 if q <= 873",
        "rz dec 646 if w >= -3747",
        "kt inc -807 if j == 1203",
        "fxx dec 568 if gi >= -43",
        "giq dec -966 if q < 877",
        "rz inc 250 if giq < -174",
        "iox inc -19 if i == 3212",
        "f inc -404 if k <= 1304",
        "gi dec -481 if kt >= 195",
        "giq dec -323 if gi < 424",
        "lp inc 873 if km >= 752",
        "icg dec 953 if um <= -182",
        "q dec 246 if db != 1942",
        "rz inc -987 if lp > 1307",
        "hey inc -728 if xtz <= -837",
        "fxx dec 743 if xtz != -843",
        "km dec 393 if km <= 740",
        "rz inc 635 if icg < -1578",
        "k dec -136 if km <= 742",
        "gus inc 715 if giq >= -185",
        "lp dec 782 if km >= 741",
        "ms dec -140 if sd != 1479",
        "iox inc -992 if sd != 1488",
        "wm inc 8 if ms >= -802",
        "giq dec 134 if xtz <= -830",
        "mxn dec 877 if xtz > -832",
        "lp inc -260 if ms > -815",
        "xdl inc 170 if w > -3742",
        "q inc -674 if gi != 434",
        "giq inc -760 if wm <= -1788",
        "km dec -96 if hey != 1802",
        "j inc 662 if fxx >= -1904",
        "gus dec 305 if a <= 1943",
        "db inc 881 if icg > -1583",
        "um inc -137 if rz >= -96",
        "mxn dec -755 if lp == 269",
        "lp inc -220 if hey > 1799",
        "cl inc 652 if xdl >= -1678",
        "gus inc -473 if a >= 1935",
        "k dec 80 if i != 3216",
        "gus inc 138 if xtz != -831",
        "mxn inc 654 if giq >= -1075",
        "xtz inc -677 if um >= -323",
        "cl inc -557 if hey >= 1807",
        "m dec 488 if lp == 49",
        "k inc -214 if q != -49",
        "k inc -584 if cl != -4727",
        "icg inc -423 if ms == -806",
        "gi dec -323 if fxx >= -1909",
        "ms dec -61 if giq != -1062",
        "wm dec 259 if q < -45",
        "f inc -634 if gi == 753",
        "iox inc 985 if gi > 750",
        "km dec -821 if db < 1950",
        "f inc 105 if gi < 763",
        "j inc -36 if q <= -44",
        "ms inc -244 if giq < -1063",
        "i dec 423 if cl == -4727",
        "kt dec 77 if sd == 1481",
        "db inc -779 if gi == 753",
        "gi dec -525 if iox <= -2985",
        "f dec 378 if rz != -86",
        "mxn dec 479 if km < 1671",
        "f inc -812 if kt > 118",
        "db inc -121 if kt < 128",
        "w inc 957 if mxn == -2042",
        "db inc -97 if mxn != -2052",
        "km inc 521 if q < -46",
        "a dec -669 if i >= 2783",
        "icg inc 47 if km > 2176",
        "gi inc 459 if gi != 760",
        "mxn dec 810 if hey >= 1803",
        "ms inc -896 if xtz != -1522",
        "fxx inc 331 if cl == -4727",
        "hey dec 104 if sd < 1482",
        "f dec -684 if f < -8923",
        "xtz dec 893 if giq > -1080",
        "um dec -749 if db < 962",
        "rz inc 823 if sd <= 1484",
        "a inc 4 if w > -2793",
        "cl dec -559 if a > 2614",
        "iox dec 116 if db <= 956",
        "cl dec -384 if gus == 2291",
        "lp inc 522 if kt > 118",
        "icg dec -250 if km <= 2186",
        "j inc -144 if mxn > -2843",
        "kt dec -682 if ms > -1891",
        "gi inc -320 if sd < 1489",
        "iox dec -955 if kt != 802",
        "mxn dec 949 if lp > 570",
        "mxn dec -84 if wm > -2050",
        "xtz dec 762 if kt == 802",
        "wm dec -74 if um != 422",
        "m inc -948 if gi >= 889",
        "w inc 90 if w != -2792",
        "j dec -516 if fxx <= -1568",
        "cl inc -457 if k <= 1232",
        "ms dec -288 if w != -2792",
        "ms inc 57 if db >= 946",
        "a dec -481 if w >= -2800",
        "icg dec -210 if ms != -1827",
        "giq inc 323 if a != 3098",
        "ms inc -646 if iox <= -3090",
        "mxn dec -390 if lp > 565",
        "db dec 634 if hey >= 1701",
        "iox inc 357 if w >= -2799",
        "hey inc 434 if icg != -1503",
        "um dec 763 if xtz == -3168",
        "giq dec 742 if m != -5115",
        "giq inc -645 if db < 318",
        "f inc -832 if ms == -2474",
        "xtz dec 921 if w > -2799",
        "f dec -259 if xtz <= -4086",
        "mxn dec -689 if ms == -2468",
        "kt inc -725 if iox != -2732",
        "sd inc -586 if rz <= 730",
        "w dec 94 if xdl > -1682",
        "lp inc -793 if km > 2185",
        "cl inc -764 if j < 2348",
        "lp dec 656 if fxx != -1577",
        "f dec -892 if db > 319",
        "i inc -441 if k <= 1230",
        "db dec 935 if q == -49",
        "q dec -926 if xtz > -4094",
        "q inc 729 if fxx == -1572",
        "lp inc 115 if k != 1233",
        "j dec -252 if mxn == -3318",
        "w inc 695 if gi <= 891",
        "j dec -721 if gi < 899",
        "sd dec -132 if sd == 896",
        "cl inc 856 if icg == -1503",
        "giq inc -142 if k >= 1218",
        "iox inc -328 if db <= -617",
        "db inc -199 if wm >= -1981",
        "km dec -364 if j == 3066",
        "cl dec -659 if sd >= 891",
        "xtz inc -207 if giq == -1632",
        "cl inc 928 if i <= 2339",
        "giq inc -897 if km != 2544",
        "mxn inc -61 if xdl > -1679",
        "f inc 953 if lp >= 30",
        "f dec -450 if giq > -2535",
        "w dec -962 if kt >= 68",
        "gi inc 317 if km < 2556",
        "kt dec -271 if k >= 1231",
        "iox dec 238 if i <= 2352",
        "xtz inc -840 if ms <= -2467",
        "giq dec 905 if f >= -8097",
        "kt dec 484 if icg <= -1502",
        "lp dec 675 if km >= 2539",
        "ms inc 772 if j <= 3073",
        "ms dec 297 if q > 1604",
        "kt inc 465 if hey > 1701",
        "w inc 987 if kt > 50",
        "xtz dec 180 if q == 1606",
        "um dec -823 if gus != 2284",
        "hey inc -964 if um == 487",
        "kt inc 387 if cl > -4046",
        "cl dec -167 if gi == 1209"
    );

    my %regs;
    my $maxEverKey;
    my $maxEverVal;

    for my $instruct ( @day8Instucts )
    {
        $instruct =~ /^([^ ]*) ([^ ]*) ([^ ]*) [^ ]* ([^ ]*) ([^ ]*) ([^ ]*)$/;
        my (
            $dst,
            $incDec,
            $addend,
            $testReg,
            $cond,
            $testVal
        ) = (
            $1,
            $2,
            $3,
            $4,
            $5,
            $6
        );
#       print "$dst $incDec $addend if $testReg $cond $testVal\n";

        # If it's dec, change sign on $addend, then we add regardless.
        if ($incDec eq "dec")
        {
            $addend = -$addend;
        }

        # Ensure registers are defined.
        if (!defined($regs{$dst}))
        {
            $regs{$dst} = 0;
        }
        if (!defined($regs{$testReg}))
        {
            $regs{$testReg} = 0;
        }

        # Figure out if the condition is true.
        my $truth;
        if ($cond eq "<")
        {
            $truth = $regs{$testReg} < $testVal;
        }
        elsif ($cond eq ">")
        {
            $truth = $regs{$testReg} > $testVal;
        }
        elsif ($cond eq "==")
        {
            $truth = $regs{$testReg} == $testVal;
        }
        elsif ($cond eq ">=")
        {
            $truth = $regs{$testReg} >= $testVal;
        }
        elsif ($cond eq "<=")
        {
            $truth = $regs{$testReg} <= $testVal;
        }
        elsif ($cond eq "!=")
        {
            $truth = $regs{$testReg} != $testVal;
        }

#       print "$dst ($regs{$dst}) $addend if $testReg ($regs{$testReg}) $cond $testVal $truth\n";
        # If true, add the addend.
        if ($truth)
        {
            $regs{$dst} += $addend;
            if (!defined($maxEverVal) || ($regs{$dst} > $maxEverVal))
            {
                $maxEverKey = $dst;
                $maxEverVal = $regs{$dst};
            }
        }
    }

    # Find the largest value in any register.
    my $maxKey;
    my $maxVal;
    for my $key (keys %regs)
    {
        if (!defined($maxVal) || ($regs{$key} > $maxVal))
        {
            $maxKey = $key;
            $maxVal = %regs{$key};
        }
    }
    printf "day 8 part 1 largest value %d in %s\n", $maxVal, $maxKey;
    printf "day 8 part 2 largest ever value %d in %s\n", $maxEverVal, $maxEverKey;
}


# day 9
my $day9Input

= '{{{{{{<!o!>!!!!!!">},{<e!>!!>}},{<},!,!!!>}e!!!>{!>{,i!!!>,<}>},{'
. '<a!!!>e\'!!!>,<!>!<\'o\'!!{au!{!>},<}!<>}},{{{<eu<!!!>!!!>!>!>,<!'
. ',oo>}}},{{{},{<ai!>!>,<e!>},<}!!!>e>,{{<!u!>,<,a<ae!>,<\'!o\'!>!u'
. '{!!!>,<,!!!>>}}},{{{<!!!oe}e},}!>}{e!!o!!,o\'{<a>},<ei,{!!!>{!!{a'
. '!!!><<!{>},{{<>}},{{{{<{!><ei>},{{}}},{{},{<,!u!<o!!!>e!>},<!>!!!'
. '>,<ia!>!!!>!}}"{>}}},{}}}}}},{{{<!>},<,!!}<i<!><!a!o!!<>},{<\'"!,'
. '!!!>},<!!!>,<i!>oo">,<>},{{{<!>},<\'\'!>},<!>,<!!<}!ea!<!>},<o>},'
. '<!i!oo>},{{},{<a!>,<!e",\'}>}},{{<!!!}iu!>!!,!!iau!>""!>},<!>e{i}'
. '>,<"!!>},{{<<}"!ou!!o,>}}}}},{{{{{<!!!>\'!!{!>,<>},<!>},<!\'!>},<'
. 'u!>"<,!!!><i!!!!,!>u\'!>},<!>a>},{{{<">},<!!iu!!!>\'e!>,<<{,!!a{!'
. '>},<u>}}},{{{}},{{{<!!!>},<!!!>,<u\'ae"!>>}},{{<"!"\'!>,<<!!!!!>!'
. '>},<>}}}},{{<!}!<>},<e!!!>!!i,!!ao!>,<!>},<>}},{{{{<i!>},<u<!"!>e'
. '",!i!>i,}!>!!!!!>!!!!!>>},{<!!!>!!\'!!!!!!!!!!!>,\'i!!aau,!>!!>}}'
. '},{{},{<,!!!!,o!!!>},<!>,<o!>},<",!!!>u!!\'eou!>>,{{},{<!!!!!>!"{'
. '<e!>},<}}>}}}}},{{{{{<>,<e<!!!>},<!"!!!}!i}!>},<e<,>},{{{<,!o!}>}'
. '},{{<u,\'!!,o!!!>!!!>ui!>},<!\'"o!>,<\',!o>},{<!>},<!!i!i!>uiui"}'
. '<!!!>!!}!!!>a}>}}},{{<!!!!!!a","io<,ea!!!>},<!!!!!>o!>>},<!!a!>,<'
. '!>!u>}}},{{{<!>,<e!!!>,<<!>,<!e!!!>\'e"{io!>!>ie>,<!u!>},<!>!!e!>'
. '!>,<!},!!!>>},{{<!>,<o!!\'!!!>},<!><!>,<>},{}},{<>,<a}oouu!>,<e}!'
. '>e{{}uu>}},{{{<a!!!!!>,<\'!>,<!e!>},<!>e!!}!!!>}>},{<aa{!>,<!!\'e'
. ',<o,!!!>o<!!!>o>}},{{{}},{<!>!!!>\'>,<!{!!iu>}},{{{<"!!!\'!!,!>,<'
. ',!"!>},<{!!,}{!!}!>o!!u>},{{<!<o!u\'!>,<!!!>},<,!!e<!!>}}},<>}},{'
. '{{{{{},{}},{<"!>,<!!}!>,<!>,<{},}<!!!}>,{}},{{<<!>},<i!!!>},<ii!!'
. '}!!!>},<!!"a",>}}}},{{{{{{{<a}>}},{}},{{},{{<i!!!>a!!i}}o!!!>!>,<'
. '<}a\'!!!!!>},<!>},<o!!!!o>},{<a{!>!>,<!<}!!!>,<!>},<<">}}}},{{{}}'
. ',{<>,{}}}},{{<!!!>\'o<ei>},{{}}},{{<<!!!"e{,!>!!,,!!!!!>{"u!>}!a>'
. '}}},{{{<!!!>},<\'!>"}!>,<!!!>>,{{},<ua!!!>i<u"!!!!>}}},{{},{{<a"a'
. '!>},<!>},<i!!!!a!>},<<\'!!i!!!!!o!!!>i<a>},<!!!"!>},<a>}}},{{<!i'
. '\'o!!e}<!>i{>,<{u,!!e!!{"\'o!!!>,<!>},<!>,<>},{<i\'!!u!>,<""<!!!>!'
. '!!>!!!>!!!!e\'!!!>!>},<}>,{{},{{<\'e!!!}!!i}{a!!!>{!}!!!!!a>}}}},'
. '{<!>,<o}ui!<e!>,<{>}}},{{<>},{{{<"!!!!,}}!!!{!>},<i","!!!>,<e>}}}'
. '}},{{<!!<iiu!!!!u!!!o>,{<!!!>},<"\'>}},{{}},{{{{<!!eu}!>a!!a!!!>>'
. ',<u{{i!!\'>},<!\'!!!!!>i,}!!""!o!!!>>},<\'!!}!>,<<u"!>,<!>i!{i!>,'
. '<!<<!!!!,!>,<">}}},{{{{{<!>},<!!<u!,e<o>}}}},{<!>,<!!!>!!"<<>,<"!'
. '>},<!\'!>,<!!!!!>},<e!!iu>},{{{{}},<o!!e!!!!!>ei!!\'!>,<<!!<}o!\''
. 'i!>>},{<!{uui!,>}}}},{{{<!>,<{!><!!!!>},{}},{{{<\'i>},<!\'!>!!o!}'
. '!!<e!>!>,<,a>}},{{},{{<{iu}"!>,<e>}}}}},{{{<!!!>!!!>!!!><u!>,<!,!'
. '!!!!>,<!>,<"!!>},{}}}},{{{}},{{{},{}},{<\'u!>},<!!!>},<!>,<!!}!i,'
. '\'!!!>!!e>},{{{}},{<!>,<<!o!!,!!!>"u!}a<}>,{{<!!!>,<eo!>{!!{!>,<<'
. '!!,{!>},<a!!!!e!u!>>},<i"}!!"o<oi>}}}},{{<\'!>},<ie>},{<!i!>,<!>,'
. '<!}}!>}"{!!}>}}},{{{{{<}!u>},{<!!!>oa{!!!!!>o{!!a!!!>!>,<i!>},<\''
. ',!>{>}}}},{{{{{<!!!>},<\'"!!{,e>}},<<,!!!,!}i!!<\',u>},{{{}},{<!!'
. '\'\'u!e!!!>!>},<i!>,<!!<!\'o\'!>!!!>!!!!!>!!!u!!>}},{{<ee!>!>,,!!'
. '!>,<!!!>e!><}!<>}}},{{<!!!>},<!!}!!!!{i"}!!">,{}}}}},{{<!!<!e{\'>'
. ',{<ee>}},{{<u!!!!{<u!><iooa\'e<uo>},{<!>uou""!>,<!>},<!!!>},<u"u>'
. '}}}}}},{{{{{<!>,<!>!>},<!>a!>},<"{eeu!a{!>,<>,<!!!>>}}},{{{{<uea}'
. '"!e!>>},<<!!\'!!!>!,{\'o!>},<!>!!!>,<e{o,\'}>},{{<o}e!!!>!>},<!>}'
. ',<}!!,!!a{ie{<u}>},{{{}},{{<>}}}}},{{<}i!!!>!>},<}"e!>,<!e<>,{<\''
. '!>!!!>a!!{\'oe}!!oo>}},{{<i}i"<!>,<u!>u!!!>!!!>},<e>}},{<,}!!<a!>'
. 'o!>,<!"<>,<!!!>!>},<a!!e\'!\'u!>{,{!!o}>}},{{{<oa!!!>!!!>!>a,,,!!'
. 'oe,o!>!!\'!!!>>,{<}"!!<"i!>,<!>,<aa}<{u">}},{<!!a!!<!!!>},<\'>},{'
. '{<",!!!>!>,<,a!}<"}!>!!!>!>},<!>,<>},<!>,<!!<,>}},{{{{},{{{{},<!!'
. '!>},<,<u}<oe!"<!>o!!!>"!!!>!i>},{<<}oa!ae<e!!ooo\'>,<!!,!!u!>},<u'
. '!!!!"<!>u!>!e"!!!!!>{u<!>},<!>,<>},{{},<>}},{{<!!!>u},{!!!>,<{!>,'
. '<a!>},<<!>u>,{}},<>},{{{{},{}},{<!>!!!!!a!!!>!e,"!!!>>,{<!>,<!>},'
. '<ieo!e>}},{{<e!>,<\'\'!>,<<ia!i\'\'>,{<{!>,<<u}!!!>u,e,!>!!!>},<>'
. '}}}},{},{{<!}!!u!!!>!!!>i<o!,\'!!!>{!!o!!iu,!!!>>},{{<o\'u!>,<>}}'
. '}}},{{<!>},<!!u>},<oi""uo!>\'!!i"uuu!>},<"{>}}},{{},{}},{{{}},{}}'
. ',{{{{<!>,<>}},{{{{{}},<>}}},{{<u<<!!o!>,<u<!>ai!!!>}>},<!!"!>},<'
. '\'}e"<"\'\'!>>}},{{{<!!}!{eao!!!>},<!>,<i>}},{{{{{<ou!!<!>},<!!!>>'
. '}},<o!!!!u!!!!!>!\'!>o!io>}}},{{{<iu,}}!>!!!!ei}!>,<\'!>,<,!>},<{'
. '!>!>},<{>}},{<{!>,<!!!!}!!!!!>!>,<>,<!!{!><a!>,<i!!!>},<<!!!>!>!>'
. ',<!!!>,!!u!io>}}}}}}},{{<>},{{{<>}},{{<!>,<,iea{>},{}}}}},{{<}<<e'
. 'o!u"!>,<!>},<u!!!ee"!!!>},<>,<}ii!!!>},<<a!!<ua>}},{{{<!!!>!>,<,'
. '\'!!<>,{{},<<oee!>},<\'a!!!>a!!>}},{<!>,<!>},<,a!!!!!>aau!>},<!>},'
. '<!!>}},{{},<!!{<<""!>i!!!>!!!>!!a!>,<}!!!>!!\'!!>}},{{{{<,,oa!!!!'
. '!>u!!\'ee!!!!!>""a{>},{<o!"\'u!!i>}},{{<e>,{<!>},<!!{o!>,<!,!>,<!'
. '!!>u"ou,{,>}}}}}},{{{<o>,<!>},<e!ui!!!>e!>},<!!e}!!!>\'o!!!>!!{a!'
. '!!,>}},{{{{<!!ae<oa!!!!!!!>>}},{{},{{{<!>,<!ei!>!!!!!>\'i!!!!{,""'
. '!,iui!!!>>}},<!!!!!>!!!>},<iu!>},<"!>},<ee!!u\'o!!{}{!>,<!!!>>}},'
. '{{{<<}u!{e>,{<!!!>>}}}}},{},{}},{{<!>>,{}}},{{<}>,{<<!,!!uu}\'!!e'
. ',!e"<e!>},<!!o!!"o>}},{{},{<u\'<!!!>!e!>},<u}<\'\'"!>,<!!!>},<!>}'
. ',<ae!!!>},<>}},{<!i!!!>!>,<<!!!>a!\'!!o{!!,!>},<u!>},<o}o>}}}},{{'
. '{{{<i!!!!!>!>,<u"e!!!!!>!><<"!u"!!!!!!{!!>},{<e>}},{},{{<o!!!>o!!'
. 'o",>,{<e,i!>!!!>},<!>},<!\'!!!>{!>,<\',!!!>ei!!!!>,{<!!!>,<!!\'!<'
. 'e>,<!>,<,i!!ei!>{!!!><!,euo!!i"e">}}}}},{{<!ee",>},{{},<>},{{<}!o'
. '<a!>!!!>u<!>,<!!ua"\'u"!>u!>,<!>,<>}}},{{{{{{{<!\'i{!!o,{"eo!>{i>'
. '}},{<!>{!>},<<e!{"{!>,<i\'\'>}},{<>,<!!!>},<{>}},{{{{<"e!<uu!>,<,'
. '!>},<!u,>},{}},{{{{<!{!ae!>},<\'!>,<!,>,{<{!><}a\'!>,<u!>,<,!!!!,'
. 'e!!i{<\'!>,<i>,{<e!!{ia!!o!!!>!>,<>}}},{<!<\'{<!>,<}!!<"<!!\'<<\''
. 'ae}}!>,<a>}}},<,{o!>!i!!oo"!>},<!<>},{{{<u!i}u{>},<!!!>\'{}!!!>,<'
. '{!!u,>},<eea!!\'e!>,<!>},<{!>,<{!!i!>e>}},{{},{<e!!!}aoa!>!e!>,<u'
. 'e}o!>},<>}},{{},{<{!"">}}},{{{{<!au!!o!"!>},<oo}>},{}},{{{<>}},<"'
. '"a"!>,<i<!!!!a!>!!}!>,<u\'!!!>>},{<aaaaa<\'uai{io>,{<o>}}}},{{<a,'
. '!!e,{{o\'!>"e,<>}}},{}},{{{<"!>,<!!!u<>},{<u!!>}},{{{<">,{<>}},{<'
. 'a"oe!!!>!!<>}}},{<!>!!!!!>ooa!!}!!!>,<!!!>!>,<aa!>}\'!>},<>,<i!>,'
. '<!>,<e"<u!>u>}}}},{{{{<o!>},<,\'i!>oe{!!<!!!>!!}>},{{<i!!i<<!!!!'
. '\'\'!!!>,<\'!!!>!>},<!>!!!>>,{<u{!!!>!>!>},<>}}}}}},{{{<!i<{,uea!>'
. '},<,{\'o!!o!>>},{<u,!!!!}!!!>},<>,{{{{{<!!,!!!!}\'!>!!!>,<!>},<}!'
. '>,<!>!!<!>,<\'o!>},<e}!>,<i>}},{}}},{}}},{{{},<,<\'u>}}},{{{},{<!'
. '>},<}!!iau!!a}<!>o!!!>,<e!!u!!u\'!!!>>},{{},<!!\'<!!!>\'}!!{!!}i"'
. '\'!a,!>},<<e>}},{{},{{<uu,\'!!!>e>},{}}}},{{{<!a\'!!}!!{<{}oe!!!!'
. '!o}!>},<>,<!>},<e!!!>\'o!{>},{{<!>e!>,<,!!!>i!!!>{!{u\'!>,<,"!>,<'
. 'eu<{>},{{},{<,e!!{{!!u!>}!e!!i{ie}!>},<a\'ou>}}},{{{},{<e!>},<\'o'
. 'e"o!>,<>}}}},{{},{}},{<!!!>i!!{<u!!!>!>,<!>,<!>,<"{\'<e},>,{}}},{'
. '{<!u!!,o,}!>,<ie!>,<!o!>},<u!,!>,<!"o>,<!>},<a!!!!{!!{!>},<a!>!>}'
. ',<!>,!!!>>},{<!>},<!u!>,<!>o!!!!!>o<!>},<e<!}}!}e>}}},{{{{<}!>,<}'
. 'oi>},<!!!!}!>},<!e!!e>},{{{<!!!>>}}}},{{{<!>},<i!!!!!>},<>,<!>!!}'
. '!!!!!!{i!!a>},{}},{{},{{{<!i!>,<{}}a!!!!!>iu!>!!ie,!!!>i!>,<{>}},'
. '{{{<u!}i!>},<>},{<!>,<o!<!!!!!>!!!>!!e}"!!>}}}},{{},{{<!>o\'\'"!>'
. '!ue}!>!!<"}!>!!!>!!{>}}}},{{{<"e>},{<\'!i!>,<u>,{<!!u!>},<e!!!>>}'
. '}},{<"<!!!><"}u,!>e!!u\'{!>},<ui!!!!,>},{}}},{{<!!o"uu!<!>},<>},{'
. '}},{{{<u!>>}},{<!!}>},{<i!!!>}i!>>,{<!!oa!>!!!!eo}o,!}oia!!!>!!!>'
. ',<o}>}}}}},{{{{{<>},{}},{{{<a<\',\'!!!!a"{!>,<!!{!!,}\'!>!!<!>},<'
. '>,<>},{{<}a!!!>",!>,<u!>!>,<!!",!!!>},<!>},<oioo>}},{<u!>},,>,{<o'
. '{!>},<!!"\'"u!>,<oiu!>,<!!o>}}}},{{{{<!!,{,!!,!!i!!!>,<!,i"!>},<!'
. '!>,{<!{<!>,<u>}}}},{<a!!{}!!!!<>,{<eee\'>}}},{{},{{<}uo!!{<aae"!>'
. ',\'>},{<!!!>,<!}!<>}}}},{{{<}<{>}},{{{<<!!!!<!>},<e}\'}ea!!!>!!u!'
. '>>},<!>},<{"!>,<!>},<!!!>!>},<!>,{e!>,<\'oa!!!>u>},{{{<a\'{!u!!<{'
. '!>},<a!>\'ea\'i>},<!!!>ii!><u}!>},<!io!>,<i"!>},<!>,<!>},<!>>}},{'
. '{},{<!>o\'!>!>""!i!!!!e!!!>!!!}i>,<<!>},<!!oai}o!\'!>,<o!>,<!>!!i'
. '{!}a!!!!!!!>>}}}}},{{{<i}!!uee\'"iu\'>}},{{{}}},{{{<!>},<<{e{i!>,'
. '<o!>,<,!u>},{{<!!<"{<!a>}}},{{},{{{{<!>,<!{!!a!!!>!!!>!!{!<!>},<,'
. '<","!!o>},{<i,},!!!>>}}},{{{<<!!!>!>,<!!!>},<{<u>},<<!!!!i>},{}}}'
. ',{<!!!!e{!>},<ao!!,!{i{i!"}u!!!>,e\'>,<"!!!>,<u!!!>,<!><!>>}}},{{'
. '<"}!>!>},<!!!>!>,!!\'a!!!!!>"!!!!o!!{"!>},<u,!>>,{<!!,""!>!u!!!>!'
. '!{!>!aaa,>}},{<,ee!!i>},{{{}},{{<!!}{i!e}{!!e!!}}!>},<{!!}!!!><!!'
. '>,<!>,<!>,<!>}!>,<o!>},<{,i"<e!!}!!!>,<>}},{{<!>,<!!!!!>},<<!!!>!'
. '>},<e\'}!>,<!!!!!}{o!>!>,<>}}}}},{{{},{{{<\'o"<\',,e>}}},{{{<!!!>'
. '"o!>},<u"u<,>}},{{<ei}<u<}!!>},<e"!>u,!}!>,<>}}}}},{{{{<i!!<">,<!'
. '!!!{a,ae!<!>,<>}},{{<!!i>,{}},{<,!!e!>},<i!>>}},{{{<!!!>},<}>},<{'
. 'a!>!ao!!!>},<e}{o>},{{<u!>,!>"\'e{!!!>,<,!}au!>},<!\'o!!<>},{{{<{'
. '\',{}o!e!>,<>}}}}},{{{{<!!"<e!"\'"a>}}},{{{{<!!!!i!>!<}<!!!>>},{<'
. 'eo!>,<!>!><,!>!!!>!!!>},<>}}},{{<{>},{<!>,<u!!,}!\'!>},<!>\'!>!!{'
. '!!!>}!!>}},{{<<!>!\',}e!"!!!>!!!>a!ie!!!!!!i>,{<o!"!!!>},<!!!!!>>'
. ',{}}},<!>},<,!>"\'i>}},{{},{{<oia>},<"\'aueu!!u>}}}},{{{{<!o<<!>!'
. '{!>u\'e\'!!e,iu>},{<\',\'!>,<!!!!{!>},<}u"ue>}}},{{<!!<<uo!!!>},<'
. '!>,<!>,<i!>!"i!!o!!{!>,<u"e}!{>,<}iu!{ou!u\'"!!}!!<,!o"{>},{<!>,<'
. '}!>a!!!>!>,<!!,!>,<ao!>},<>,<!!!>,\'!!!a"\'!!<!!!>,<<!>{!>,<o\'<!'
. '>,<a}>},{{{{<!!"!\'!!!>>}},{{<i>},<}{}<!!!!}e"{!!!>!!!>!!!!!>},<!'
. 'aee!>e>},{<}u\'<<",!e!>},<!!!!a!>,<i!!e>}},{{{},{}},{}}}},{{{<!>,'
. '<"!!!>ea!>!!}!>oa!!!>,<!>},<i}"io>},<a\'!!i}!>},<}!uii!!i!>},<!>,'
. '<!>,<u!a!!>},{},{<!>},<\'u{u!!<\'!!!>e<a}e!!>}}},{{{{{{<u,ia!}{}u'
. '{!!}>}},<!!"!!}!!a!!o}"!>{!!<!>},<\'!!o>},{},{<}!!o!!!!u!!!"o{!!}'
. '!!{!>,<ui"!!!>,<\'>}},{{<>},{{<u}u{\'e<}!\'!!,!a"!>>},{<!>},<>,{}'
. '},{{<o!!!>u!>},<!>,<!!!!!\'e!>},<!>i!ou!>},<>},<e!!!>a!!!>}!!!!!!'
. '>}}},{}},{{<\'u!oi}!!!>!>},<!>},<>,<ie!!!>},<e!>,<u>},{{<e{a<a!!}'
. '\'ia{i!!!>},<!!i}{>},<a>}},{{<!!!>!!o"!!\'i!>,<!i!>e!>,<{!!!>"\'o'
. '>,{}},{{},{<{}io}}!o!!!>},<e!!!>>}}},{{{<"!>{!!{!!!>!!!>{oa}\'u!>'
. '},<u>},<\'!u!>!>u"\'!e}!!!>\'!!!!ee!!!!!!!!!!<>},{{<!>,<u!>,<\'<"'
. 'o!!!>i!>!"!!i>,{<o{>}},{<!>},<!>},<a!!<ia!!!>!!!>i!"u>}}}},{{{},{'
. '{<u!!!!"i!!!>!>,<{!!!>}>},{<!!!>\'!>,<!!!>!!i!!!>,<!>,<"<i!!!!!>!'
. '>a!>},<">}},{{<ou!!!>u!!}>}}}}},{{{{{<<!!e}!i!!\'io<{!>!!!!>},{<>'
. ',<ii{e>},{{<>}}}},{{{}},{<a<!>},<!>,<!!!!<!>,<o!"e{!,e>,{<!!u}!>,'
. '<u}!>oa!>>}},{{<!!!>!!!!{\'<<i<u!>},<a!>e>}}}},{{{{{{<!>},<e!>},<'
. 'o\'e}ie\'i!>},<!!!>>},{{<ei"!!!>!>aa,<<}i!!e{a>,{<!>,<<!>},<iu!o!'
. '>,<}a!>e!!!>!>,<o!>,<>}}},{{<\'i{ea<<{>},{<{!!!>,>}}}},{{{{<{!>},'
. '<o!"e!}!>,<<>},{<!>,<!>},<!>!!<\'!!oae<\'>,{{<!!!,io!>,<">}}},{<<'
. '!>},<>}}}}},{{{{{<!!!><u!!"a!!!!!>!>,<!{!>},<}<!>},<!!!!a!!!"!>!>'
. ',<<>},{<!!!>!!<!>},<!>,<e{!>!!{"!!!!"eo>}},{{{{<!>,<oi!!u<u!!!>!!'
. '"{{u>}},{{<>,<!!!>>}}}}},{{{<o!!!>a!>},<e!!u!>!>,<{{!>},<!!!au"e!'
. '>{>},{{{{<!>,<i!>},<>},<>},{{<!{!>!>!!i!>!>,<>},{<\'<<e>}}}}}},{{'
. '<!ia>},{{<<ao>}},{<,">}},{{{<!!u{i,!>!!!>{,!{,!!>},{{{{<!i}!!i>},'
. '<!!!>e!>"}>},<<!!{!>,<!!""<!!!!!>"!!{eu!!,>}},{}},{},{{{{{},<!",u'
. 'u,u}!>>},<{{!>!!!"i!!e\'!>},<!><i!>!!!>!!>},{{<u,o!>,<<u!!!>ii!!u'
. '!>,<!!<!!!>!>},<!!a!>},<i>},{<{a!>},<>}},{{{<!!\'o!!!>!<!!!!\'>,<'
. ',!"e}}u>},{{{{<,>},{}},{{{{},<\'>},<!!!>,<i!!!!!>!>,<!>,<,<,!!o!>'
. '}!!,!>},<!>>}}}}},{{<u!!{!>!o!>},<ao\'i!!!>\'u>,<!>},<ae"i!!u!>,<'
. '!<e,\'!!"!>\'>},{{{{{{},<<"!>e!>,<,}u"!u{!>>},{<>}},{<\'!>},<{""'
. '\'{u,>}},{<ea!!!!!>o!!!>,,"\'!!!>},<i}{!!"!>},<!!i}<>,<}<>},{{{{{<'
. 'o!>,<!e!!!e!e<!>,<i!!!!a>}},{<!>,<!!!>u!!a>,<!ii}\'!>,<!{{!!!>!>!'
. '!>}},{{}},{}},{{{<!>},<<i!a!!!!e!>,<o\'!>},<,!!!>!!<>},{<!!!>o"!>'
. '},<}!!!>!i"{<!>!>},<,,!>!>,<>}}},{{<!!!>\'!!!>},<i!!<!>ui{"{,a!!!'
. ',i!!u\'!!>,{<!>auo!!!>!>},<!a}\'!>,<!!!>!>,<\'<uo!>,<,o>}},{{{{<e'
. '!>,<!!\'{!!!o!<u!>!!!>a>}},<},!!!>!!ae!!!e"!!}!!!>!!{!>,<>},{}},{'
. '{},<!,>}}}},{{},{{<!!<\'!!!!!!!!!>!!!>!>},<i\'!>},<e,!!,>}}}}}}},'
. '{{{{{<}>,{<{!>!>,<!!!>>}}},{{<!\',!oe}!>,<<!>,>,{}}},{}},{{{<\'!>'
. '},<!>,<ee!!!>!!{!>!>!>},<!!!>u!{!>},<{<>}},{{<u!!!!!!!!,uu!>io,>}'
. ',<oe>}},{{<!u!!!>!>o"!!"i<>},<a!>},<!>,<!>,<>}},{{{{}},<!!!{<\'i!'
. '>},<<i!>,<!!!!!!!><<>},{{}},{{<e>}}}}}}},{{<"!a!>},<!>},<!>}a<!><'
. '}uuo>},{{}},{{}}},{{<e\'aoi!>\'e\'u!>!>},<!>,<}!!!{!>,<>},{<"e\'"'
. ',e!e<!!!>!o!!{>,{<!!ea\'oa!>,<a!!\'>}}},{{<!!!!!>\'u!!<a>,<!!!>u>'
. '},{<!!}!!!>!!}!!{!u}!>,<!>},<>,{<,!!o{"!>,<}"a>}},{{<!>"e!>{},i,}'
. 'ue!!!>{{}!>>},<}i!>>}}},{}},{{{},{}},{{{<!!!>!>,<!>},<!>},<!,!!!!'
. 'ia!>,<e}!>},<!>,<<a<>}},{{}}},{{<!!!>,<i!!"!!!>!aia!>},<{>,{<<,o!'
. '!}ao!>,<!!!>,<ae>}},{<,!!!>!>},<u!>,<oe!>},<!!,!>>},{<!>,<!!!>>,{'
. '<{!!"!<!!a"i!!u<!e!!!>i!e!!!u\'!!e!>,<>}}},{{{{{<!}!>,<{!!i!!o!a"'
. 'ueo!}"!>a<!>,<!!e>}},{<o>,{}}},{{<!!!>!!!!!>aa!>},<>,{<>}}}},{<!!'
. '!!\'!!!!!>o!>,<!!i!>},<a">,{{<i,!>},<}}{!o!e!!!<!>},<!>!>,<>},<!'
. '\'!>!!!!!>o}!>e!!>}},{<!!oi<i!!!!!!!>},<{a{>}}},{{{<!>,<i!!!!e\'u!'
. '>},<!!!>!>!>},<i!>,<!!!!!>>},{<{i,u!!!>,>,{}},{<ioa!!!>o!>},<!>},'
. '<au>}},{{},{<<e!!!!e\'!!{}>},{{{<<a!>,<!!!!!>!}{!>,<}!!<!!\'e!!!!'
. '"!!,!>},<\'>}},{{},<!!!>!>,<!e}"!>,<\'!!!>,<,!>},<\'{!!{}\'>}}},{'
. '{{{{<!!u>,<!>,<!>>}},{<!>!>},<!!e<i\'\'!>>,{<e!>},<u,!\'!>},<!!!!'
. 'a<,!!>}}}},{}}},{{{<}\'!!!!>,<<}\'!!\'{\'\'!!>},{{{<auio!!\'!>},<'
. '!!u{!ao!>!!!!!>u!!,e!"i!!!>>}},<!,ao!o!>,<!!!>!>},<u!!i!>},<!!!>{'
. '!>,<>},{<!!i!>!!{>,<"!!!><e>}},{{{{}},{{},{<!\'!>},<!!!ao{!>>}},{'
. '{<!!,{!!a>},{<!a<!!!>!>!>},<}u!>},<>,{{<}\'{!>,<a<>}}}}}},{{{{}}}'
. ',{{{},{<>}},{},{{}}},{}}}},{{{{{<!><!>},<!>,<!!}>},{{<{!>,<<!!{e>'
. '},{{{{},{}}},{<!!!>i!!a,!>,<!>},<o!e\'"ea!e}!!!!!>a<{>,{}},{{{<>}'
. ',<!!!>,>},{<,o!!{<!"!>,<}"u>}}},{{}}}},{{<>,<"\',"<,!>},<i!!!>!!!'
. '>!!e}!!!>>},{<u!>!>},<"u!!!>>,<!i"<!>,<!>>},{{<"e{!e!>!>,<!>!>},<'
. ',!>"\'!!!!i!>!!\'>}}},{{{{{{},{{<{e!!!>!>>}}},{{}}},{{<eeo">},{<>'
. '}},{{<i!>},<\'a!!!}{!!!>o,!ui!<!>},<!>,<\'!>,<">},{<\'}!>},<<>}}}'
. ',{<"!>u!u<a<,!"{u{>},{{<ai!!!>},<oi!!u!>},<!!!!!>eu!\',!!aui!!"<>'
. '},{{<!>,<!>,<!><!!,!}o!!!>,<!!ie,!!u!!\'!!!>!!"{o>},{<"!>,<a,}<o!'
. '!e!{{!>,<}u}!>},<>}}}},{{{<{{"!!!>!!!>!>,<i>},<\'uu!>!!!}{u,a!>,<'
. '!>},<<o!!!>>},{{{},{{},{{<o!>!a\'{u!!!!!u!!,!>,<e!e<!!i{>}}}}}},{'
. '{<<!!!>},<!>,<oue!!!>!!!!!>!>},<a!!!>o!!!>!>},<\'\'e!!<>}},{{<!!!'
. '>!>},<o\'o!}u!!,!">},{{{<<u!!!>{},!>},<!u,!>},<"!!!!\'ou!!!>eu>}}'
. ',{<uo!!!>!>},<\'!>},<!>,<!!!>{i>,{<{{{\'!>ai\'!!!>iie!<}!!!>!!!!!'
. '>},<}!!>}}},{{{{},<!>},<oou!!!>"i!>!!!!,!>,<!,"!!!>,u,,>},{<oa!>}'
. 'o{o!\'\'o!!!>>}},{{<!o,<o!>!>>},<uoea!o!ui!!,!>}!!!>}<u>},{}}}},{'
. '{{<!>,<\'u!i>}},{<>,<,}!>,<<!!!!,!!!>a\'\'e!u}e!>},<!!!>>},{}}}}}'
. ',{{{{{},<o!>!!}u!>,<{,!!!>e!!<oa!>},<!>},<!">},{{<\'!!a!!,o\'o!>,'
. '<!e{<o>}},{<!!!><>,{{<!>!>,<ou,!>e!!!>!!}i!!!{!!"!<i!>,<!>,<>},{<'
. '>,{{}}}}}},{{<u}<u{!!!!!>i!!\'>},{},{<a!>!}}!>a!a!>},<{!!!!!!,u!u'
. '>,{{<}\'!!u!!!>\',,!>,<a!!ai\'}{!!e!a>},<<e!>,<,io>}}},{{{{<!!!>,'
. '<u{,e!!!>!>,<!!!>!!}!>,<!>,<!!!!!>},<a,{>}},<!!!>!ue}>},{<,!>},<!'
. '!"<u,{ai!\'e!>,<o{{!>,<!>,<\'>}}},{{{{<!>,<ue!>,<iu!>},<{\'a!!}!>'
. ',<!}!>},<<<!!!>>}}}},{{{{{{<"!!!>!!ue\'"<\'!>!>},<!!"o\'"!>,<!>,<'
. '}>},<!!<e>},<!!",!>,<ou\'<"e!!e>}},{{<}oa>,<<e,o>}},{{{{<"!!!!!>e'
. ',!!"!!!{!<i!>},<a!oa!>,<{!!{>},{<i<u,\',u!uuu!<>}}}},{}},{{{{{<,o'
. '!!!>!u!!!!iei!>},<!!}\'<a>}},{<\'{ai}ui!!u!>},<,<!!i>}},{{{<!>,<i'
. 'u"<!!!!i{"e}<!>},<!!i!o!>>},<!!!>,<!>,<a!>}!!!>{!>!>,<o}"o!!!>{!>'
. ',<\'e}>}}}},{{{{{},{{<!!,\'o!!!>,!>,<!>,<!}!!!>},<<"!!!!!!!!!!!>{'
. '<>}}}},{{<!!<"o!!!>u!!i"!!u!!!>{a}oa{!a!>},<>}},{{{{<!!!>},<"!!!>'
. '},<""a\'!!o"ioa"}\'>}},{}},{{}},{{<!>},<!"!i,}>},<!!>}}}},{{{{<!!'
. '!!!>,<>},{{},{{<>}}}},{{}},{{<a!!}u>},{{},{{<!!!!!!!>!\'!!!>}{!>}'
. ',<!!<ao!,!!>}}}}},{{{<!>},<!!!!}!>,<!>!!a!!!o!>!>,<e}\'!>},<!>},<'
. 'e>,<!!!>>},{{<,}!,e!>,<!!!>,u<"!"!!>}}},{<i!!!>,<!!!>}!!ea!,!>,!>'
. ',<o!>},<!>},<!!!>!>,<!<!>,<>,<>},{{<e<!i<}ii!!!!}>,<uu!!!"!!,u!>!'
. '"e\'<>},{},{<"{{iu,!>e!!!!,!>},<!>!!!!!>,<!e!!!>>}}},{{{}}},{{<>}'
. ',{{}}}},{{{<o>,<!>,<ia!>!!}}\'",i!>{<!>,<>},{<!!}\'!!{!!!!!!!>!!a'
. 'e,",<!!o}!>},<>}}}},{{{{},{<!>},<}o"!!!!!o!>,<,iu!!!!"!!\'<!!!!i>'
. '}}},{{{{}},{<<"}!!!>,<!!u!!}!\'!!!>},<!!!>>}},{{{<i}!!ae!e!>},<!>'
. '},<iui!>!<!>!>!i!!\'>},{<!>},<}ee!uuu!!,!>},<!!o,a{,e>}}},{<!"!>,'
. '<>,{<!!!!!>!!!>,<!!!>!>,<,,!!!>\'!o"!<>}}},{{{}}}},{{{{{{<\'o!!!>'
. '},<>,{}}},{},{{<o!<,,,!>},<i>}}}},{{{<}!o!!{"!\'!!!>},<!!!>aa"!!!'
. '>ieao>}}}},{{{{<!!!>},<!!!>uia!!!>!>,<!>,<ia\'e!>u\'\'io{>,{}},{<'
. 'u<!>,<!>},<!!!>o}!!iaa!>},<>}},{{<a\'"!!!!a{,!>,<!!<e!>},<{ea!>!!'
. '!!!>>}},{{{},{<o!!!>ee!!i!!!>i!!!>,<!!<u,!\'!>,<oi!>!>,<>},{{<}u}'
. '\',iai!>,<\',!!au!>>},<!!!!!!u!!!>!>},<!!!>!>,<a>}},{{<>,<!>},<,'
. '\'!>",{o!!!>,<!!u!!<}>}},{<u!"i\'!!!!!>!>,<",oi}!!<!!!>,<\'>,{<a!{'
. '"!>,<!>},<{i!!,"!!e}!>!!!aao>,<!!{u\'!!!><}!!\'>}}},{{<o!!<u\'!>!'
. 'i!e},o,!>,<o!>,<,!i!>"<>,<"u}>},{{{{<!!!>u!!!>e!!!<u!!!{>,{{{}},{'
. '<!>},<\'{!a!><!!u!>ue!!!>!>,<>}}}},<!!e{!>,<eau<!,<\'!!!>}!!!!!>,'
. '<u\'eua>}},{{}}}},{{{<"u}!!!>!!!>o{!!!!{io!!!>e!<!!!\',>,{<!!{!>,'
. '<!>},<}"!!<"\'\'e!!ao>}},<iao!!!>!o!i!>,<!>e!o>},{<!!!>e!\'o\'<>,'
. '{<e,!!!>iui!>!!o!>,<!>},<>}},{{<!!!>,<o!!!>},!!!!!>},<e}oo>},<\'!'
. '>,<!!!!{e!>,<!>{!e\',!",>}},{{{{<!!e!>>,<!!a!>,<i!>},<i!!e{!>},<!'
. '!>},<u,!!!>},<i!!\'\'{i{!>},<uo!!!>{o!!!!!!o!!e>}},{{<>}}},{{{},<'
. 'a!!<!>},<"!o!!!>i!!!>!!e!!!>,!!!!!>ia<<\'>}}},{},{{{},{{<!!!>,<!>'
. '!>,<<o!"!>,<!!\'!!!!,>}}},{{{{}},{}}}},{{{{{<\'!>a!!!!!>"!!!!!>},'
. '<!>!!!>>}},{}},{<i!!!><!e!!!>,<,!>,<"!!!>u!!!!!>!!!>!>!<{>,<"!!!>'
. ',<i"!!i!>,<}\'!!e!!\'!!!!!>u!>"u>},{{},{<!>},<e!>},<u!>!!!>},<>}}'
. '},{{{{{}},<!o!>!!>},{{<,,o!!\'!>},<ai!><>,{<!!,}!!!>e>}}}},{<!!!>'
. ',!>,<>,<!!"uuue>}},{{<!>,<!!<ue!!!>a!>,<oo<!>,<!!o!,u>,<ei!!!>a\''
. '!>,<!!!}<!>,<>}},{{{<u!>,<i"i!>,<!<\'ee,<!>},<>,<"i}{!!!o\'{,i!!,'
. '!>"u>}},{{<!>,<!>!!!>ea<oa"<,{<!!}e!!\'>},<!!>}}}}}},{{{{<!,ei{ua'
. '!!!!}!!>}},{{{{}},{{{{<!!<{!i,<!!"!>,<eu>},<\'>}},<}o<i!!{,>}},{<'
. '!a!>},<!!ioau}>,{<!!,>}}},{{},{{{<!>,<e!!!>\'a!!!><!a!!!>\'!!!!!>'
. '!>},<>}},<"e!>,<!!!>},<!!!\'!!!>o!>},<o}!!,u!!!>,>},{{<eu!>,<u!o!'
. '>},<!!!><\'<!>},<!>},<!\'iaii!!!!u!o>,{<ia>}},{<a!>,<!!{{!>!>},<>'
. '}}}},{{{{<}!>},<!>!!>}},{{<!!"oeo>},<u}}!>,<!!!!u,!"!!\'{!>a!!>}}'
. ',{{{<!!!>i}\'eeu!!!>!>\'>}},{<!>,<"!!!>,<!!}!,!!,!>,<eo!!!,!>},<!'
. '!i}{>,{<{!i{e!>,<oi"!a!!!!!>ue!>},<{!>},<,!>,<i>,{<,>}}},{{<!!!>,'
. '<\'!>},<}>}}},{{{{{<<a!!!i}!>!!!>a!!ao!!!>,<>}}},{{<!>,<>}},{{<!!'
. 'u!!\'"!>},<!!}!,\'"a!,,e>},<!>},<e\'!>,<!>!>},<ea!>!!\'!>},<!!e!!'
. '{<!>,<!!iu>}}}},{{{{},<u,"a,a>},{{<!>},<>},<!!!!!>\'{,!>,<<>}},{{'
. '{}},{{<!!!!e<{!!!oi,,u!>>}},{{<,i\'o!!>},{<u\'eo!>,<!!i>}}},{{<!>'
. 'i>},{<!>>,{{<!!!>u!!{!!{!>,<!>!!>},{<a,e<!!!!o!>},<!}>}}},{{{{}},'
. '{{<!>e!>},<oi<!!o,o>}},{{<!"!!<a>}}},{},{{<!!!>!!a!>,<e!!!>,<{!!!'
. '>!!,!>\',>}}}}}}}';


#day 9 part 1
{
    my $stream = $day9Input;
    my $inGarbage = 0;
    my $nGarbage = 0;
    my $inGroup = 0;
    my $score = 0;

    while ($stream)
    {
        my $char = substr($stream, 0, 1);
        $stream = substr($stream,1);

        if ($inGarbage)
        {
            if ($char eq "!")
            {
                $stream = substr($stream, 1);
            }
            elsif ($char eq ">")
            {
                $inGarbage = 0;
            }
            else
            {
                $nGarbage++;
            }
        }
        else
        {
            if ($char eq "{")
            {
                # Starting group.
                $inGroup++;
                $score += $inGroup;
            }
            elsif ($char eq "}")
            {
                # Ending group.
                $inGroup--;
            }
            elsif ($char eq "<")
            {
                $inGarbage = 1;
            }
        }
    }
    printf "day 9 part 1 score %d\n", $score;
    printf "day 9 part 2 in garbage %d\n", $nGarbage;
}


# day 10
{
    # day 9 part 1
    my @list = (0 .. 255);
    my @lengths = (165,1,255,31,87,52,24,113,0,91,148,254,158,2,73,153);
    my $curPos = 0;
    my $skipSize = 0;

    while (@lengths)
    {
        my $length = shift(@lengths);

        # Reverse the order of $length elements in the circular @list.
        my $first = $curPos;
        my $last = ($curPos + $length - 1) & 255;
#       printf "length %3d, first %3d, last %3d\n", $length, $first, $last;
        for (my $halfLength = $length >> 1; $halfLength; $halfLength--)
        {
            my $t = $list[$first];
            $list[$first] = $list[$last];
            $list[$last] = $t;
            $first = ($first + 1) & 255;
            $last = ($last - 1) & 255;
        }
        $curPos = ($curPos + $length + $skipSize) & 255;
        $skipSize++;
    }
    printf
        "day 10 part 1 product of %d and %d is %d\n",
        $list[0],
        $list[1],
        $list[0] * $list[1];


    # day 9 part 2
    @list = (0 .. 255);
    $curPos = 0;
    $skipSize = 0;

    # 64 rounds.
    for (my $round = 64; $round--;)
    {
        @lengths = split(
            //,
            "165,1,255,31,87,52,24,113,0,91,148,254,158,2,73,153"
        );
        @lengths = map $_ = ord($_), @lengths;
        push @lengths, 17, 31, 73, 47, 23;

        # Do the round.
        while (@lengths)
        {
            my $length = shift(@lengths);

            # Reverse the order of $length elements in the circular @list.
            my $first = $curPos;
            my $last = ($curPos + $length - 1) & 255;
#           printf "length %3d, first %3d, last %3d\n", $length, $first, $last;
            for (my $halfLength = $length >> 1; $halfLength; $halfLength--)
            {
                my $t = $list[$first];
                $list[$first] = $list[$last];
                $list[$last] = $t;
                $first = ($first + 1) & 255;
                $last = ($last - 1) & 255;
            }
            $curPos = ($curPos + $length + $skipSize) & 255;
            $skipSize++;
        }
    }

    # Make the dense hash.
    for (my $i = 0; $i < 256; $i++)
    {
        if ($i & 15)
        {
            $list[$i & 240] ^= $list[$i];
        }
    }
    print "day 10 part 2 dense hash ";
    for (my $i = 0; $i < 256; $i += 16)
    {
        printf "%02x", $list[$i];
    }
    print "\n";
}


# day 11
my $day11Input
  = "s,nw,s,nw,se,nw,nw,nw,nw,n,n,se,n,ne,n,ne,ne,n,se,ne,nw,ne,s,nw,ne,"
  . "ne,sw,se,se,se,se,se,se,se,nw,se,se,sw,n,se,se,se,se,s,n,ne,se,nw,nw,nw,"
  . "s,s,sw,se,se,s,s,s,se,s,s,n,sw,s,s,s,s,s,nw,s,se,sw,s,sw,s,"
  . "s,s,ne,sw,sw,sw,s,sw,s,sw,sw,sw,s,sw,sw,sw,sw,se,sw,sw,sw,sw,ne,sw,ne,"
  . "sw,sw,nw,sw,sw,ne,sw,se,sw,n,n,sw,sw,sw,nw,nw,s,nw,sw,nw,nw,sw,s,nw,sw,"
  . "nw,nw,sw,sw,sw,nw,sw,sw,nw,nw,nw,sw,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,sw,"
  . "nw,nw,nw,se,nw,s,nw,nw,nw,nw,nw,nw,n,ne,n,se,nw,nw,nw,nw,nw,n,nw,ne,se,"
  . "n,nw,nw,nw,nw,n,n,nw,ne,nw,ne,ne,n,nw,n,nw,n,ne,n,s,n,ne,se,nw,n,"
  . "n,n,nw,n,n,sw,n,n,nw,n,se,n,nw,n,n,n,n,n,n,n,n,n,n,se,n,"
  . "nw,n,n,n,n,se,sw,n,n,n,n,n,n,ne,n,s,n,nw,se,n,n,n,n,ne,ne,"
  . "ne,n,se,n,ne,sw,n,ne,ne,n,se,s,n,n,ne,se,n,ne,ne,n,ne,n,s,ne,n,"
  . "ne,ne,n,se,ne,s,n,nw,ne,nw,n,ne,ne,ne,ne,ne,ne,n,ne,ne,ne,ne,ne,ne,sw,"
  . "ne,n,ne,se,sw,se,n,ne,ne,n,ne,ne,ne,s,ne,sw,ne,ne,ne,ne,ne,ne,ne,ne,ne,"
  . "ne,ne,sw,ne,ne,ne,ne,ne,ne,se,se,ne,nw,ne,ne,ne,ne,ne,ne,ne,ne,ne,se,se,ne,"
  . "ne,se,ne,ne,ne,se,ne,ne,se,se,sw,s,ne,sw,ne,ne,sw,se,ne,ne,se,sw,ne,se,ne,"
  . "ne,se,ne,ne,ne,ne,ne,se,ne,ne,se,ne,se,ne,se,se,se,s,ne,se,ne,ne,se,ne,se,"
  . "nw,ne,ne,ne,se,ne,se,ne,se,se,n,se,se,se,ne,se,se,se,se,se,ne,se,ne,se,se,"
  . "se,ne,se,ne,sw,se,ne,n,se,se,se,ne,se,se,ne,sw,se,se,n,se,ne,se,se,se,ne,"
  . "se,se,s,se,se,se,se,se,se,se,se,se,se,se,ne,nw,se,se,se,se,se,se,se,se,se,"
  . "se,se,se,se,ne,se,se,ne,se,se,se,s,se,se,ne,nw,se,s,se,se,n,se,n,se,se,"
  . "se,se,nw,s,se,se,se,se,s,s,s,sw,se,se,s,se,se,se,s,s,s,n,s,se,se,"
  . "se,s,se,se,nw,n,se,se,s,se,se,se,se,s,se,se,nw,nw,s,se,se,se,se,se,ne,"
  . "s,s,se,se,se,s,se,s,se,se,s,se,se,se,sw,se,se,se,se,se,se,s,s,sw,s,"
  . "s,s,s,s,s,s,sw,se,s,s,s,se,se,se,se,s,s,n,s,nw,se,s,s,se,se,"
  . "s,s,se,s,s,s,ne,se,ne,nw,n,s,s,s,se,sw,s,s,s,se,s,s,s,s,s,"
  . "s,s,s,s,ne,s,s,s,se,s,s,s,s,s,n,ne,sw,se,s,se,s,s,nw,s,sw,"
  . "s,s,s,s,se,se,s,s,ne,s,s,s,s,se,s,s,se,ne,s,s,s,s,s,nw,s,"
  . "s,se,s,sw,n,n,s,s,s,ne,s,s,s,s,s,s,s,s,s,sw,s,s,nw,sw,s,"
  . "s,s,sw,s,s,s,sw,s,s,s,s,n,s,s,s,s,s,s,sw,nw,s,sw,sw,s,s,"
  . "n,sw,s,s,s,s,se,sw,ne,ne,s,se,sw,s,sw,ne,n,sw,sw,sw,ne,s,s,sw,se,"
  . "nw,s,s,s,se,nw,s,sw,nw,ne,sw,s,s,sw,sw,s,s,se,ne,s,s,sw,nw,sw,s,"
  . "s,s,s,ne,s,sw,sw,s,sw,s,s,s,s,sw,sw,s,sw,s,s,s,sw,s,s,s,sw,"
  . "sw,nw,sw,sw,ne,s,se,sw,sw,s,sw,sw,s,s,sw,s,s,s,n,s,s,sw,s,nw,sw,"
  . "s,s,s,s,ne,ne,sw,s,sw,sw,sw,sw,s,sw,sw,se,ne,sw,s,sw,sw,s,s,sw,nw,"
  . "sw,sw,s,nw,nw,s,sw,s,nw,sw,sw,n,sw,s,sw,sw,sw,s,sw,sw,sw,sw,ne,s,s,"
  . "nw,sw,sw,sw,sw,sw,ne,s,sw,s,sw,ne,n,sw,sw,sw,s,sw,s,nw,sw,sw,sw,sw,sw,"
  . "s,s,s,n,sw,sw,sw,se,s,ne,sw,s,s,sw,sw,sw,s,s,sw,sw,sw,sw,sw,sw,s,"
  . "sw,sw,sw,ne,sw,s,s,sw,ne,sw,se,sw,sw,sw,ne,ne,sw,sw,ne,n,sw,ne,sw,sw,sw,"
  . "sw,sw,sw,s,sw,sw,n,sw,nw,sw,sw,sw,sw,nw,sw,sw,sw,sw,sw,ne,sw,sw,sw,s,sw,"
  . "sw,sw,sw,nw,sw,n,sw,sw,sw,sw,ne,ne,sw,sw,sw,sw,sw,sw,sw,sw,s,sw,se,sw,sw,"
  . "sw,sw,sw,sw,sw,s,sw,sw,sw,sw,sw,sw,sw,sw,nw,sw,sw,sw,sw,sw,sw,sw,sw,se,sw,"
  . "sw,nw,sw,sw,sw,sw,sw,nw,sw,sw,ne,sw,se,sw,sw,se,sw,nw,sw,nw,sw,nw,nw,nw,n,"
  . "ne,nw,nw,sw,nw,ne,sw,sw,nw,sw,n,sw,s,sw,sw,sw,sw,sw,sw,sw,sw,nw,nw,sw,sw,"
  . "sw,nw,sw,sw,sw,sw,sw,ne,sw,nw,sw,n,sw,s,n,sw,sw,sw,sw,sw,sw,nw,sw,sw,sw,"
  . "sw,nw,sw,nw,nw,sw,sw,sw,s,sw,sw,s,sw,sw,nw,sw,ne,se,n,sw,sw,se,ne,sw,nw,"
  . "nw,nw,sw,sw,sw,nw,sw,sw,nw,nw,nw,nw,s,sw,nw,sw,n,nw,s,sw,nw,n,sw,sw,sw,"
  . "nw,nw,ne,nw,nw,sw,sw,sw,nw,nw,sw,nw,sw,sw,sw,nw,sw,s,nw,sw,nw,nw,sw,sw,nw,"
  . "sw,s,nw,nw,ne,sw,sw,ne,sw,se,nw,sw,nw,sw,n,nw,sw,sw,nw,sw,sw,sw,sw,sw,nw,"
  . "n,nw,nw,s,nw,nw,nw,sw,sw,n,nw,sw,nw,sw,se,sw,sw,s,nw,sw,se,nw,sw,nw,sw,"
  . "ne,n,sw,ne,nw,sw,nw,sw,sw,nw,ne,nw,nw,nw,s,nw,sw,nw,se,sw,nw,s,sw,s,nw,"
  . "n,nw,sw,se,nw,nw,nw,n,s,sw,nw,ne,n,sw,sw,nw,nw,sw,nw,nw,nw,nw,sw,sw,nw,"
  . "ne,ne,sw,nw,n,nw,se,nw,nw,sw,nw,nw,nw,nw,nw,nw,s,nw,nw,sw,sw,nw,nw,sw,nw,"
  . "nw,sw,sw,se,n,se,s,nw,nw,sw,nw,nw,nw,nw,nw,nw,nw,nw,nw,sw,s,sw,nw,nw,sw,"
  . "sw,nw,nw,nw,nw,nw,nw,se,nw,n,sw,sw,nw,n,nw,nw,nw,ne,se,nw,nw,nw,nw,nw,nw,"
  . "nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,s,nw,nw,nw,s,nw,nw,nw,nw,nw,nw,ne,nw,nw,"
  . "nw,nw,ne,nw,ne,nw,nw,nw,n,sw,nw,nw,sw,nw,nw,nw,s,nw,nw,s,nw,nw,nw,sw,nw,"
  . "nw,s,s,nw,nw,nw,sw,sw,nw,n,nw,nw,nw,s,nw,nw,nw,nw,nw,nw,nw,nw,ne,nw,nw,"
  . "n,nw,nw,nw,nw,nw,nw,nw,nw,s,n,nw,nw,nw,n,nw,nw,nw,nw,nw,nw,nw,n,nw,nw,"
  . "nw,n,sw,se,nw,nw,ne,nw,sw,nw,ne,nw,n,nw,nw,n,ne,nw,nw,nw,nw,nw,nw,nw,se,"
  . "nw,nw,nw,nw,nw,nw,nw,nw,ne,nw,nw,se,nw,nw,n,nw,n,nw,nw,nw,nw,n,n,nw,se,"
  . "n,n,nw,n,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,n,s,n,n,sw,nw,nw,nw,se,nw,ne,"
  . "nw,nw,nw,sw,nw,nw,sw,n,nw,nw,nw,n,nw,nw,n,n,nw,nw,n,n,n,nw,nw,nw,n,"
  . "nw,sw,ne,sw,sw,se,n,se,n,n,nw,n,n,n,nw,nw,nw,nw,nw,n,n,n,se,nw,n,"
  . "n,sw,nw,nw,nw,nw,n,nw,s,nw,n,nw,nw,n,nw,nw,n,nw,nw,nw,n,nw,nw,s,nw,"
  . "nw,nw,nw,nw,nw,n,nw,n,se,n,n,nw,nw,nw,nw,ne,n,se,sw,nw,n,n,nw,nw,n,"
  . "nw,sw,sw,n,n,nw,se,nw,n,nw,nw,ne,nw,n,nw,nw,nw,n,n,nw,n,nw,nw,n,s,"
  . "n,n,nw,n,n,n,nw,n,sw,n,se,sw,nw,n,n,sw,n,nw,nw,n,sw,sw,n,n,s,"
  . "n,n,n,n,n,n,sw,nw,nw,n,sw,n,nw,nw,se,n,nw,ne,n,n,n,n,n,nw,sw,"
  . "nw,nw,s,ne,se,nw,n,se,sw,nw,n,n,n,nw,n,nw,nw,n,n,n,nw,s,s,n,sw,"
  . "n,nw,n,ne,nw,n,nw,nw,nw,sw,n,nw,n,n,sw,n,n,nw,n,n,se,n,nw,nw,nw,"
  . "ne,nw,n,nw,n,nw,n,n,nw,nw,nw,n,nw,s,nw,n,s,nw,nw,n,nw,n,nw,n,n,"
  . "sw,nw,n,nw,nw,n,sw,nw,n,nw,n,se,n,n,n,nw,n,nw,nw,se,nw,nw,nw,nw,n,"
  . "nw,n,n,n,nw,n,n,nw,n,n,nw,n,n,n,n,n,nw,sw,n,nw,n,n,n,n,nw,"
  . "n,nw,ne,nw,n,n,n,n,n,n,se,n,n,nw,n,n,n,n,s,nw,n,n,ne,n,n,"
  . "se,n,n,nw,n,sw,n,s,n,nw,n,n,nw,nw,n,n,n,n,ne,n,n,se,ne,nw,n,"
  . "n,nw,n,s,nw,nw,nw,n,sw,n,s,n,n,n,n,n,n,sw,n,ne,n,n,ne,n,n,"
  . "n,se,sw,n,n,n,nw,n,n,n,nw,n,n,n,n,se,n,n,n,n,sw,ne,ne,n,n,"
  . "n,ne,s,ne,n,n,n,nw,n,n,n,nw,n,n,n,n,n,nw,sw,nw,n,n,n,s,ne,"
  . "n,n,ne,nw,n,n,n,n,n,n,nw,n,n,n,n,n,n,sw,n,nw,n,se,n,n,n,"
  . "n,se,n,n,se,n,s,n,nw,n,se,n,n,sw,n,n,n,n,n,n,ne,n,sw,ne,n,"
  . "n,n,n,n,n,n,n,n,n,ne,n,n,sw,sw,n,n,n,n,n,n,n,n,se,n,n,"
  . "n,se,n,n,n,n,n,ne,se,n,n,n,n,n,n,n,n,n,n,ne,n,n,n,n,ne,"
  . "n,n,ne,nw,se,n,n,n,n,n,n,n,n,n,ne,s,n,n,n,n,nw,n,n,n,ne,"
  . "n,se,ne,ne,n,n,ne,n,sw,n,n,ne,n,n,se,ne,n,n,n,n,n,s,s,ne,nw,"
  . "n,nw,ne,n,ne,nw,ne,ne,n,n,sw,n,n,ne,s,ne,n,sw,ne,n,se,nw,n,n,n,"
  . "n,sw,s,se,ne,n,n,n,n,n,ne,sw,sw,s,n,nw,ne,n,n,ne,ne,ne,se,n,n,"
  . "sw,n,se,n,n,se,ne,n,n,ne,nw,ne,n,sw,n,n,n,ne,ne,ne,ne,n,n,n,n,"
  . "n,sw,n,n,n,nw,n,n,s,n,ne,ne,n,n,sw,sw,ne,n,n,n,n,ne,ne,ne,ne,"
  . "nw,ne,se,ne,n,n,n,se,n,n,ne,n,sw,nw,n,n,s,n,n,n,n,n,n,n,n,"
  . "sw,nw,n,n,n,n,n,n,n,n,ne,n,ne,n,ne,n,n,n,ne,ne,n,n,ne,n,n,"
  . "n,n,ne,sw,n,se,n,n,n,n,ne,n,s,n,n,ne,ne,ne,n,n,ne,ne,n,ne,n,"
  . "ne,se,n,se,sw,sw,sw,se,nw,ne,nw,ne,ne,n,ne,n,ne,n,ne,ne,ne,ne,n,n,n,"
  . "ne,ne,n,ne,nw,sw,ne,n,ne,n,n,ne,nw,n,n,n,ne,se,n,n,n,ne,ne,n,n,"
  . "nw,ne,n,n,s,n,ne,s,s,ne,nw,n,ne,n,n,nw,ne,ne,ne,n,n,ne,s,ne,sw,"
  . "n,n,n,n,ne,ne,ne,ne,ne,n,sw,n,nw,ne,ne,ne,n,se,ne,s,ne,ne,ne,s,ne,"
  . "n,n,ne,n,s,ne,n,ne,n,n,ne,n,ne,ne,ne,n,ne,n,nw,ne,ne,ne,ne,ne,ne,"
  . "nw,ne,ne,ne,ne,n,sw,sw,ne,n,se,s,ne,n,n,nw,ne,ne,sw,ne,n,se,ne,n,sw,"
  . "ne,n,ne,ne,ne,ne,ne,ne,ne,ne,n,n,n,ne,ne,nw,n,ne,ne,n,ne,n,sw,ne,n,"
  . "n,ne,ne,n,s,nw,n,se,ne,n,se,ne,ne,ne,sw,n,ne,ne,sw,ne,n,n,ne,n,nw,"
  . "n,ne,ne,n,ne,ne,ne,ne,se,se,nw,n,ne,ne,n,ne,ne,n,ne,sw,ne,se,n,ne,ne,"
  . "ne,ne,ne,ne,ne,n,nw,ne,se,ne,n,ne,ne,ne,ne,ne,ne,ne,n,n,n,nw,ne,n,ne,"
  . "ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,nw,ne,s,n,ne,"
  . "ne,ne,sw,sw,ne,sw,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,se,ne,ne,ne,ne,"
  . "sw,ne,n,ne,ne,n,ne,ne,ne,nw,n,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,s,n,ne,"
  . "ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,sw,ne,ne,ne,ne,n,nw,ne,ne,ne,ne,se,"
  . "ne,ne,ne,ne,sw,ne,ne,nw,ne,n,ne,ne,ne,ne,sw,ne,ne,sw,ne,ne,ne,ne,ne,se,ne,"
  . "n,ne,nw,ne,sw,ne,ne,sw,ne,ne,n,ne,ne,ne,nw,n,ne,ne,n,ne,nw,n,ne,ne,ne,"
  . "s,s,ne,ne,n,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,sw,nw,ne,ne,ne,ne,ne,nw,ne,sw,"
  . "ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,n,n,ne,"
  . "sw,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,sw,ne,"
  . "ne,se,n,ne,ne,ne,ne,s,ne,sw,ne,ne,ne,ne,se,ne,ne,sw,ne,ne,s,n,ne,ne,ne,"
  . "ne,n,ne,se,ne,ne,nw,s,ne,ne,ne,ne,ne,ne,ne,ne,ne,nw,ne,ne,s,ne,ne,ne,se,"
  . "ne,ne,ne,ne,s,ne,se,ne,ne,ne,se,ne,nw,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,ne,"
  . "ne,ne,ne,ne,nw,ne,ne,se,se,ne,nw,ne,ne,ne,n,ne,ne,ne,s,ne,ne,ne,ne,ne,nw,"
  . "n,ne,s,ne,se,s,ne,ne,ne,ne,se,ne,ne,ne,nw,ne,se,ne,ne,ne,ne,ne,ne,ne,nw,"
  . "ne,se,ne,ne,ne,se,ne,se,ne,ne,ne,ne,ne,ne,se,ne,ne,ne,ne,n,ne,ne,ne,ne,ne,"
  . "ne,ne,ne,sw,ne,ne,ne,s,ne,ne,ne,ne,ne,ne,ne,ne,ne,n,sw,ne,nw,ne,nw,ne,sw,"
  . "ne,ne,ne,ne,ne,ne,ne,s,ne,ne,n,ne,n,sw,ne,ne,ne,se,ne,se,se,ne,ne,n,n,"
  . "ne,nw,ne,s,ne,ne,ne,ne,ne,ne,se,sw,ne,se,se,s,nw,se,ne,ne,s,n,ne,ne,ne,"
  . "ne,se,se,ne,ne,ne,nw,sw,ne,ne,ne,ne,ne,se,ne,ne,se,se,se,se,se,se,ne,ne,se,"
  . "ne,sw,ne,ne,ne,se,ne,ne,ne,ne,se,ne,se,ne,se,ne,sw,ne,ne,ne,se,ne,ne,ne,ne,"
  . "ne,s,ne,ne,ne,ne,s,se,sw,ne,ne,s,ne,se,ne,se,ne,se,se,ne,ne,ne,ne,ne,ne,"
  . "ne,ne,se,se,ne,ne,se,s,se,ne,ne,ne,ne,se,ne,se,se,nw,ne,se,ne,n,n,ne,ne,"
  . "s,ne,n,nw,ne,nw,ne,ne,ne,s,s,ne,sw,ne,sw,se,se,se,ne,ne,sw,se,ne,ne,se,"
  . "ne,se,ne,se,ne,se,ne,s,se,ne,ne,ne,se,ne,ne,se,ne,n,se,se,se,ne,nw,se,se,"
  . "se,se,se,ne,n,ne,nw,ne,se,se,ne,ne,ne,ne,se,se,ne,ne,ne,ne,ne,se,se,ne,sw,"
  . "s,se,nw,se,ne,se,n,ne,se,sw,ne,ne,ne,ne,ne,ne,n,ne,se,n,se,ne,ne,ne,n,"
  . "ne,se,ne,se,ne,ne,se,n,ne,sw,s,se,se,se,sw,ne,se,ne,ne,se,se,nw,se,ne,se,"
  . "ne,ne,se,se,nw,ne,nw,ne,ne,ne,n,se,ne,n,ne,sw,ne,ne,ne,sw,ne,se,se,se,ne,"
  . "sw,ne,ne,sw,ne,ne,ne,ne,ne,se,se,ne,ne,ne,ne,ne,n,se,ne,ne,s,ne,ne,se,ne,"
  . "nw,ne,s,nw,nw,se,se,ne,ne,n,ne,ne,nw,ne,ne,ne,se,ne,sw,s,ne,ne,ne,n,ne,"
  . "ne,se,se,se,ne,sw,ne,se,ne,sw,se,se,se,ne,ne,ne,ne,ne,se,s,se,sw,se,ne,se,"
  . "se,ne,se,ne,se,ne,se,ne,se,ne,ne,ne,s,se,se,n,se,se,ne,se,ne,n,s,se,se,"
  . "se,se,se,nw,ne,ne,se,se,se,se,ne,se,ne,ne,se,se,se,ne,se,se,se,ne,se,ne,ne,"
  . "se,ne,nw,ne,se,ne,se,ne,ne,se,se,ne,ne,ne,ne,se,ne,ne,se,n,ne,se,sw,ne,ne,"
  . "ne,se,ne,sw,se,ne,se,ne,se,ne,se,se,ne,ne,nw,sw,se,ne,se,ne,se,ne,se,ne,ne,"
  . "ne,se,ne,ne,se,n,se,se,se,nw,se,se,se,se,se,ne,se,ne,se,sw,sw,se,se,n,ne,"
  . "ne,s,se,ne,ne,ne,se,ne,se,ne,se,se,ne,ne,se,se,se,se,ne,se,ne,ne,ne,se,ne,"
  . "se,ne,ne,se,ne,ne,se,se,se,s,se,se,ne,ne,ne,nw,se,se,ne,nw,sw,ne,se,se,s,"
  . "se,ne,ne,nw,se,se,n,se,se,se,se,s,se,se,se,ne,se,ne,se,se,se,ne,ne,ne,se,"
  . "se,nw,se,ne,se,se,se,ne,ne,se,se,ne,ne,n,se,ne,se,ne,se,ne,ne,se,se,se,se,"
  . "se,se,ne,se,ne,sw,ne,se,n,se,se,s,se,se,ne,ne,se,se,se,se,nw,se,se,se,s,"
  . "sw,se,se,se,ne,se,ne,se,se,ne,ne,se,ne,ne,ne,se,sw,se,n,se,se,se,se,ne,nw,"
  . "ne,se,se,s,se,se,ne,s,se,ne,s,se,se,ne,sw,sw,se,se,se,se,se,se,s,se,ne,"
  . "ne,se,sw,ne,se,se,se,se,ne,se,se,se,se,ne,se,ne,se,se,se,se,ne,ne,ne,ne,ne,"
  . "ne,n,se,ne,se,se,se,se,ne,nw,se,se,ne,se,n,sw,se,se,se,se,ne,se,se,se,s,"
  . "se,ne,sw,se,se,se,se,n,se,ne,ne,se,se,se,se,se,se,se,nw,se,ne,ne,se,ne,se,"
  . "se,se,se,se,ne,se,s,se,sw,se,ne,se,se,ne,n,se,se,se,nw,nw,se,se,se,nw,se,"
  . "se,s,ne,sw,se,se,ne,se,ne,se,ne,ne,sw,se,ne,nw,se,se,se,se,ne,ne,se,n,se,"
  . "sw,se,se,nw,se,se,se,se,se,se,se,ne,ne,se,se,se,nw,se,se,se,n,s,n,se,ne,"
  . "se,s,ne,s,se,se,se,se,ne,se,se,se,se,se,se,se,se,se,se,se,ne,nw,sw,se,ne,"
  . "se,se,n,se,se,nw,se,se,ne,se,se,s,ne,se,ne,se,se,se,se,se,s,se,nw,se,se,"
  . "se,se,n,se,ne,se,nw,se,se,se,se,se,s,se,se,se,n,ne,se,se,se,ne,ne,se,se,"
  . "ne,sw,se,sw,n,se,sw,se,se,se,se,se,se,se,se,ne,se,se,se,se,se,ne,se,s,se,"
  . "se,se,se,n,se,se,se,se,se,se,se,se,se,se,sw,se,se,sw,se,se,sw,se,se,sw,se,"
  . "nw,se,se,se,se,se,se,se,se,se,n,se,ne,se,se,se,se,se,se,se,se,se,se,se,se,"
  . "se,s,nw,ne,se,se,s,se,se,s,se,se,se,se,se,se,se,sw,se,se,se,se,se,se,se,"
  . "se,se,se,se,se,se,se,se,s,se,se,se,se,se,sw,se,se,ne,s,se,se,se,se,se,se,"
  . "sw,se,se,se,se,ne,se,se,s,se,se,n,se,se,se,ne,se,s,se,se,s,n,se,s,se,"
  . "se,sw,se,se,se,se,se,se,se,sw,sw,se,se,se,se,se,se,s,se,se,nw,se,se,se,se,"
  . "se,se,se,se,se,se,s,se,se,se,se,se,se,se,sw,se,se,se,n,se,se,se,se,s,s,"
  . "se,se,se,se,n,s,se,n,se,se,se,se,se,nw,se,se,se,sw,se,se,se,s,s,s,se,"
  . "se,se,se,nw,s,n,se,se,se,se,ne,se,se,sw,se,se,s,se,ne,ne,se,sw,s,s,se,"
  . "se,s,nw,se,se,se,se,se,nw,se,se,se,se,s,s,se,s,n,se,se,se,se,se,se,s,"
  . "se,s,se,nw,se,se,se,sw,se,s,s,se,s,se,se,se,se,se,se,se,nw,se,se,nw,se,"
  . "se,se,se,se,s,se,se,s,se,se,s,s,se,se,se,se,s,se,sw,s,se,se,s,se,ne,"
  . "se,se,s,se,se,ne,se,se,s,se,se,s,se,s,se,se,se,se,se,s,s,s,se,se,se,"
  . "se,s,s,ne,n,se,se,s,sw,se,sw,se,sw,se,se,se,se,s,se,s,s,se,se,se,se,"
  . "ne,se,se,s,s,se,se,se,se,se,n,ne,ne,se,se,s,se,se,se,se,se,s,se,se,se,"
  . "se,sw,se,se,se,sw,s,se,se,se,ne,se,se,se,se,se,se,se,s,ne,se,se,se,se,sw,"
  . "s,s,se,se,se,se,se,n,n,se,se,ne,se,se,sw,s,se,se,nw,ne,s,se,se,se,n,"
  . "n,se,s,ne,se,se,se,se,se,se,se,se,se,se,se,se,se,s,nw,se,se,s,se,se,sw,"
  . "se,se,s,sw,sw,se,se,s,sw,se,s,s,s,s,se,se,nw,se,n,se,n,se,s,se,s,"
  . "ne,n,se,n,se,se,se,ne,s,se,se,ne,se,se,sw,se,s,nw,se,se,s,s,se,s,sw,"
  . "sw,n,se,se,s,n,se,se,se,s,se,se,s,nw,nw,se,se,se,se,se,se,s,se,se,se,"
  . "se,s,nw,s,sw,se,sw,s,ne,nw,se,se,s,se,se,se,se,se,se,se,se,se,se,se,se,"
  . "s,s,se,se,se,ne,se,ne,se,ne,se,se,se,se,se,se,s,se,s,n,se,se,n,s,s,"
  . "s,nw,se,ne,se,se,s,se,se,sw,s,s,s,se,s,s,n,sw,s,se,se,se,s,ne,se,"
  . "s,n,se,se,se,se,ne,se,nw,s,s,s,nw,se,n,s,n,se,se,se,s,se,s,se,nw,"
  . "s,n,se,s,ne,s,se,s,se,s,s,sw,se,s,s,se,se,s,se,n,se,n,se,se,se,"
  . "s,se,se,nw,se,se,n,se,se,ne,se,se,s,s,se,se,se,se,n,se,se,se,ne,nw,se,"
  . "se,se,se,se,se,se,se,sw,s,se,s,se,s,s,sw,se,se,se,s,se,se,se,se,ne,s,"
  . "s,se,se,s,se,se,se,se,sw,s,se,se,ne,nw,sw,se,s,se,s,se,n,s,sw,se,se,"
  . "nw,nw,s,ne,s,se,se,s,sw,se,se,s,s,s,s,se,s,se,n,s,se,s,se,s,se,"
  . "s,se,se,se,s,se,se,s,s,s,s,ne,se,se,se,ne,ne,s,sw,nw,se,se,s,s,se,"
  . "s,nw,se,ne,se,se,s,sw,ne,se,se,s,sw,se,s,s,s,sw,s,se,se,ne,ne,se,sw,"
  . "s,s,s,s,s,se,se,s,s,se,nw,se,s,s,s,se,s,s,se,sw,s,s,s,ne,se,"
  . "se,s,se,s,se,s,se,nw,nw,s,se,s,ne,se,n,se,se,s,se,se,nw,s,s,se,s,"
  . "s,se,n,se,se,s,se,se,se,se,s,se,se,se,s,s,se,s,se,ne,s,n,sw,n,sw,"
  . "s,s,s,se,s,s,s,s,n,se,se,se,s,s,se,se,se,se,sw,s,s,s,se,ne,se,"
  . "se,s,ne,s,s,se,sw,se,se,s,se,se,se,se,s,s,ne,s,s,s,se,s,se,s,ne,"
  . "se,s,sw,nw,se,s,s,s,s,s,s,se,n,s,s,se,se,sw,se,s,se,s,se,se,se,"
  . "s,sw,s,s,sw,se,se,se,se,s,se,sw,s,n,ne,se,s,s,se,n,s,sw,nw,se,s,"
  . "nw,se,se,se,se,s,ne,s,sw,s,nw,s,se,se,s,se,ne,se,se,se,se,s,se,s,sw,"
  . "s,n,ne,se,s,s,s,s,s,s,se,s,se,s,se,s,s,s,s,s,s,s,s,se,se,"
  . "se,nw,se,se,s,s,s,s,se,s,s,nw,s,se,se,s,se,se,ne,sw,se,s,s,se,sw,"
  . "s,s,se,se,se,s,se,n,sw,s,se,s,se,se,se,se,se,se,se,se,se,se,se,s,s,"
  . "n,s,s,se,s,se,se,s,s,nw,se,s,se,s,se,s,s,s,ne,s,se,s,s,nw,s,"
  . "se,se,se,s,n,s,se,s,s,s,s,se,s,nw,se,se,se,se,nw,nw,ne,s,se,se,s,"
  . "sw,sw,se,se,s,s,s,se,s,s,s,se,se,s,se,se,ne,n,nw,s,s,s,se,se,nw,"
  . "s,s,s,s,s,s,s,s,se,ne,se,s,s,se,se,s,s,s,s,ne,ne,s,sw,s,se,"
  . "n,s,nw,nw,se,se,s,se,s,s,nw,s,ne,nw,se,s,s,se,se,se,s,se,s,sw,se,"
  . "n,se,s,s,s,nw,se,sw,s,s,s,ne,s,s,s,s,s,s,sw,se,se,s,nw,s,se,"
  . "se,s,s,s,s,s,s,s,se,nw,s,se,s,ne,s,se,s,s,n,s,s,s,se,s,s,"
  . "s,s,s,se,s,s,sw,s,sw,s,n,s,nw,ne,se,s,ne,s,s,se,n,s,ne,se,s,"
  . "se,s,s,s,sw,sw,s,s,s,s,sw,s,sw,se,s,n,n,s,s,se,s,se,s,ne,s,"
  . "se,s,s,s,nw,s,s,se,nw,s,s,s,s,s,s,s,s,s,nw,ne,n,s,n,s,s,"
  . "se,s,s,se,se,s,s,s,s,s,ne,s,s,s,n,se,ne,ne,s,s,s,s,s,s,s,"
  . "s,s,s,s,s,s,s,s,s,se,s,s,n,s,s,s,nw,se,ne,s,s,s,s,s,se,"
  . "s,s,s,sw,s,s,s,s,s,s,s,s,se,s,n,ne,s,s,s,nw,n,s,s,s,s,"
  . "sw,se,nw,s,se,n,s,s,sw,s,s,s,sw,s,s,s,se,s,s,s,s,n,s,s,s,"
  . "s,s,se,sw,s,s,s,s,nw,s,s,s,nw,s,nw,s,s,se,s,s,se,s,sw,s,s,"
  . "s,s,s,se,s,s,n,s,nw,s,s,s,ne,se,se,s,ne,s,sw,s,se,s,s,s,s,"
  . "s,se,s,nw,nw,se,nw,s,s,s,nw,se,s,s,s,se,s,s,s,ne,se,s,s,s,n,"
  . "s,s,s,se,s,s,s,s,sw,sw,s,nw,ne,s,s,n,s,s,s,se,ne,s,s,nw,s,"
  . "s,s,s,s,n,nw,s,s,s,se,s,nw,s,ne,s,s,s,sw,s,s,n,s,s,s,s,"
  . "s,s,s,n,nw,ne,se,sw,s,nw,n,s,s,s,se,s,s,s,s,s,s,sw,s,s,ne,"
  . "s,n,nw,s,nw,ne,s,s,s,s,s,s,s,sw,s,s,s,s,s,s,s,sw,s,s,s,"
  . "s,s,se,s,s,s,s,s,n,s,s,s,s,n,s,s,s,se,ne,nw,ne,ne,n,nw,n,"
  . "n,nw,nw,nw,nw,sw,s,sw,ne,sw,nw,sw,s,sw,sw,sw,se,sw,sw,sw,sw,s,s,nw,sw,"
  . "n,s,n,s,s,s,s,n,s,se,se,s,se,se,se,s,se,se,s,s,se,s,ne,n,se,"
  . "nw,se,se,se,se,ne,se,se,se,n,se,se,sw,se,se,se,ne,se,ne,ne,n,se,s,se,ne,"
  . "ne,ne,se,ne,s,ne,ne,ne,ne,ne,se,ne,ne,ne,ne,se,n,n,ne,s,s,ne,n,n,ne,"
  . "ne,se,s,sw,ne,n,s,n,ne,ne,n,s,ne,ne,n,n,nw,n,n,n,s,ne,ne,n,ne,"
  . "n,ne,n,n,n,ne,ne,nw,n,sw,n,n,nw,n,n,n,n,n,n,n,n,n,sw,n,n,"
  . "n,n,n,n,n,nw,se,n,nw,n,n,n,n,se,nw,n,nw,n,n,nw,n,nw,n,nw,se,"
  . "n,n,n,n,s,n,se,se,n,nw,nw,nw,n,n,nw,nw,s,n,nw,nw,nw,nw,nw,nw,nw,"
  . "nw,nw,sw,n,nw,nw,nw,sw,nw,nw,nw,nw,nw,nw,nw,nw,nw,ne,nw,nw,nw,sw,nw,ne,ne,"
  . "se,nw,nw,nw,nw,nw,sw,nw,sw,nw,sw,s,nw,nw,nw,nw,nw,nw,nw,nw,sw,sw,nw,nw,sw,"
  . "nw,sw,n,nw,sw,nw,sw,nw,se,nw,se,s,s,nw,nw,nw,nw,s,sw,n,nw,n,nw,sw,nw,"
  . "nw,n,sw,s,nw,sw,sw,nw,sw,sw,sw,ne,sw,n,s,sw,sw,sw,sw,sw,n,sw,sw,s,sw,"
  . "sw,sw,ne,sw,sw,nw,sw,n,s,sw,sw,sw,sw,sw,s,sw,sw,sw,sw,sw,sw,sw,sw,sw,ne,"
  . "sw,nw,sw,ne,sw,sw,n,sw,sw,sw,ne,sw,nw,sw,s,ne,sw,sw,sw,sw,s,sw,sw,se,sw,"
  . "sw,sw,sw,s,sw,sw,s,ne,s,sw,s,sw,sw,s,n,s,se,sw,sw,se,se,nw,s,s,sw,"
  . "sw,n,s,s,s,sw,s,se,sw,sw,se,sw,sw,sw,nw,n,s,sw,sw,s,sw,s,sw,s,s,"
  . "sw,s,sw,s,sw,s,se,s,sw,sw,sw,sw,sw,s,s,sw,s,s,s,ne,s,s,ne,sw,sw,"
  . "nw,s,s,se,sw,sw,s,s,s,n,s,s,s,ne,s,s,s,s,n,nw,s,s,s,s,s,"
  . "s,s,s,sw,s,s,s,s,s,s,s,s,s,s,se,s,se,s,s,s,s,s,s,s,s,"
  . "s,nw,s,s,nw,s,s,s,s,s,ne,n,s,s,s,s,n,s,s,n,s,s,s,s,se,"
  . "s,se,s,se,sw,se,s,s,se,s,s,se,s,s,s,s,se,nw,ne,n,se,s,s,s,s,"
  . "s,sw,n,s,s,s,se,se,s,se,se,sw,se,ne,s,se,sw,se,nw,se,se,s,s,s,se,"
  . "s,s,s,se,se,s,sw,se,s,n,s,s,se,n,se,se,s,se,s,ne,s,s,s,se,s,"
  . "se,s,ne,s,se,se,nw,ne,se,se,se,s,s,s,se,s,nw,s,se,s,se,se,n,se,s,"
  . "se,nw,se,se,se,se,se,se,se,s,se,s,nw,n,se,ne,se,s,se,se,ne,n,se,ne,se,"
  . "se,se,s,se,ne,se,s,se,se,se,sw,s,s,se,se,s,se,nw,se,se,se,se,se,se,se,"
  . "se,se,se,se,se,se,ne,se,se,s,se,se,se,s,se,se,se,se,se,se,se,se,se,se,se,"
  . "s,se,sw,se,se,se,ne,se,se,se,se,se,se,ne,se,nw,se,se,se,se,ne,sw,sw,se,se,"
  . "se,ne,n,se,ne,nw,se,sw,se,se,se,ne,ne,se,ne,se,se,se,sw,se,se,n,se,se,n,"
  . "se,se,se,ne,se,se,sw,se,nw,s,se,se,n,ne,se,ne,ne,se,se,se,ne,ne,nw,se,se,"
  . "s,sw,se,ne,se,ne,sw,s,se,ne,se,se,se,se,nw,se,se,se,se,se,se,se,se,ne,ne,"
  . "ne,se,se,ne,se,n,se,se,ne,n,sw,se,ne,se,se,se,se,ne,se,sw,ne,ne,ne,ne,se,"
  . "se,se,ne,se,se,se,ne,n,ne,se,se,ne,ne,ne,se,se,se,se,sw,nw,ne,ne,s,sw,ne,"
  . "se,sw,se,sw,ne,nw,ne,ne,ne,ne,ne,se,ne,ne,ne,se,se,ne,ne,ne,s,se,ne,nw,se,"
  . "se,ne,ne,ne,se,sw,ne,nw,sw,ne,ne,n,n,ne,ne,se,ne,nw,sw,se,ne,se,ne,se,se,"
  . "ne,se,se,sw,ne,nw,s,ne,se,se,ne,sw,ne,ne,nw,s,ne,ne,ne,ne,ne,se,ne,nw,ne,"
  . "ne,ne,se,ne,ne,ne,ne,sw,ne,ne,ne,ne,ne,ne,ne,ne,nw,ne,ne,se,se,ne,ne,ne,ne,"
  . "se,ne,se,n,ne,ne,ne,s,se,sw,ne,ne,ne,ne,ne,ne,ne,ne,se,ne,sw,ne,ne,ne,ne,"
  . "ne,ne,ne,n,n,ne,n,ne,ne,nw,ne,ne,ne,ne,se,ne,ne,ne,ne,ne,ne,ne,ne,se,ne,"
  . "sw,ne,ne,ne,ne,ne,ne,ne,ne,ne,n,sw,ne,ne,ne,ne,ne,ne,sw,ne,ne,ne,s,ne,ne,"
  . "ne,sw,ne,ne,n,ne,ne,ne,ne,ne,ne,ne,ne,s,n,ne,se,sw,ne,se,ne,ne,ne,ne,n,"
  . "ne,ne,ne,se,n,nw,ne,ne,ne,sw,ne,n,nw,s,ne,ne,nw,s,ne,se,ne,ne,nw,n,ne,"
  . "se,nw,ne,n,ne,ne,ne,ne,n,ne,ne,n,ne,n,ne,ne,n,ne,ne,n,n,ne,ne,ne,nw,"
  . "ne,ne,ne,se,ne,ne,ne,n,ne,nw,ne,ne,ne,ne,n,n,ne,ne,ne,ne,sw,nw,ne,ne,n,"
  . "ne,sw,n,ne,ne,ne,ne,ne,n,ne,n,n,n,s,n,ne,se,ne,n,ne,ne,s,s,ne,n,"
  . "ne,n,nw,n,nw,ne,sw,s,ne,ne,ne,ne,ne,ne,n,ne,nw,s,ne,n,ne,se,ne,ne,n,"
  . "ne,n,s,se,sw,ne,sw,n,ne,ne,sw,n,ne,n,n,sw,n,n,n,ne,n,sw,n,ne,ne,"
  . "sw,sw,n,ne,n,ne,n,n,sw,n,n,ne,n,ne,n,ne,nw,ne,n,ne,n,n,ne,n,n,"
  . "n,ne,n,ne,sw,n,n,se,n,n,ne,ne,s,n,ne,n,ne,ne,ne,ne,n,ne,s,n,ne,"
  . "n,nw,n,n,ne,n,ne,n,nw,n,n,ne,ne,n,n,n,ne,n,n,n,se,n,n,ne,n,"
  . "n,n,n,n,n,n,n,n,n,n,s,n,ne,ne,n,n,n,n,n,ne,n,nw,nw,n,n,"
  . "sw,ne,nw,ne,n,n,ne,n,s,n,ne,ne,n,sw,ne,n,ne,n,n,n,se,n,n,ne,n,"
  . "n,n,ne,n,n,n,n,n,ne,nw,n,n,s,n,n,n,ne,n,se,n,n,s,n,n,ne,"
  . "se,n,n,ne,n,ne,n,n,n,ne,se,n,n,sw,sw,n,s,n,se,n,n,n,n,sw,n,"
  . "n,ne,n,n,n,n,n,n,n,n,n,n,n,n,n,nw,n,n,n,n,n,se,n,s,n,"
  . "se,n,n,n,n,n,sw,n,ne,n,n,s,n,n,n,nw,n,n,n,n,nw,nw,n,n,n,"
  . "n,n,s,n,n,ne,n,n,n,n,nw,sw,n,n,n,s,n,nw,s,n,s,n,n,n,n,"
  . "n,n,n,n,n,n,n,n,n,se,nw,n,n,n,n,nw,n,sw,s,nw,n,n,n,n,n,"
  . "n,se,n,n,n,n,n,n,ne,nw,n,n,n,n,n,se,n,n,n,n,n,n,n,n,n,"
  . "n,n,n,sw,n,n,nw,se,se,nw,ne,n,n,n,nw,n,n,n,n,n,n,nw,n,nw,nw,"
  . "s,nw,n,n,n,n,nw,nw,nw,nw,ne,n,nw,n,nw,n,ne,s,nw,se,n,nw,nw,nw,sw,"
  . "n,n,se,nw,nw,nw,n,n,nw,nw,n,n,n,nw,nw,n,nw,sw,n,n,n,n,n,nw,n,"
  . "nw,n,nw,s,n,nw,ne,nw,se,n,se,n,nw,n,n,s,n,s,n,n,nw,nw,ne,nw,n,"
  . "sw,ne,nw,ne,nw,n,nw,nw,nw,se,nw,n,n,nw,se,nw,nw,n,se,n,n,n,n,n,nw,"
  . "n,ne,n,n,n,sw,nw,nw,nw,nw,nw,n,n,n,s,nw,se,nw,nw,n,n,s,nw,n,ne,"
  . "nw,n,se,n,nw,n,nw,nw,nw,n,n,nw,nw,nw,nw,n,nw,n,nw,nw,s,n,nw,n,nw,"
  . "s,nw,n,sw,ne,nw,se,nw,nw,ne,n,n,n,se,nw,n,nw,nw,nw,nw,ne,nw,s,nw,nw,"
  . "nw,nw,n,n,nw,se,nw,n,nw,ne,nw,sw,n,se,n,nw,sw,nw,nw,n,s,nw,nw,s,ne,"
  . "nw,n,n,n,nw,n,n,nw,n,nw,n,nw,n,n,sw,nw,n,nw,n,nw,n,se,ne,nw,nw,"
  . "n,sw,nw,n,nw,nw,nw,ne,nw,n,nw,nw,nw,nw,nw,nw,n,n,n,nw,ne,nw,n,n,s,"
  . "nw,nw,ne,nw,nw,nw,nw,nw,nw,se,nw,n,nw,nw,nw,nw,nw,nw,n,nw,ne,n,nw,nw,nw,"
  . "n,nw,nw,nw,nw,nw,n,nw,ne,nw,sw,s,nw,sw,nw,s,nw,nw,nw,se,n,n,sw,nw,nw,"
  . "s,nw,nw,nw,s,n,ne,n,nw,s,n,n,nw,n,n,n,nw,nw,nw,nw,n,nw,nw,n,nw,"
  . "nw,nw,s,sw,nw,nw,n,nw,n,nw,n,s,nw,nw,n,sw,n,nw,nw,n,nw,sw,se,n,nw,"
  . "nw,nw,nw,n,n,nw,nw,n,nw,n,nw,nw,nw,nw,nw,se,nw,n,nw,nw,nw,n,nw,nw,nw,"
  . "ne,s,nw,n,nw,s,se,n,nw,nw,n,nw,s,se,n,n,nw,nw,nw,sw,nw,n,nw,sw,nw,"
  . "nw,s,nw,nw,nw,s,nw,s,sw,nw,nw,nw,nw,nw,nw,ne,nw,nw,se,nw,nw,nw,nw,n,nw,"
  . "nw,se,nw,nw,nw,nw,nw,nw,n,s,nw,nw,n,nw,sw,nw,nw,nw,nw,nw,nw,s,nw,nw,nw,"
  . "nw,sw,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,nw,n,"
  . "nw,nw,sw,nw,nw,nw,nw,nw,nw,nw,nw,nw,se,nw,nw,nw,nw,n,sw,nw,sw,n,nw,nw,nw,"
  . "se,nw,nw,sw,nw,sw,se,sw,nw,nw,sw,nw,nw,nw,nw,nw,n,s,ne,nw,s,nw,nw,nw,nw,"
  . "n,nw,nw,s,nw,nw,nw,nw,nw,ne,ne,nw,nw,se,nw,sw,nw,nw,nw,nw,nw,ne,nw,nw,nw,"
  . "nw,sw,ne,nw,nw,nw,sw,nw,nw,s,se,nw,nw,s,nw,nw,ne,nw,nw,nw,se,nw,se,n,nw,"
  . "nw,sw,se,sw,nw,se,sw,nw,nw,nw,n,sw,nw,nw,nw,nw,nw,nw,se,nw,nw,sw,nw,sw,sw,"
  . "nw,ne,nw,nw,sw,ne,nw,sw,sw,nw,nw,nw,sw,nw,nw,nw,n,sw,se,nw,sw,nw,nw,nw,se,"
  . "nw,nw,sw,ne,nw,sw,sw,n,nw,nw,nw,sw,nw,nw,sw,nw,nw,sw,se,se,nw,nw,nw,nw,nw,"
  . "nw,nw,sw,nw,sw,nw,nw,se,n,se,sw,nw,sw,nw,sw,se,nw,nw,sw,nw,nw,nw,n,sw,nw,"
  . "nw,nw,sw,nw,sw,nw,nw,se,nw,nw,nw,nw,nw,ne,nw,ne,nw,nw,nw,nw,nw,nw,n,sw,nw,"
  . "sw,n,nw,sw,sw,nw,nw,nw,n,n,nw,nw,sw,nw,nw,nw,sw,nw,nw,n,nw,n,nw,n,nw,"
  . "nw,nw,nw,sw,sw,nw,sw,n,sw,sw,nw,nw,sw,sw,nw,sw,sw,nw,nw,nw,ne,nw,nw,nw,sw,"
  . "n,nw,sw,nw,ne,sw,nw,ne,nw,nw,n,ne,nw,n,nw,s,n,sw,nw,nw,sw,nw,nw,s,nw,"
  . "sw,sw,nw,se,sw,nw,sw,nw,sw,sw,sw,nw,s,se,sw,nw,nw,sw,se,sw,sw,ne,nw,nw,sw,"
  . "sw,se,ne,nw,nw,s,se,ne,sw,nw,nw,nw,nw,sw,ne,ne,sw,nw,sw,nw,ne,nw,s,sw,sw,"
  . "sw,nw,s,sw,nw,nw,nw,sw,nw,nw,ne,nw,n,nw,nw,nw,sw,nw,sw,sw,nw,nw,nw,nw,ne,"
  . "ne,nw,nw,nw,s,s,sw,n,nw,sw,sw,sw,sw,sw,sw,nw,nw,s,s,nw,nw,sw,sw,sw,sw,"
  . "nw,sw,sw,ne,nw,n,nw,nw,ne,sw,s,sw,ne,sw,ne,sw,sw,sw,sw,nw,sw,nw,sw,sw,nw,"
  . "nw,s,nw,sw,nw,nw,n,sw,sw,sw,sw,nw,sw,nw,sw,n,nw,se,nw,sw,sw,sw,sw,nw,sw,"
  . "sw,sw,sw,sw,nw,nw,sw,nw,sw,sw,sw,nw,sw,sw,sw,sw,sw,nw,ne,sw,nw,nw,nw,sw,nw,"
  . "nw,nw,sw,sw,sw,nw,nw,sw,sw,sw,se,sw,nw,nw,sw,sw,ne,sw,sw,nw,sw,n,sw,nw,nw,"
  . "sw,sw,sw,nw,sw,nw,sw,sw,s,nw,sw,sw,sw,se,s,sw,sw,sw,nw,s,sw,sw,sw,sw,sw,"
  . "nw,sw,nw,sw,nw,nw,nw,sw,nw,sw,nw,nw,sw,nw,sw,sw,nw,sw,se,sw,sw,nw,sw,se,sw,"
  . "ne,ne,sw,sw,sw,sw,nw,s,nw,nw,se,sw,nw,sw,nw,sw,sw,sw,sw,se,se,s,sw,sw,sw,"
  . "nw,sw,nw,sw,nw,ne,nw,sw,sw,sw,s,s,sw,sw,sw,nw,se,sw,nw,sw,sw,se,nw,s,nw,"
  . "sw,nw,sw,se,ne,sw,sw,sw,nw,nw,nw,nw,sw,nw,ne,sw,sw,nw,sw,sw,sw,sw,se,se,sw,"
  . "sw,se,s,sw,se,ne,se,sw,sw,sw,sw,sw,sw,sw,sw,sw,sw,sw,sw,sw,sw,nw,nw,nw,nw,"
  . "sw,sw,sw,sw,sw,sw,sw,nw,sw,s,sw,nw,sw,sw,sw,sw,sw,sw,sw,sw,sw,sw,sw,sw,sw,"
  . "sw,sw,se,sw,n,sw,sw,sw,ne,sw,sw,sw,sw,s,ne,sw,sw,n,sw,sw,sw,nw,sw,sw,se,"
  . "sw,sw,sw,sw,nw,sw,sw,sw,sw,sw,sw,sw,sw,se,ne,sw,sw,sw,nw,nw,sw,sw,se,sw,sw,"
  . "sw,sw,sw,sw,sw,sw,sw,sw,sw,sw,sw,sw,sw,nw,sw,n,sw,sw,sw,sw,sw,sw,sw,nw,sw,"
  . "sw,sw,sw,sw,sw,se,sw,s,n,s,s,sw,sw,sw,sw,ne,sw,n,se,sw,sw,sw,sw";

{
    # day 11 part 1
    #
    # +-------+-------+-------+-------+-------+
    # |       |       |       |       |       |
    # |       |       |  0, 2 |       |       |
    # |       |       |       |       |       |
    # +-------+-------+-------+-------+-------+
    # |       |       |       |       |       |
    # |       | -1, 1 | +---+ |  1, 1 |       |
    # |       |       |/     \|       |       |
    # +-------+-------+-------+-------+-------+
    # |       |      /|       |\      |       |
    # |       |     + |  0, 0 | +     |       |
    # |       |      \|       |/      |       |
    # +-------+-------+-------+-------+-------+
    # |       |       |\     /|       |       |
    # |       | -1,-1 | +---+ |  1,-1 |       |
    # |       |       |       |       |       |
    # +-------+-------+-------+-------+-------+
    # |       |       |       |       |       |
    # |       |       |  0,-2 |       |       |
    # |       |       |       |       |       |
    # +-------+-------+-------+-------+-------+

    my %deltas = (
        "n"  => [  0,  2 ],
        "ne" => [  1,  1 ],
        "se" => [  1, -1 ],
        "s"  => [  0, -2 ],
        "sw" => [ -1, -1 ],
        "nw" => [ -1,  1 ]
    );
    my @curPos = (0, 0);
    my $farthest = 0;
    my @steps = split(/,/, $day11Input);
    my $eastWest;
    my $northSouth;
    my $dist;
#   @steps = split(/,/, "se,ne,se,ne,se,ne");

    while(@steps)
    {
        my $step = shift(@steps);

#       printf "at (%5d,%5d) move %-2s then at ", $curPos[0], $curPos[1], $step;

        $curPos[0] += $deltas{$step}[0];
        $curPos[1] += $deltas{$step}[1];

#       printf "(%5d,%5d)\n", $curPos[0], $curPos[1];


        # If we are farther east or west than north or south, to return
        # we take the smaller diagonally, then zigzag east or west, so
        # the number of steps is just the eas or west value.
        #
        # If we are farther north or south, we go diagonally for the
        # east or west, then straight north or south:
        #   abs($curPos[0]) + ((abs($curPos[1]) - abs($curPos[0])) / 2)
        $eastWest = abs($curPos[0]);
        $northSouth = abs($curPos[1]);

        if ($eastWest > $northSouth)
        {
            $dist = $eastWest;
        }
        else
        {
            $dist = ($eastWest + $northSouth) / 2;
        }

        if ($dist > $farthest)
        {
            $farthest = $dist;
        }
    }
    printf "day 11 part 1 return in %d steps\n", $dist;
    printf "day 11 part 2 farthest was %d steps\n", $farthest;
}


# day 12
my %day12Input = (
    0 => [584, 830],
    1 => [415, 531],
    2 => [514, 1419],
    3 => [3],
    4 => [1043],
    5 => [440],
    6 => [452, 1651, 1861],
    7 => [368, 783, 1364],
    8 => [813],
    9 => [79, 1562],
    10 => [465, 1947],
    11 => [408, 1095],
    12 => [12, 1386],
    13 => [179, 497, 1196, 1918],
    14 => [1650],
    15 => [211, 1763],
    16 => [598, 809, 1659],
    17 => [17, 222, 1233, 1716],
    18 => [254, 521],
    19 => [1928],
    20 => [477, 1388],
    21 => [133],
    22 => [1410],
    23 => [502],
    24 => [142, 658, 1177],
    25 => [1975],
    26 => [1639],
    27 => [719],
    28 => [267],
    29 => [1239],
    30 => [951, 997, 1814],
    31 => [750, 1073],
    32 => [191, 567, 1501],
    33 => [312],
    34 => [801],
    35 => [740],
    36 => [883, 1039],
    37 => [37],
    38 => [1073],
    39 => [823, 1375, 1790],
    40 => [618, 987],
    41 => [188, 988],
    42 => [1805, 1994],
    43 => [870, 969, 1107, 1110],
    44 => [1623],
    45 => [551, 1745],
    46 => [634, 790, 1637],
    47 => [314, 458],
    48 => [493, 1347, 1573],
    49 => [339, 1539],
    50 => [158, 308],
    51 => [176, 877],
    52 => [1191, 1236, 1616],
    53 => [900],
    54 => [188],
    55 => [336, 1134],
    56 => [422, 1110],
    57 => [817],
    58 => [862],
    59 => [373, 732],
    60 => [1431, 1974],
    61 => [1246, 1564],
    62 => [1015, 1227],
    63 => [166, 234, 288, 1746],
    64 => [1183],
    65 => [472],
    66 => [184, 1979],
    67 => [1430],
    68 => [1416, 1674, 1883],
    69 => [309, 675],
    70 => [1230],
    71 => [145, 343],
    72 => [446, 1185, 1187, 1421, 1819],
    73 => [248, 1278, 1779],
    74 => [502, 1470, 1857],
    75 => [645, 914],
    76 => [800, 968],
    77 => [1691],
    78 => [78],
    79 => [9, 1396],
    80 => [519, 636, 1091],
    81 => [292],
    82 => [286, 945],
    83 => [403, 737],
    84 => [806, 1435, 1893],
    85 => [895, 955],
    86 => [505],
    87 => [1125],
    88 => [88],
    89 => [908],
    90 => [1656],
    91 => [91, 1476],
    92 => [1524, 1699],
    93 => [1298, 1994],
    94 => [94, 1315],
    95 => [1996],
    96 => [575, 1837],
    97 => [620],
    98 => [1097, 1144],
    99 => [266, 684],
    100 => [1471],
    101 => [262, 549],
    102 => [209, 1585],
    103 => [1333],
    104 => [1794],
    105 => [287, 787],
    106 => [672, 891],
    107 => [900, 979],
    108 => [439, 1679, 1767],
    109 => [431, 621, 861, 1297],
    110 => [1043],
    111 => [1355, 1479],
    112 => [1195],
    113 => [320, 1710],
    114 => [159],
    115 => [767, 984],
    116 => [1918],
    117 => [1445],
    118 => [471, 599],
    119 => [1599, 1625],
    120 => [653, 1056],
    121 => [1083, 1143],
    122 => [1099, 1952],
    123 => [474, 1491],
    124 => [789, 1645],
    125 => [825, 1862],
    126 => [1913],
    127 => [1312],
    128 => [1016, 1704],
    129 => [1516, 1892],
    130 => [762, 1013, 1343],
    131 => [188, 864],
    132 => [380],
    133 => [21, 340, 371],
    134 => [772],
    135 => [1062],
    136 => [942],
    137 => [652, 923, 1520, 1580, 1596],
    138 => [1321, 1975],
    139 => [139, 1664],
    140 => [1061, 1357],
    141 => [1589],
    142 => [24, 1629, 1866],
    143 => [903, 1466, 1798],
    144 => [144, 792],
    145 => [71],
    146 => [575, 1401],
    147 => [692],
    148 => [204, 447, 1294],
    149 => [407, 642],
    150 => [982],
    151 => [542, 995, 1027],
    152 => [1586],
    153 => [686],
    154 => [289, 580],
    155 => [259, 786, 859, 1487],
    156 => [1096],
    157 => [1939],
    158 => [50, 341, 741, 1007, 1064],
    159 => [114, 159, 325, 831],
    160 => [1088],
    161 => [425],
    162 => [195],
    163 => [479, 930],
    164 => [1486, 1755],
    165 => [228, 808],
    166 => [63],
    167 => [1673],
    168 => [168],
    169 => [243, 466],
    170 => [1105],
    171 => [570],
    172 => [178, 526, 1318, 1364],
    173 => [1126],
    174 => [1330, 1383, 1754],
    175 => [606, 1180],
    176 => [51, 1685],
    177 => [1872],
    178 => [172],
    179 => [13, 304],
    180 => [424],
    181 => [1092],
    182 => [1329],
    183 => [1195, 1861],
    184 => [66, 1912],
    185 => [185, 400],
    186 => [1305, 1644],
    187 => [648, 1931],
    188 => [41, 54, 131, 1114],
    189 => [206],
    190 => [1794],
    191 => [32, 1399],
    192 => [466],
    193 => [906, 1244, 1334],
    194 => [1614],
    195 => [162, 1660],
    196 => [788],
    197 => [1028, 1083],
    198 => [1089, 1666],
    199 => [879, 1609],
    200 => [220],
    201 => [201],
    202 => [1431],
    203 => [1503],
    204 => [148],
    205 => [205, 868],
    206 => [189, 1561],
    207 => [902, 1115],
    208 => [712, 880],
    209 => [102, 843, 1474],
    210 => [707, 1411],
    211 => [15, 845, 950],
    212 => [360, 468, 1848],
    213 => [1355],
    214 => [888],
    215 => [1270, 1604, 1718],
    216 => [620, 1222],
    217 => [1521, 1894],
    218 => [227, 935, 1793, 1803],
    219 => [566],
    220 => [200, 1474],
    221 => [540, 1836],
    222 => [17, 487, 697],
    223 => [1631],
    224 => [742, 894],
    225 => [1701],
    226 => [387, 905, 1871],
    227 => [218],
    228 => [165, 865],
    229 => [1150],
    230 => [1286],
    231 => [1789],
    232 => [233, 1232, 1243, 1375],
    233 => [232],
    234 => [63, 447, 1165],
    235 => [1992],
    236 => [667, 1219],
    237 => [1681, 1704, 1725],
    238 => [1147, 1434],
    239 => [517],
    240 => [743],
    241 => [1100, 1126],
    242 => [1344],
    243 => [169, 1582],
    244 => [1185, 1815],
    245 => [577, 1090],
    246 => [476, 818, 1465],
    247 => [592, 1928],
    248 => [73, 1761],
    249 => [1937],
    250 => [956],
    251 => [960],
    252 => [746],
    253 => [1545],
    254 => [18],
    255 => [255, 1362],
    256 => [830, 1927],
    257 => [461, 954],
    258 => [489, 1338],
    259 => [155, 712, 1802],
    260 => [1121],
    261 => [261],
    262 => [101, 1009, 1020],
    263 => [1791, 1968],
    264 => [1816],
    265 => [917, 1307],
    266 => [99, 1041],
    267 => [28, 459, 752, 1855],
    268 => [296, 694],
    269 => [1275],
    270 => [1113],
    271 => [750, 1174],
    272 => [580],
    273 => [1470],
    274 => [1138],
    275 => [512, 920],
    276 => [863, 1570],
    277 => [1830],
    278 => [1674],
    279 => [901, 934],
    280 => [1004],
    281 => [366, 545, 1161],
    282 => [1744, 1878],
    283 => [330],
    284 => [1279],
    285 => [873],
    286 => [82, 357],
    287 => [105],
    288 => [63, 510],
    289 => [154],
    290 => [1456],
    291 => [1154, 1156],
    292 => [81, 753, 805, 1034],
    293 => [1722],
    294 => [1918],
    295 => [315, 731],
    296 => [268, 994, 1045],
    297 => [1011],
    298 => [862, 1020],
    299 => [299, 442, 1452],
    300 => [1393, 1438],
    301 => [1351, 1507],
    302 => [751, 1128],
    303 => [1530, 1755],
    304 => [179, 960],
    305 => [418, 625],
    306 => [1525, 1728],
    307 => [817, 937, 1138],
    308 => [50],
    309 => [69, 309],
    310 => [1307],
    311 => [503, 981, 1025],
    312 => [33, 856],
    313 => [750, 1018],
    314 => [47, 489, 726],
    315 => [295, 1663],
    316 => [565, 1900],
    317 => [1105, 1384],
    318 => [988],
    319 => [830],
    320 => [113, 320],
    321 => [1500],
    322 => [389, 1377],
    323 => [791],
    324 => [785],
    325 => [159, 800, 1721],
    326 => [326, 1316],
    327 => [1097],
    328 => [660, 1006],
    329 => [590],
    330 => [283, 330, 1223, 1502],
    331 => [1436, 1471],
    332 => [332],
    333 => [1060],
    334 => [824],
    335 => [520, 678, 1302],
    336 => [55, 410, 1092, 1093],
    337 => [1369],
    338 => [772, 1442],
    339 => [49],
    340 => [133, 1393],
    341 => [158],
    342 => [724],
    343 => [71, 483, 970, 1446],
    344 => [344, 617],
    345 => [830, 1174],
    346 => [1551],
    347 => [1230, 1637, 1673, 1907],
    348 => [804],
    349 => [522, 1405],
    350 => [574, 800, 1021],
    351 => [1494],
    352 => [352],
    353 => [627, 1658],
    354 => [1822],
    355 => [527],
    356 => [1108, 1175],
    357 => [286, 435, 782, 961],
    358 => [905],
    359 => [691, 715],
    360 => [212],
    361 => [1071, 1788],
    362 => [963, 1286, 1861],
    363 => [612, 884, 1687],
    364 => [451, 1668, 1805],
    365 => [558, 604, 1593],
    366 => [281],
    367 => [1054, 1472],
    368 => [7],
    369 => [1686],
    370 => [396, 1919],
    371 => [133, 896],
    372 => [1909],
    373 => [59, 491, 1838],
    374 => [561],
    375 => [478, 1117, 1179],
    376 => [1261, 1674],
    377 => [822, 1188],
    378 => [1536, 1551, 1635],
    379 => [379],
    380 => [132, 1866],
    381 => [1935],
    382 => [1980],
    383 => [1139],
    384 => [1502],
    385 => [613],
    386 => [781, 987],
    387 => [226],
    388 => [388],
    389 => [322],
    390 => [1009, 1198],
    391 => [430, 1429],
    392 => [1639],
    393 => [1897],
    394 => [1568, 1701],
    395 => [928],
    396 => [370, 885],
    397 => [474, 622],
    398 => [1174, 1280],
    399 => [1449, 1661],
    400 => [185, 1135],
    401 => [839],
    402 => [1167, 1977],
    403 => [83, 935],
    404 => [749],
    405 => [405, 1775],
    406 => [812, 913, 1719],
    407 => [149, 875],
    408 => [11],
    409 => [635],
    410 => [336, 653, 757],
    411 => [1406],
    412 => [520],
    413 => [791, 1129],
    414 => [581],
    415 => [1, 769, 1250],
    416 => [424, 903],
    417 => [417, 1112],
    418 => [305],
    419 => [1414],
    420 => [743, 1912],
    421 => [1411],
    422 => [56, 1365, 1895],
    423 => [1228, 1874],
    424 => [180, 416],
    425 => [161, 548, 1428, 1817],
    426 => [474],
    427 => [477, 1982],
    428 => [654, 1016, 1781, 1889],
    429 => [1165, 1258],
    430 => [391, 1648],
    431 => [109],
    432 => [432, 612, 1324],
    433 => [1678],
    434 => [988, 1272, 1322],
    435 => [357],
    436 => [1267, 1682],
    437 => [975],
    438 => [1632, 1865],
    439 => [108, 439, 775],
    440 => [5, 1510, 1635, 1744],
    441 => [441],
    442 => [299, 615, 801],
    443 => [443],
    444 => [794, 1042, 1868],
    445 => [1427],
    446 => [72, 1536],
    447 => [148, 234],
    448 => [469, 720, 1418],
    449 => [449],
    450 => [1628],
    451 => [364],
    452 => [6],
    453 => [546],
    454 => [894, 1001, 1137],
    455 => [1235, 1764],
    456 => [1232],
    457 => [1864, 1946],
    458 => [47],
    459 => [267, 624, 1675],
    460 => [509, 610, 1406, 1548],
    461 => [257],
    462 => [979, 1340, 1500, 1989],
    463 => [551, 1483],
    464 => [1291, 1397, 1543, 1786],
    465 => [10, 1661],
    466 => [169, 192, 553],
    467 => [1394, 1987],
    468 => [212],
    469 => [448],
    470 => [1536],
    471 => [118, 477, 1962],
    472 => [65, 983, 1763],
    473 => [1988],
    474 => [123, 397, 426],
    475 => [475],
    476 => [246, 718, 1177],
    477 => [20, 427, 471],
    478 => [375, 495],
    479 => [163, 479, 1705, 1914],
    480 => [744],
    481 => [497, 1051],
    482 => [1134],
    483 => [343, 783],
    484 => [556, 1360, 1735],
    485 => [1464],
    486 => [901, 1387],
    487 => [222],
    488 => [621, 1206, 1560],
    489 => [258, 314],
    490 => [1714],
    491 => [373, 1038],
    492 => [1127, 1848, 1960],
    493 => [48],
    494 => [638, 1948],
    495 => [478, 1397],
    496 => [1180],
    497 => [13, 481, 1119],
    498 => [1275],
    499 => [1158],
    500 => [988, 1058, 1758],
    501 => [715, 1186, 1697],
    502 => [23, 74, 605, 1514],
    503 => [311],
    504 => [550, 744, 807, 1378, 1636],
    505 => [86, 1925],
    506 => [506],
    507 => [1944],
    508 => [1130],
    509 => [460],
    510 => [288, 1254, 1434, 1997],
    511 => [714, 884],
    512 => [275],
    513 => [1730],
    514 => [2, 999],
    515 => [1593],
    516 => [615],
    517 => [239, 816],
    518 => [518, 765],
    519 => [80, 1003],
    520 => [335, 412, 915],
    521 => [18, 569],
    522 => [349],
    523 => [523, 543],
    524 => [524, 1270],
    525 => [1285, 1850],
    526 => [172],
    527 => [355, 528, 1345],
    528 => [527, 1229],
    529 => [621, 1798],
    530 => [993, 1608],
    531 => [1, 647],
    532 => [1474],
    533 => [592],
    534 => [1142],
    535 => [1484],
    536 => [554, 803],
    537 => [1507],
    538 => [588, 812],
    539 => [539, 571],
    540 => [221],
    541 => [1261],
    542 => [151, 1650],
    543 => [523],
    544 => [1672],
    545 => [281, 1207, 1522],
    546 => [453, 1169, 1809],
    547 => [985, 1115, 1729],
    548 => [425, 640],
    549 => [101],
    550 => [504, 1535, 1717],
    551 => [45, 463, 1517, 1833],
    552 => [734, 1667],
    553 => [466, 1921],
    554 => [536],
    555 => [1401],
    556 => [484, 910, 1930],
    557 => [557],
    558 => [365],
    559 => [619, 630],
    560 => [560],
    561 => [374, 1961],
    562 => [1863],
    563 => [1238, 1733],
    564 => [950],
    565 => [316, 1157],
    566 => [219, 824, 1274],
    567 => [32],
    568 => [1121],
    569 => [521, 593, 1336, 1982],
    570 => [171, 967],
    571 => [539, 891],
    572 => [785],
    573 => [1009],
    574 => [350],
    575 => [96, 146, 1575],
    576 => [601, 830, 1921],
    577 => [245, 604],
    578 => [1837],
    579 => [1018, 1757],
    580 => [154, 272, 888],
    581 => [414, 1734],
    582 => [1866],
    583 => [971, 1936],
    584 => [0, 1082],
    585 => [1371],
    586 => [586, 926],
    587 => [672],
    588 => [538],
    589 => [1776],
    590 => [329, 733],
    591 => [897, 1511],
    592 => [247, 533, 1313],
    593 => [569, 929, 1551, 1994],
    594 => [1249],
    595 => [1728, 1797, 1872],
    596 => [856, 1209],
    597 => [1488, 1520],
    598 => [16],
    599 => [118],
    600 => [1337, 1355, 1703],
    601 => [576],
    602 => [1615],
    603 => [1264],
    604 => [365, 577, 1356],
    605 => [502],
    606 => [175, 1491, 1584],
    607 => [1777],
    608 => [760, 1779],
    609 => [737],
    610 => [460],
    611 => [611],
    612 => [363, 432, 1963],
    613 => [385, 708, 875, 1289, 1557, 1618],
    614 => [1303],
    615 => [442, 516],
    616 => [1556, 1676],
    617 => [344],
    618 => [40, 641, 1124],
    619 => [559, 1649],
    620 => [97, 216],
    621 => [109, 488, 529],
    622 => [397, 886],
    623 => [623, 716],
    624 => [459],
    625 => [305, 1126],
    626 => [936, 1998],
    627 => [353, 846, 1672],
    628 => [628, 1734],
    629 => [977, 1257, 1958],
    630 => [559, 1559, 1977],
    631 => [1744],
    632 => [1008, 1620],
    633 => [818, 1678],
    634 => [46, 1259],
    635 => [409, 663],
    636 => [80, 1622],
    637 => [1856],
    638 => [494, 734, 1983],
    639 => [639, 1402],
    640 => [548, 1156, 1493],
    641 => [618],
    642 => [149],
    643 => [643],
    644 => [1233, 1512],
    645 => [75, 645, 1909],
    646 => [675],
    647 => [531, 1346, 1352],
    648 => [187, 1137, 1585],
    649 => [1048],
    650 => [1360],
    651 => [1072, 1168],
    652 => [137, 652, 771, 1282],
    653 => [120, 410],
    654 => [428, 1669],
    655 => [1403],
    656 => [1589],
    657 => [1707],
    658 => [24, 730],
    659 => [1282, 1823],
    660 => [328, 1453],
    661 => [727],
    662 => [1190, 1788, 1857],
    663 => [635, 1622],
    664 => [1471],
    665 => [665],
    666 => [1064, 1955],
    667 => [236, 667],
    668 => [1222, 1709],
    669 => [766, 1048, 1127],
    670 => [670, 1168],
    671 => [1165],
    672 => [106, 587, 1201, 1950],
    673 => [949],
    674 => [1623],
    675 => [69, 646, 1489, 1976],
    676 => [948],
    677 => [1576, 1743],
    678 => [335, 1084],
    679 => [1081],
    680 => [680, 747],
    681 => [1015],
    682 => [1062],
    683 => [823, 1160],
    684 => [99, 1415],
    685 => [1695],
    686 => [153, 1674],
    687 => [873, 1959],
    688 => [1688],
    689 => [1125, 1439, 1614],
    690 => [1787],
    691 => [359, 691, 1945],
    692 => [147, 1425, 1426],
    693 => [1327, 1329],
    694 => [268, 1263],
    695 => [695, 1055, 1482],
    696 => [780],
    697 => [222, 1059],
    698 => [1486],
    699 => [799],
    700 => [1598],
    701 => [872, 1103],
    702 => [1546, 1853],
    703 => [703],
    704 => [1533],
    705 => [1822],
    706 => [1894, 1969],
    707 => [210, 729, 909],
    708 => [613],
    709 => [709],
    710 => [1634],
    711 => [1863],
    712 => [208, 259],
    713 => [713],
    714 => [511, 1420],
    715 => [359, 501],
    716 => [623],
    717 => [1104, 1193, 1431],
    718 => [476],
    719 => [27, 1861],
    720 => [448, 720, 1374],
    721 => [1632, 1721],
    722 => [1944],
    723 => [723],
    724 => [342, 1782],
    725 => [1485],
    726 => [314, 1451],
    727 => [661, 1348],
    728 => [1569],
    729 => [707],
    730 => [658, 1656],
    731 => [295],
    732 => [59, 1368],
    733 => [590, 733],
    734 => [552, 638, 1908],
    735 => [834],
    736 => [983],
    737 => [83, 609],
    738 => [1189, 1339, 1647],
    739 => [947, 1588],
    740 => [35, 1883],
    741 => [158, 784],
    742 => [224],
    743 => [240, 420],
    744 => [480, 504],
    745 => [1604],
    746 => [252, 823, 1225],
    747 => [680],
    748 => [1366, 1474],
    749 => [404, 1578],
    750 => [31, 271, 313],
    751 => [302],
    752 => [267],
    753 => [292, 1848],
    754 => [1394, 1847],
    755 => [755],
    756 => [1168],
    757 => [410, 1352, 1484, 1830],
    758 => [852, 1037],
    759 => [759],
    760 => [608],
    761 => [1060, 1272, 1943],
    762 => [130, 1533],
    763 => [774],
    764 => [1270],
    765 => [518],
    766 => [669, 829, 1477],
    767 => [115, 1933, 1935],
    768 => [768],
    769 => [415, 1475],
    770 => [1087, 1370],
    771 => [652],
    772 => [134, 338, 1102, 1865],
    773 => [1678, 1995],
    774 => [763, 1712],
    775 => [439, 981, 1505],
    776 => [776, 1284],
    777 => [915, 1192],
    778 => [1268, 1269, 1371],
    779 => [1101],
    780 => [696, 894, 1144, 1339],
    781 => [386, 1464],
    782 => [357],
    783 => [7, 483],
    784 => [741, 1149],
    785 => [324, 572, 817],
    786 => [155, 1460],
    787 => [105, 1368],
    788 => [196, 1143, 1433],
    789 => [124, 944, 1216, 1829],
    790 => [46, 790, 1361],
    791 => [323, 413, 1564, 1704, 1775],
    792 => [144, 1079, 1839, 1860],
    793 => [1248, 1880],
    794 => [444, 1739, 1862],
    795 => [861],
    796 => [1997],
    797 => [991, 1256, 1282],
    798 => [1666],
    799 => [699, 895],
    800 => [76, 325, 350, 1808],
    801 => [34, 442, 1153],
    802 => [1035],
    803 => [536, 1294],
    804 => [348, 982],
    805 => [292, 1382],
    806 => [84, 1162],
    807 => [504],
    808 => [165, 808],
    809 => [16, 1298, 1542],
    810 => [1127],
    811 => [1911],
    812 => [406, 538],
    813 => [8, 1733],
    814 => [1140],
    815 => [1400, 1596],
    816 => [517, 1648],
    817 => [57, 307, 785, 1596],
    818 => [246, 633],
    819 => [1955, 1956],
    820 => [820, 1677],
    821 => [1440, 1879],
    822 => [377, 1032],
    823 => [39, 683, 746, 1313],
    824 => [334, 566],
    825 => [125],
    826 => [995],
    827 => [827, 1328],
    828 => [828, 1215],
    829 => [766, 1549],
    830 => [0, 256, 319, 345, 576],
    831 => [159],
    832 => [1320],
    833 => [1772, 1891],
    834 => [735, 834],
    835 => [835, 908],
    836 => [1975],
    837 => [1491],
    838 => [838],
    839 => [401, 1068, 1236, 1780, 1849],
    840 => [840, 1069],
    841 => [1702],
    842 => [1669],
    843 => [209],
    844 => [1940],
    845 => [211, 898, 1508, 1708],
    846 => [627],
    847 => [1037, 1369],
    848 => [1237],
    849 => [1136, 1800, 1856],
    850 => [1116],
    851 => [1480, 1759],
    852 => [758, 1515],
    853 => [1708],
    854 => [886],
    855 => [1853],
    856 => [312, 596, 1485, 1990],
    857 => [931, 1697],
    858 => [1912],
    859 => [155],
    860 => [922],
    861 => [109, 795, 1971],
    862 => [58, 298, 1392],
    863 => [276, 1856],
    864 => [131, 1690],
    865 => [228, 933, 1913],
    866 => [900, 1932],
    867 => [1700],
    868 => [205, 1363],
    869 => [1954],
    870 => [43],
    871 => [1660],
    872 => [701, 1226, 1252],
    873 => [285, 687],
    874 => [1181, 1915],
    875 => [407, 613, 1353],
    876 => [1218],
    877 => [51, 937],
    878 => [1733],
    879 => [199, 1315],
    880 => [208],
    881 => [1708],
    882 => [1108],
    883 => [36, 1682],
    884 => [363, 511],
    885 => [396, 983],
    886 => [622, 854],
    887 => [887],
    888 => [214, 580, 1272],
    889 => [889],
    890 => [1387],
    891 => [106, 571],
    892 => [1433],
    893 => [1032, 1638],
    894 => [224, 454, 780],
    895 => [85, 799],
    896 => [371],
    897 => [591, 1721],
    898 => [845],
    899 => [899],
    900 => [53, 107, 866],
    901 => [279, 486, 1332, 1734],
    902 => [207, 1043, 1164, 1491],
    903 => [143, 416, 1015, 1722],
    904 => [1178],
    905 => [226, 358],
    906 => [193, 1001],
    907 => [964],
    908 => [89, 835],
    909 => [707, 963],
    910 => [556, 910, 1495],
    911 => [1203, 1613, 1954],
    912 => [1348],
    913 => [406],
    914 => [75],
    915 => [520, 777, 1463],
    916 => [916, 1422, 1537, 1799],
    917 => [265, 1487, 1824, 1920, 1931],
    918 => [1731, 1828],
    919 => [1116, 1794],
    920 => [275, 920],
    921 => [1218],
    922 => [860, 1433],
    923 => [137, 1455],
    924 => [1656],
    925 => [1628],
    926 => [586, 1846],
    927 => [1566],
    928 => [395, 1499, 1807],
    929 => [593, 1594],
    930 => [163],
    931 => [857],
    932 => [1319],
    933 => [865, 1113],
    934 => [279],
    935 => [218, 403],
    936 => [626, 1211, 1242, 1444],
    937 => [307, 877],
    938 => [1145, 1389],
    939 => [1396, 1981],
    940 => [940, 1415],
    941 => [1255, 1813],
    942 => [136, 1206, 1373],
    943 => [1540],
    944 => [789],
    945 => [82, 1500],
    946 => [946],
    947 => [739],
    948 => [676, 1077, 1783, 1985],
    949 => [673, 1271],
    950 => [211, 564, 1371],
    951 => [30, 996, 1546],
    952 => [952],
    953 => [1558],
    954 => [257, 1011, 1365, 1583],
    955 => [85, 1104],
    956 => [250, 956],
    957 => [1096],
    958 => [1750],
    959 => [1196, 1621],
    960 => [251, 304],
    961 => [357, 1727],
    962 => [962],
    963 => [362, 909],
    964 => [907, 1227, 1999],
    965 => [965],
    966 => [1593],
    967 => [570, 1159, 1544, 1960],
    968 => [76, 1541],
    969 => [43, 969],
    970 => [343, 1834],
    971 => [583],
    972 => [1763, 1993],
    973 => [1797, 1992],
    974 => [1835],
    975 => [437, 1790],
    976 => [1245, 1279],
    977 => [629, 1001],
    978 => [1192],
    979 => [107, 462, 1730],
    980 => [1631],
    981 => [311, 775, 1670],
    982 => [150, 804, 1561, 1920],
    983 => [472, 736, 885],
    984 => [115, 1116],
    985 => [547, 1829],
    986 => [1174],
    987 => [40, 386],
    988 => [41, 318, 434, 500, 1038],
    989 => [1002, 1922],
    990 => [1010, 1395],
    991 => [797],
    992 => [1432],
    993 => [530],
    994 => [296],
    995 => [151, 826, 1434],
    996 => [951, 1122],
    997 => [30, 1461],
    998 => [1372],
    999 => [514, 1283, 1386],
    1000 => [1499],
    1001 => [454, 906, 977],
    1002 => [989],
    1003 => [519, 1523, 1795],
    1004 => [280, 1229, 1946],
    1005 => [1534, 1538],
    1006 => [328, 1117],
    1007 => [158],
    1008 => [632, 1869],
    1009 => [262, 390, 573],
    1010 => [990, 1805],
    1011 => [297, 954],
    1012 => [1689],
    1013 => [130],
    1014 => [1903],
    1015 => [62, 681, 903, 1249, 1888],
    1016 => [128, 428],
    1017 => [1425, 1576, 1740],
    1018 => [313, 579, 1845],
    1019 => [1903],
    1020 => [262, 298],
    1021 => [350],
    1022 => [1126],
    1023 => [1371],
    1024 => [1024, 1237],
    1025 => [311],
    1026 => [1431, 1437],
    1027 => [151],
    1028 => [197],
    1029 => [1029],
    1030 => [1194],
    1031 => [1031],
    1032 => [822, 893],
    1033 => [1618, 1795],
    1034 => [292, 1822],
    1035 => [802, 1667],
    1036 => [1214],
    1037 => [758, 847],
    1038 => [491, 988],
    1039 => [36],
    1040 => [1584, 1768],
    1041 => [266],
    1042 => [444, 1104, 1220],
    1043 => [4, 110, 902],
    1044 => [1633, 1682],
    1045 => [296, 1652],
    1046 => [1444],
    1047 => [1047, 1255],
    1048 => [649, 669],
    1049 => [1882],
    1050 => [1573],
    1051 => [481],
    1052 => [1149],
    1053 => [1441],
    1054 => [367, 1928],
    1055 => [695],
    1056 => [120],
    1057 => [1410, 1684],
    1058 => [500],
    1059 => [697, 1944],
    1060 => [333, 761, 1310, 1566],
    1061 => [140, 1061, 1492],
    1062 => [135, 682, 1062, 1377],
    1063 => [1519, 1587, 1858],
    1064 => [158, 666],
    1065 => [1459, 1467, 1902],
    1066 => [1969],
    1067 => [1218],
    1068 => [839],
    1069 => [840, 1574],
    1070 => [1814],
    1071 => [361],
    1072 => [651, 1218],
    1073 => [31, 38],
    1074 => [1241, 1468],
    1075 => [1075],
    1076 => [1490, 1634],
    1077 => [948, 1111, 1279, 1832],
    1078 => [1078],
    1079 => [792],
    1080 => [1327],
    1081 => [679, 1653, 1719],
    1082 => [584],
    1083 => [121, 197, 1341],
    1084 => [678],
    1085 => [1576],
    1086 => [1540, 1726],
    1087 => [770, 1403],
    1088 => [160, 1841],
    1089 => [198, 1399, 1627],
    1090 => [245, 1090],
    1091 => [80, 1307],
    1092 => [181, 336, 1211],
    1093 => [336, 1851],
    1094 => [1598, 1659],
    1095 => [11, 1337],
    1096 => [156, 957, 1103],
    1097 => [98, 327],
    1098 => [1235, 1261, 1567],
    1099 => [122, 1348],
    1100 => [241],
    1101 => [779, 1253, 1526],
    1102 => [772],
    1103 => [701, 1096, 1978],
    1104 => [717, 955, 1042],
    1105 => [170, 317],
    1106 => [1911],
    1107 => [43],
    1108 => [356, 882, 1123, 1991],
    1109 => [1120],
    1110 => [43, 56],
    1111 => [1077, 1547],
    1112 => [417],
    1113 => [270, 933],
    1114 => [188],
    1115 => [207, 547],
    1116 => [850, 919, 984, 1202],
    1117 => [375, 1006, 1423, 1727],
    1118 => [1855],
    1119 => [497, 1736],
    1120 => [1109, 1829],
    1121 => [260, 568, 1151, 1155, 1644],
    1122 => [996],
    1123 => [1108],
    1124 => [618, 1204, 1610, 1630, 1844],
    1125 => [87, 689, 1228],
    1126 => [173, 241, 625, 1022, 1461],
    1127 => [492, 669, 810],
    1128 => [302, 1128],
    1129 => [413],
    1130 => [508, 1852],
    1131 => [1918],
    1132 => [1413, 1527],
    1133 => [1133, 1654],
    1134 => [55, 482],
    1135 => [400],
    1136 => [849],
    1137 => [454, 648, 1646],
    1138 => [274, 307],
    1139 => [383, 1951],
    1140 => [814, 1140],
    1141 => [1141],
    1142 => [534, 1722],
    1143 => [121, 788],
    1144 => [98, 780],
    1145 => [938, 1145],
    1146 => [1242],
    1147 => [238, 1680, 1699],
    1148 => [1725],
    1149 => [784, 1052],
    1150 => [229, 1970],
    1151 => [1121, 1379],
    1152 => [1575],
    1153 => [801, 1288],
    1154 => [291],
    1155 => [1121, 1785],
    1156 => [291, 640],
    1157 => [565, 1157],
    1158 => [499, 1158],
    1159 => [967],
    1160 => [683],
    1161 => [281],
    1162 => [806, 1555, 1616],
    1163 => [1268],
    1164 => [902],
    1165 => [234, 429, 671],
    1166 => [1596],
    1167 => [402],
    1168 => [651, 670, 756],
    1169 => [546],
    1170 => [1170, 1478, 1877],
    1171 => [1171],
    1172 => [1224, 1856],
    1173 => [1367, 1584, 1820],
    1174 => [271, 345, 398, 986, 1295],
    1175 => [356, 1890],
    1176 => [1936, 1961],
    1177 => [24, 476, 1742],
    1178 => [904, 1280],
    1179 => [375],
    1180 => [175, 496],
    1181 => [874],
    1182 => [1182, 1184],
    1183 => [64, 1736],
    1184 => [1182],
    1185 => [72, 244],
    1186 => [501],
    1187 => [72],
    1188 => [377],
    1189 => [738],
    1190 => [662, 1987],
    1191 => [52],
    1192 => [777, 978],
    1193 => [717],
    1194 => [1030, 1272],
    1195 => [112, 183],
    1196 => [13, 959, 1308, 1691],
    1197 => [1197],
    1198 => [390, 1729],
    1199 => [1242],
    1200 => [1815],
    1201 => [672, 1433],
    1202 => [1116, 1691],
    1203 => [911],
    1204 => [1124, 1420],
    1205 => [1428, 1942],
    1206 => [488, 942, 1603, 1608],
    1207 => [545],
    1208 => [1583],
    1209 => [596],
    1210 => [1580],
    1211 => [936, 1092],
    1212 => [1317],
    1213 => [1213],
    1214 => [1036, 1391, 1395],
    1215 => [828],
    1216 => [789],
    1217 => [1241],
    1218 => [876, 921, 1067, 1072],
    1219 => [236],
    1220 => [1042],
    1221 => [1531, 1669],
    1222 => [216, 668, 1222, 1773, 1884],
    1223 => [330, 1591],
    1224 => [1172, 1260, 1677],
    1225 => [746],
    1226 => [872],
    1227 => [62, 964],
    1228 => [423, 1125],
    1229 => [528, 1004, 1667],
    1230 => [70, 347],
    1231 => [1231, 1955],
    1232 => [232, 456],
    1233 => [17, 644],
    1234 => [1239, 1737],
    1235 => [455, 1098, 1910],
    1236 => [52, 839],
    1237 => [848, 1024],
    1238 => [563, 1824],
    1239 => [29, 1234],
    1240 => [1240],
    1241 => [1074, 1217],
    1242 => [936, 1146, 1199],
    1243 => [232, 1298],
    1244 => [193],
    1245 => [976, 1321],
    1246 => [61, 1469],
    1247 => [1247],
    1248 => [793],
    1249 => [594, 1015],
    1250 => [415],
    1251 => [1732],
    1252 => [872, 1454, 1925],
    1253 => [1101, 1315],
    1254 => [510],
    1255 => [941, 1047],
    1256 => [797],
    1257 => [629, 1663, 1881],
    1258 => [429, 1740],
    1259 => [634],
    1260 => [1224],
    1261 => [376, 541, 1098, 1624],
    1262 => [1783],
    1263 => [694],
    1264 => [603, 1495, 1504],
    1265 => [1868],
    1266 => [1266, 1553],
    1267 => [436, 1403],
    1268 => [778, 1163, 1900],
    1269 => [778],
    1270 => [215, 524, 764],
    1271 => [949, 1271, 1329],
    1272 => [434, 761, 888, 1194],
    1273 => [1565, 1605],
    1274 => [566, 1612, 1634, 1878],
    1275 => [269, 498, 1484, 1537],
    1276 => [1876],
    1277 => [1819],
    1278 => [73],
    1279 => [284, 976, 1077, 1657],
    1280 => [398, 1178, 1755],
    1281 => [1281],
    1282 => [652, 659, 797, 1463],
    1283 => [999],
    1284 => [776],
    1285 => [525],
    1286 => [230, 362],
    1287 => [1287, 1882],
    1288 => [1153],
    1289 => [613],
    1290 => [1432],
    1291 => [464],
    1292 => [1605],
    1293 => [1293],
    1294 => [148, 803, 1443],
    1295 => [1174],
    1296 => [1296, 1592],
    1297 => [109, 1792],
    1298 => [93, 809, 1243],
    1299 => [1299, 1975],
    1300 => [1441],
    1301 => [1793, 1856],
    1302 => [335],
    1303 => [614, 1307, 1941],
    1304 => [1847],
    1305 => [186],
    1306 => [1306, 1765],
    1307 => [265, 310, 1091, 1303],
    1308 => [1196, 1916],
    1309 => [1365, 1831],
    1310 => [1060],
    1311 => [1639],
    1312 => [127, 1481, 1750],
    1313 => [592, 823],
    1314 => [1552, 1863],
    1315 => [94, 879, 1253],
    1316 => [326],
    1317 => [1212, 1936],
    1318 => [172, 1986],
    1319 => [932, 1319],
    1320 => [832, 1512],
    1321 => [138, 1245],
    1322 => [434, 1439],
    1323 => [1323, 1715],
    1324 => [432],
    1325 => [1325, 1445],
    1326 => [1572],
    1327 => [693, 1080, 1494, 1641],
    1328 => [827],
    1329 => [182, 693, 1271],
    1330 => [174],
    1331 => [1331],
    1332 => [901],
    1333 => [103, 1333, 1404],
    1334 => [193, 1615],
    1335 => [1335, 1516],
    1336 => [569],
    1337 => [600, 1095],
    1338 => [258],
    1339 => [738, 780, 1662],
    1340 => [462],
    1341 => [1083],
    1342 => [1662],
    1343 => [130, 1615],
    1344 => [242, 1344],
    1345 => [527, 1600],
    1346 => [647],
    1347 => [48],
    1348 => [727, 912, 1099, 1413],
    1349 => [1506],
    1350 => [1544],
    1351 => [301, 1351],
    1352 => [647, 757, 1683],
    1353 => [875],
    1354 => [1432, 1771],
    1355 => [111, 213, 600, 1818, 1915],
    1356 => [604, 1506],
    1357 => [140],
    1358 => [1990],
    1359 => [1706],
    1360 => [484, 650],
    1361 => [790, 1633],
    1362 => [255],
    1363 => [868],
    1364 => [7, 172, 1364],
    1365 => [422, 954, 1309, 1586],
    1366 => [748],
    1367 => [1173],
    1368 => [732, 787],
    1369 => [337, 847, 1682],
    1370 => [770],
    1371 => [585, 778, 950, 1023, 1821],
    1372 => [998, 1372, 1957],
    1373 => [942],
    1374 => [720],
    1375 => [39, 232, 1871],
    1376 => [1911],
    1377 => [322, 1062],
    1378 => [504],
    1379 => [1151, 1939],
    1380 => [1380],
    1381 => [1787],
    1382 => [805],
    1383 => [174, 1636],
    1384 => [317, 1384],
    1385 => [1781],
    1386 => [12, 999, 1843],
    1387 => [486, 890],
    1388 => [20],
    1389 => [938],
    1390 => [1390, 1623],
    1391 => [1214],
    1392 => [862, 1669],
    1393 => [300, 340, 1817, 1841],
    1394 => [467, 754],
    1395 => [990, 1214, 1395],
    1396 => [79, 939, 1881],
    1397 => [464, 495, 1991],
    1398 => [1398, 1642, 1686],
    1399 => [191, 1089, 1643],
    1400 => [815],
    1401 => [146, 555],
    1402 => [639],
    1403 => [655, 1087, 1267, 1700],
    1404 => [1333],
    1405 => [349, 1638, 1746],
    1406 => [411, 460, 1406],
    1407 => [1407, 1459, 1688],
    1408 => [1534],
    1409 => [1731],
    1410 => [22, 1057, 1734],
    1411 => [210, 421, 1783],
    1412 => [1631],
    1413 => [1132, 1348],
    1414 => [419, 1680],
    1415 => [684, 940],
    1416 => [68],
    1417 => [1809],
    1418 => [448],
    1419 => [2],
    1420 => [714, 1204],
    1421 => [72, 1897],
    1422 => [916],
    1423 => [1117],
    1424 => [1745, 1749],
    1425 => [692, 1017],
    1426 => [692, 1565],
    1427 => [445, 1488, 1810],
    1428 => [425, 1205, 1428],
    1429 => [391, 1934],
    1430 => [67, 1690],
    1431 => [60, 202, 717, 1026, 1558],
    1432 => [992, 1290, 1354],
    1433 => [788, 892, 922, 1201],
    1434 => [238, 510, 995],
    1435 => [84],
    1436 => [331],
    1437 => [1026],
    1438 => [300],
    1439 => [689, 1322],
    1440 => [821, 1573],
    1441 => [1053, 1300, 1505, 1967],
    1442 => [338],
    1443 => [1294, 1696],
    1444 => [936, 1046],
    1445 => [117, 1325],
    1446 => [343],
    1447 => [1465],
    1448 => [1520],
    1449 => [399, 1674],
    1450 => [1897],
    1451 => [726, 1694],
    1452 => [299],
    1453 => [660, 1547],
    1454 => [1252, 1551, 1762],
    1455 => [923],
    1456 => [290, 1456],
    1457 => [1457],
    1458 => [1626, 1645],
    1459 => [1065, 1407],
    1460 => [786],
    1461 => [997, 1126, 1661],
    1462 => [1596],
    1463 => [915, 1282],
    1464 => [485, 781],
    1465 => [246, 1447, 1613, 1797],
    1466 => [143],
    1467 => [1065],
    1468 => [1074, 1919],
    1469 => [1246],
    1470 => [74, 273],
    1471 => [100, 331, 664, 1952],
    1472 => [367],
    1473 => [1473],
    1474 => [209, 220, 532, 748, 1760],
    1475 => [769, 1921],
    1476 => [91, 1487],
    1477 => [766, 1711, 1729, 1766],
    1478 => [1170],
    1479 => [111],
    1480 => [851],
    1481 => [1312, 1481],
    1482 => [695],
    1483 => [463, 1599],
    1484 => [535, 757, 1275],
    1485 => [725, 856, 1485],
    1486 => [164, 698, 1756],
    1487 => [155, 917, 1476, 1772],
    1488 => [597, 1427],
    1489 => [675],
    1490 => [1076, 1672, 1922],
    1491 => [123, 606, 837, 902],
    1492 => [1061],
    1493 => [640],
    1494 => [351, 1327],
    1495 => [910, 1264],
    1496 => [1567],
    1497 => [1497],
    1498 => [1723],
    1499 => [928, 1000, 1995],
    1500 => [321, 462, 945],
    1501 => [32],
    1502 => [330, 384, 1707],
    1503 => [203, 1687],
    1504 => [1264],
    1505 => [775, 1441, 1917],
    1506 => [1349, 1356],
    1507 => [301, 537],
    1508 => [845],
    1509 => [1981],
    1510 => [440],
    1511 => [591],
    1512 => [644, 1320],
    1513 => [1879],
    1514 => [502, 1705],
    1515 => [852],
    1516 => [129, 1335, 1827],
    1517 => [551, 1752],
    1518 => [1697, 1714, 1873],
    1519 => [1063, 1519, 1898],
    1520 => [137, 597, 1448],
    1521 => [217],
    1522 => [545, 1522, 1801],
    1523 => [1003],
    1524 => [92],
    1525 => [306],
    1526 => [1101],
    1527 => [1132],
    1528 => [1691],
    1529 => [1630],
    1530 => [303],
    1531 => [1221],
    1532 => [1532],
    1533 => [704, 762],
    1534 => [1005, 1408, 1966],
    1535 => [550, 1535],
    1536 => [378, 446, 470],
    1537 => [916, 1275],
    1538 => [1005, 1619],
    1539 => [49, 1720],
    1540 => [943, 1086],
    1541 => [968, 1777],
    1542 => [809],
    1543 => [464],
    1544 => [967, 1350],
    1545 => [253, 1618],
    1546 => [702, 951],
    1547 => [1111, 1453],
    1548 => [460],
    1549 => [829],
    1550 => [1758],
    1551 => [346, 378, 593, 1454],
    1552 => [1314, 1552],
    1553 => [1266],
    1554 => [1554],
    1555 => [1162, 1673],
    1556 => [616],
    1557 => [613],
    1558 => [953, 1431],
    1559 => [630, 1879],
    1560 => [488, 1901],
    1561 => [206, 982],
    1562 => [9],
    1563 => [1715],
    1564 => [61, 791],
    1565 => [1273, 1426],
    1566 => [927, 1060],
    1567 => [1098, 1496],
    1568 => [394, 1568, 1999],
    1569 => [728, 1591],
    1570 => [276, 1602],
    1571 => [1582],
    1572 => [1326, 1572, 1741],
    1573 => [48, 1050, 1440, 1817],
    1574 => [1069],
    1575 => [575, 1152, 1605, 1886],
    1576 => [677, 1017, 1085],
    1577 => [1953],
    1578 => [749, 1578],
    1579 => [1652, 1974, 1992],
    1580 => [137, 1210],
    1581 => [1696],
    1582 => [243, 1571],
    1583 => [954, 1208],
    1584 => [606, 1040, 1173],
    1585 => [102, 648],
    1586 => [152, 1365],
    1587 => [1063, 1972],
    1588 => [739, 1990],
    1589 => [141, 656, 1589],
    1590 => [1590],
    1591 => [1223, 1569],
    1592 => [1296],
    1593 => [365, 515, 966, 1698],
    1594 => [929, 1826],
    1595 => [1595],
    1596 => [137, 815, 817, 1166, 1462],
    1597 => [1969],
    1598 => [700, 1094],
    1599 => [119, 1483, 1671],
    1600 => [1345],
    1601 => [1601, 1731],
    1602 => [1570],
    1603 => [1206, 1984],
    1604 => [215, 745],
    1605 => [1273, 1292, 1575],
    1606 => [1606],
    1607 => [1649],
    1608 => [530, 1206],
    1609 => [199],
    1610 => [1124, 1675],
    1611 => [1611],
    1612 => [1274, 1923],
    1613 => [911, 1465],
    1614 => [194, 689],
    1615 => [602, 1334, 1343],
    1616 => [52, 1162],
    1617 => [1956],
    1618 => [613, 1033, 1545],
    1619 => [1538],
    1620 => [632, 1620],
    1621 => [959],
    1622 => [636, 663],
    1623 => [44, 674, 1390],
    1624 => [1261],
    1625 => [119],
    1626 => [1458],
    1627 => [1089, 1627],
    1628 => [450, 925, 1628],
    1629 => [142],
    1630 => [1124, 1529],
    1631 => [223, 980, 1412, 1788],
    1632 => [438, 721],
    1633 => [1044, 1361],
    1634 => [710, 1076, 1274],
    1635 => [378, 440],
    1636 => [504, 1383, 1988],
    1637 => [46, 347],
    1638 => [893, 1405],
    1639 => [26, 392, 1311, 1639],
    1640 => [1865],
    1641 => [1327],
    1642 => [1398, 1723],
    1643 => [1399],
    1644 => [186, 1121, 1644, 1804],
    1645 => [124, 1458],
    1646 => [1137, 1859],
    1647 => [738],
    1648 => [430, 816],
    1649 => [619, 1607],
    1650 => [14, 542],
    1651 => [6, 1970],
    1652 => [1045, 1579],
    1653 => [1081, 1742],
    1654 => [1133],
    1655 => [1924],
    1656 => [90, 730, 924],
    1657 => [1279],
    1658 => [353, 1693],
    1659 => [16, 1094],
    1660 => [195, 871, 1991],
    1661 => [399, 465, 1461],
    1662 => [1339, 1342],
    1663 => [315, 1257],
    1664 => [139],
    1665 => [1766],
    1666 => [198, 798],
    1667 => [552, 1035, 1229],
    1668 => [364],
    1669 => [654, 842, 1221, 1392],
    1670 => [981],
    1671 => [1599],
    1672 => [544, 627, 1490],
    1673 => [167, 347, 1555],
    1674 => [68, 278, 376, 686, 1449],
    1675 => [459, 1610, 1812],
    1676 => [616, 1878],
    1677 => [820, 1224],
    1678 => [433, 633, 773],
    1679 => [108],
    1680 => [1147, 1414],
    1681 => [237],
    1682 => [436, 883, 1044, 1369],
    1683 => [1352],
    1684 => [1057, 1770],
    1685 => [176],
    1686 => [369, 1398, 1751, 1906],
    1687 => [363, 1503],
    1688 => [688, 1407, 1712],
    1689 => [1012, 1689],
    1690 => [864, 1430],
    1691 => [77, 1196, 1202, 1528, 1973],
    1692 => [1692],
    1693 => [1658],
    1694 => [1451, 1751, 1870],
    1695 => [685, 1695],
    1696 => [1443, 1581],
    1697 => [501, 857, 1518],
    1698 => [1593],
    1699 => [92, 1147, 1720],
    1700 => [867, 1403],
    1701 => [225, 394],
    1702 => [841, 1709],
    1703 => [600],
    1704 => [128, 237, 791, 1894],
    1705 => [479, 1514],
    1706 => [1359, 1706],
    1707 => [657, 1502],
    1708 => [845, 853, 881, 1910],
    1709 => [668, 1702],
    1710 => [113],
    1711 => [1477],
    1712 => [774, 1688],
    1713 => [1806],
    1714 => [490, 1518],
    1715 => [1323, 1563],
    1716 => [17],
    1717 => [550],
    1718 => [215],
    1719 => [406, 1081],
    1720 => [1539, 1699, 1935],
    1721 => [325, 721, 897],
    1722 => [293, 903, 1142],
    1723 => [1498, 1642],
    1724 => [1724, 1836],
    1725 => [237, 1148],
    1726 => [1086, 1835],
    1727 => [961, 1117],
    1728 => [306, 595],
    1729 => [547, 1198, 1477],
    1730 => [513, 979, 1753],
    1731 => [918, 1409, 1601],
    1732 => [1251, 1732],
    1733 => [563, 813, 878, 1850],
    1734 => [581, 628, 901, 1410],
    1735 => [484],
    1736 => [1119, 1183],
    1737 => [1234, 1860],
    1738 => [1738],
    1739 => [794],
    1740 => [1017, 1258],
    1741 => [1572],
    1742 => [1177, 1653],
    1743 => [677],
    1744 => [282, 440, 631],
    1745 => [45, 1424],
    1746 => [63, 1405],
    1747 => [1992],
    1748 => [1878],
    1749 => [1424, 1753],
    1750 => [958, 1312],
    1751 => [1686, 1694],
    1752 => [1517],
    1753 => [1730, 1749],
    1754 => [174],
    1755 => [164, 303, 1280],
    1756 => [1486, 1952, 1966],
    1757 => [579],
    1758 => [500, 1550],
    1759 => [851, 1759],
    1760 => [1474],
    1761 => [248, 1761],
    1762 => [1454],
    1763 => [15, 472, 972],
    1764 => [455],
    1765 => [1306],
    1766 => [1477, 1665],
    1767 => [108],
    1768 => [1040],
    1769 => [1769],
    1770 => [1684],
    1771 => [1354, 1842],
    1772 => [833, 1487],
    1773 => [1222],
    1774 => [1931],
    1775 => [405, 791],
    1776 => [589, 1776],
    1777 => [607, 1541],
    1778 => [1778],
    1779 => [73, 608],
    1780 => [839],
    1781 => [428, 1385],
    1782 => [724, 1805],
    1783 => [948, 1262, 1411],
    1784 => [1784],
    1785 => [1155],
    1786 => [464],
    1787 => [690, 1381, 1825],
    1788 => [361, 662, 1631],
    1789 => [231, 1834],
    1790 => [39, 975],
    1791 => [263, 1988],
    1792 => [1297],
    1793 => [218, 1301],
    1794 => [104, 190, 919],
    1795 => [1003, 1033],
    1796 => [1796, 1904],
    1797 => [595, 973, 1465],
    1798 => [143, 529],
    1799 => [916],
    1800 => [849, 1816],
    1801 => [1522],
    1802 => [259],
    1803 => [218],
    1804 => [1644],
    1805 => [42, 364, 1010, 1782],
    1806 => [1713, 1954],
    1807 => [928],
    1808 => [800],
    1809 => [546, 1417, 1851],
    1810 => [1427, 1974],
    1811 => [1966],
    1812 => [1675],
    1813 => [941],
    1814 => [30, 1070],
    1815 => [244, 1200, 1965],
    1816 => [264, 1800],
    1817 => [425, 1393, 1573],
    1818 => [1355],
    1819 => [72, 1277],
    1820 => [1173],
    1821 => [1371],
    1822 => [354, 705, 1034],
    1823 => [659],
    1824 => [917, 1238],
    1825 => [1787, 1825],
    1826 => [1594],
    1827 => [1516],
    1828 => [918],
    1829 => [789, 985, 1120, 1980],
    1830 => [277, 757],
    1831 => [1309],
    1832 => [1077],
    1833 => [551],
    1834 => [970, 1789],
    1835 => [974, 1726, 1835],
    1836 => [221, 1724],
    1837 => [96, 578],
    1838 => [373],
    1839 => [792],
    1840 => [1840],
    1841 => [1088, 1393],
    1842 => [1771, 1842],
    1843 => [1386],
    1844 => [1124],
    1845 => [1018],
    1846 => [926],
    1847 => [754, 1304],
    1848 => [212, 492, 753],
    1849 => [839],
    1850 => [525, 1733],
    1851 => [1093, 1809],
    1852 => [1130, 1852],
    1853 => [702, 855],
    1854 => [1946],
    1855 => [267, 1118],
    1856 => [637, 849, 863, 1172, 1301],
    1857 => [74, 662],
    1858 => [1063],
    1859 => [1646],
    1860 => [792, 1737],
    1861 => [6, 183, 362, 719],
    1862 => [125, 794],
    1863 => [562, 711, 1314],
    1864 => [457],
    1865 => [438, 772, 1640],
    1866 => [142, 380, 582],
    1867 => [1867],
    1868 => [444, 1265],
    1869 => [1008],
    1870 => [1694],
    1871 => [226, 1375],
    1872 => [177, 595],
    1873 => [1518],
    1874 => [423],
    1875 => [1924],
    1876 => [1276, 1876],
    1877 => [1170, 1899],
    1878 => [282, 1274, 1676, 1748],
    1879 => [821, 1513, 1559],
    1880 => [793, 1974],
    1881 => [1257, 1396],
    1882 => [1049, 1287],
    1883 => [68, 740],
    1884 => [1222],
    1885 => [1934],
    1886 => [1575],
    1887 => [1966],
    1888 => [1015],
    1889 => [428],
    1890 => [1175],
    1891 => [833],
    1892 => [129],
    1893 => [84],
    1894 => [217, 706, 1704],
    1895 => [422],
    1896 => [1896],
    1897 => [393, 1421, 1450],
    1898 => [1519],
    1899 => [1877],
    1900 => [316, 1268],
    1901 => [1560, 1943],
    1902 => [1065, 1959],
    1903 => [1014, 1019, 1903],
    1904 => [1796],
    1905 => [1905],
    1906 => [1686],
    1907 => [347],
    1908 => [734, 1938],
    1909 => [372, 645],
    1910 => [1235, 1708],
    1911 => [811, 1106, 1376, 1911],
    1912 => [184, 420, 858],
    1913 => [126, 865],
    1914 => [479],
    1915 => [874, 1355, 1915],
    1916 => [1308],
    1917 => [1505],
    1918 => [13, 116, 294, 1131, 1946],
    1919 => [370, 1468],
    1920 => [917, 982],
    1921 => [553, 576, 1475],
    1922 => [989, 1490],
    1923 => [1612],
    1924 => [1655, 1875, 1935],
    1925 => [505, 1252],
    1926 => [1926],
    1927 => [256],
    1928 => [19, 247, 1054],
    1929 => [1975],
    1930 => [556],
    1931 => [187, 917, 1774],
    1932 => [866],
    1933 => [767, 1933],
    1934 => [1429, 1885, 1934],
    1935 => [381, 767, 1720, 1924],
    1936 => [583, 1176, 1317, 1936],
    1937 => [249, 1937],
    1938 => [1908],
    1939 => [157, 1379],
    1940 => [844, 1940],
    1941 => [1303],
    1942 => [1205, 1979],
    1943 => [761, 1901],
    1944 => [507, 722, 1059],
    1945 => [691],
    1946 => [457, 1004, 1854, 1918],
    1947 => [10],
    1948 => [494],
    1949 => [1949],
    1950 => [672],
    1951 => [1139, 1951],
    1952 => [122, 1471, 1756],
    1953 => [1577, 1953],
    1954 => [869, 911, 1806],
    1955 => [666, 819, 1231],
    1956 => [819, 1617],
    1957 => [1372],
    1958 => [629],
    1959 => [687, 1902],
    1960 => [492, 967],
    1961 => [561, 1176],
    1962 => [471, 1964],
    1963 => [612],
    1964 => [1962],
    1965 => [1815],
    1966 => [1534, 1756, 1811, 1887],
    1967 => [1441],
    1968 => [263],
    1969 => [706, 1066, 1597],
    1970 => [1150, 1651],
    1971 => [861],
    1972 => [1587],
    1973 => [1691],
    1974 => [60, 1579, 1810, 1880],
    1975 => [25, 138, 836, 1299, 1929],
    1976 => [675],
    1977 => [402, 630],
    1978 => [1103],
    1979 => [66, 1942],
    1980 => [382, 1829],
    1981 => [939, 1509],
    1982 => [427, 569],
    1983 => [638],
    1984 => [1603],
    1985 => [948],
    1986 => [1318],
    1987 => [467, 1190],
    1988 => [473, 1636, 1791],
    1989 => [462],
    1990 => [856, 1358, 1588],
    1991 => [1108, 1397, 1660],
    1992 => [235, 973, 1579, 1747],
    1993 => [972],
    1994 => [42, 93, 593],
    1995 => [773, 1499],
    1996 => [95, 1996],
    1997 => [510, 796],
    1998 => [626],
    1999 => [964, 1568]
);

{
    # Day 12 part 1.
    my %inGroup;

    sub markMembers
    {
        my ( $member ) = @_;

        $inGroup{$member} = 1;

        my @children = @{$day12Input{$member}};
#       printf "member %d has %d children.\n", $member, scalar(@children);

        for my $child (@children)
        {
            if (!defined($inGroup{$child}))
            {
                markMembers($child);
                $inGroup{$child} = 1;
            }
        }
    }

    # Mark the group with root at 0.
    markMembers(0);

    printf "day 12 part 1 group 0 has %d members\n", scalar(keys %inGroup);

    # Now find and mark other groups.
    my $nGroups = 1;

    while (scalar(keys %day12Input) > scalar(keys %inGroup))
    {
        for my $i ( 0 .. keys %day12Input )
        {
            if (!defined($inGroup{$i}))
            {
                markMembers($i);
                $nGroups++;
                last;
            }
        }
    }
    printf "day 12 part 2 %d groups\n", $nGroups;
}
