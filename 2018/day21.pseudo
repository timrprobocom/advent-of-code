
{
    r3 = 0;
j6:
    while( 1 )
    {
        r2 = r3 | 0x10000;
        r3 = 1099159;
j8:
        while( 1 )
        {
            r1 = r2 & 0xff;
            r3 = (((r3 + r1) & 0xffffff) * 65899) & 0xffffff;
            if( r2 < 256 )
                break;
            r2 = r2 / 256;
        }

    j28:
        if( r3 == r0 && r1 > 0)
            exit
    }
}

// So, to exit, r1 > 0, r2 < 256, r3 == r0.


seti 123 0 3
bani 3 456 3
eqri 3 72 3
addr 3 4 4
seti 0 0 4
seti 0 4 3        #   r3 = 0
bori 3 65536 2    # 6 r2 = r3 | 0x10000
seti 1099159 8 3  # 7 r3 = 1099159
bani 2 255 1      # 8 r1 = r2 & 0xff
addr 3 1 3        # 9 r3 += r1
bani 3 16777215 3 # 10  & 0xffffff
muli 3 65899 3    # 11  * 65899
bani 3 16777215 3 # 12  & 0xffffff
gtir 256 2 1      # 13 if r2 > 256
addr 1 4 4        # 14   skip
addi 4 1 4        # 15   skip
seti 27 6 4       # 16 jmp 28
seti 0 8 1        # 17   r1 = 0
addi 1 9999999999 5 # addi 1 1 5   # 18 Inner loop, r5 = r1+1
muli 5 256 5 # 19 r5 *= 256
gtrr 5 2 5   # 20 if r5 > r2
addr 5 4 4   # 21  skip next
addi 4 1 4   # 22  skip next
seti 25 5 4  # 23 jump to 26
addi 1 1 1   # 24   r1 ++
seti 17 1 4  # 25 jmp to 18
setr 1 2 2   # 26 r2 = r1
seti 7 0 4   #    jmp to 8
eqrr 3 0 1   # 28 if r3 == r0
addr 1 4 4   #  pc += r1 (EXIT)
seti 5 0 4
