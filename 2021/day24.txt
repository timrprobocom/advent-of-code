inp w           # Digit 0
mul x 0
add x z    
mod x 26   # 9 0 0 0
div z 1    
add x 14   # 9 14 0 0
eql x w    # 0 always
eql x 0    # 1
mul y 0    # 9 1 0 0
add y 25   # 9 1 25 0
mul y x    # 9 1 25 0
add y 1    # 9 1 26 0
mul z y    # 9 1 26 0
mul y 0    # 9 1 0 0
add y w    # 9 1 9 0
add y 14   # 9 1 23 0
mul y x    # 9 1 23 0
add z y    # 9 1 23 23   z is always input+14
inp w           # Digit 1
mul x 0
add x z
mod x 26   # x = (n[0]+14)%26
div z 1
add x 14   # x = (n[0]+14)%26+14
eql x w
eql x 0
mul y 0
add y 25   # y = 1 if (n[0]+14)%26+14 == n[1] else 26
mul y x
add y 1
mul z y     # z = (n[0]+14)*26
mul y 0
add y w
add y 2     # y = n[1]+2
mul y x     # x = 1
add z y     # z = (n[0]+14)*26+n[1]+2
inp w           # Digit 2
mul x 0
add x z
mod x 26
div z 1
add x 14
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 1
mul y x
add z y
inp w           # Digit 3
mul x 0
add x z
mod x 26
div z 1
add x 12
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 13
mul y x
add z y
inp w           # Digit 4
mul x 0
add x z
mod x 26
div z 1
add x 15
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 5
mul y x
add z y         # At this point, z is a base26 number of our digits + 14/2/1/13/5.
inp w           # Digit 5
mul x 0
add x z
mod x 26        # grab the last digit (dig[4]+5)
div z 26
add x -12      # Here's the first possible
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 5
mul y x
add z y
inp w           # Digit 6
mul x 0
add x z
mod x 26
div z 26
add x -12      # Here's the first possible
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 5
mul y x
add z y
inp w           # Digit 7
mul x 0
add x z
mod x 26
div z 1
add x 12
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 9
mul y x
add z y
inp w           # digit 8
mul x 0
add x z
mod x 26
div z 26
add x -7
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 3
mul y x
add z y
inp w           # digit 9
mul x 0
add x z
mod x 26
div z 1
add x 13
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 13
mul y x
add z y
inp w           # digit 10
mul x 0
add x z
mod x 26
div z 26
add x -8
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 2
mul y x
add z y
inp w           # digit 11
mul x 0
add x z
mod x 26
div z 26
add x -5
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 1
mul y x
add z y
inp w
mul x 0
add x z
mod x 26
div z 26
add x -10   # x=z%26-10
eql x w
eql x 0
mul y 0
add y 25
mul y x
add y 1
mul z y
mul y 0
add y w
add y 11
mul y x
add z y
inp w
mul x 0     # x=0 
add x z     # x=z 
mod x 26    # x=z%26
div z 26    # z=z/26
add x -7    # x=z%26-7
eql x w
eql x 0     # x = (z%26-7) != w
mul y 0
add y 25
mul y x     # y = 25 if (z%26-7) != w
add y 1    
mul z y     # z is 1 or 26
mul y 0
add y w
add y 8
mul y x     # y = (w+8)*(z%26-7 != w))
add z y
